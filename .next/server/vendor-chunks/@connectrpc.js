"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@connectrpc";
exports.ids = ["vendor-chunks/@connectrpc"];
exports.modules = {

/***/ "(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/compression.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-node/dist/esm/compression.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compressionBrotli: () => (/* binding */ compressionBrotli),\n/* harmony export */   compressionGzip: () => (/* binding */ compressionGzip)\n/* harmony export */ });\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zlib */ \"zlib\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @connectrpc/connect */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @connectrpc/connect */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _node_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node-error.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-error.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\nconst gzip = (0,util__WEBPACK_IMPORTED_MODULE_1__.promisify)(zlib__WEBPACK_IMPORTED_MODULE_0__.gzip);\nconst gunzip = (0,util__WEBPACK_IMPORTED_MODULE_1__.promisify)(zlib__WEBPACK_IMPORTED_MODULE_0__.gunzip);\nconst brotliCompress = (0,util__WEBPACK_IMPORTED_MODULE_1__.promisify)(zlib__WEBPACK_IMPORTED_MODULE_0__.brotliCompress);\nconst brotliDecompress = (0,util__WEBPACK_IMPORTED_MODULE_1__.promisify)(zlib__WEBPACK_IMPORTED_MODULE_0__.brotliDecompress);\n/**\n * The gzip compression algorithm, implemented with the Node.js built-in module\n * zlib. This value can be used for the `sendCompression` and `acceptCompression`\n * option of client transports, or for the `acceptCompression` option of server\n * plugins like `fastifyConnectPlugin` from @connectrpc/connect-fastify.\n */\nconst compressionGzip = {\n    name: \"gzip\",\n    compress(bytes) {\n        return gzip(bytes, {});\n    },\n    decompress(bytes, readMaxBytes) {\n        if (bytes.length == 0) {\n            return Promise.resolve(new Uint8Array(0));\n        }\n        return wrapZLibErrors(gunzip(bytes, {\n            maxOutputLength: readMaxBytes,\n        }), readMaxBytes);\n    },\n};\n/**\n * The brotli compression algorithm, implemented with the Node.js built-in module\n * zlib. This value can be used for the `sendCompression` and `acceptCompression`\n * option of client transports, or for the `acceptCompression` option of server\n * plugins like `fastifyConnectPlugin` from @connectrpc/connect-fastify.\n */\nconst compressionBrotli = {\n    name: \"br\",\n    compress(bytes) {\n        return brotliCompress(bytes, {});\n    },\n    decompress(bytes, readMaxBytes) {\n        if (bytes.length == 0) {\n            return Promise.resolve(new Uint8Array(0));\n        }\n        return wrapZLibErrors(brotliDecompress(bytes, {\n            maxOutputLength: readMaxBytes,\n        }), readMaxBytes);\n    },\n};\nfunction wrapZLibErrors(promise, readMaxBytes) {\n    return promise.catch((e) => {\n        const props = (0,_node_error_js__WEBPACK_IMPORTED_MODULE_2__.getNodeErrorProps)(e);\n        let code = _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Internal;\n        let message = \"decompression failed\";\n        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n        switch (props.code) {\n            case \"ERR_BUFFER_TOO_LARGE\":\n                code = _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.ResourceExhausted;\n                message = `message is larger than configured readMaxBytes ${readMaxBytes} after decompression`;\n                break;\n            case \"Z_DATA_ERROR\":\n            case \"ERR_PADDING_2\":\n                code = _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.InvalidArgument;\n                break;\n            default:\n                if (props.code !== undefined &&\n                    props.code.startsWith(\"ERR__ERROR_FORMAT_\")) {\n                    code = _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.InvalidArgument;\n                }\n                break;\n        }\n        return Promise.reject(new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_4__.ConnectError(message, code, undefined, undefined, e));\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC1ub2RlL2Rpc3QvZXNtL2NvbXByZXNzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2QjtBQUNJO0FBQ3dCO0FBQ0w7QUFDcEQsYUFBYSwrQ0FBUyxDQUFDLHNDQUFTO0FBQ2hDLGVBQWUsK0NBQVMsQ0FBQyx3Q0FBVztBQUNwQyx1QkFBdUIsK0NBQVMsQ0FBQyxnREFBbUI7QUFDcEQseUJBQXlCLCtDQUFTLENBQUMsa0RBQXFCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLHVDQUF1QztBQUN2QyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsaUVBQWlCO0FBQ3ZDLG1CQUFtQixxREFBSTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixxREFBSTtBQUMzQiw0RUFBNEUsY0FBYztBQUMxRjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIscURBQUk7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIscURBQUk7QUFDL0I7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDZEQUFZO0FBQzlDLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxhdHNcXG5vZGVfbW9kdWxlc1xcQGNvbm5lY3RycGNcXGNvbm5lY3Qtbm9kZVxcZGlzdFxcZXNtXFxjb21wcmVzc2lvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0ICogYXMgemxpYiBmcm9tIFwiemxpYlwiO1xuaW1wb3J0IHsgcHJvbWlzaWZ5IH0gZnJvbSBcInV0aWxcIjtcbmltcG9ydCB7IENvZGUsIENvbm5lY3RFcnJvciB9IGZyb20gXCJAY29ubmVjdHJwYy9jb25uZWN0XCI7XG5pbXBvcnQgeyBnZXROb2RlRXJyb3JQcm9wcyB9IGZyb20gXCIuL25vZGUtZXJyb3IuanNcIjtcbmNvbnN0IGd6aXAgPSBwcm9taXNpZnkoemxpYi5nemlwKTtcbmNvbnN0IGd1bnppcCA9IHByb21pc2lmeSh6bGliLmd1bnppcCk7XG5jb25zdCBicm90bGlDb21wcmVzcyA9IHByb21pc2lmeSh6bGliLmJyb3RsaUNvbXByZXNzKTtcbmNvbnN0IGJyb3RsaURlY29tcHJlc3MgPSBwcm9taXNpZnkoemxpYi5icm90bGlEZWNvbXByZXNzKTtcbi8qKlxuICogVGhlIGd6aXAgY29tcHJlc3Npb24gYWxnb3JpdGhtLCBpbXBsZW1lbnRlZCB3aXRoIHRoZSBOb2RlLmpzIGJ1aWx0LWluIG1vZHVsZVxuICogemxpYi4gVGhpcyB2YWx1ZSBjYW4gYmUgdXNlZCBmb3IgdGhlIGBzZW5kQ29tcHJlc3Npb25gIGFuZCBgYWNjZXB0Q29tcHJlc3Npb25gXG4gKiBvcHRpb24gb2YgY2xpZW50IHRyYW5zcG9ydHMsIG9yIGZvciB0aGUgYGFjY2VwdENvbXByZXNzaW9uYCBvcHRpb24gb2Ygc2VydmVyXG4gKiBwbHVnaW5zIGxpa2UgYGZhc3RpZnlDb25uZWN0UGx1Z2luYCBmcm9tIEBjb25uZWN0cnBjL2Nvbm5lY3QtZmFzdGlmeS5cbiAqL1xuZXhwb3J0IGNvbnN0IGNvbXByZXNzaW9uR3ppcCA9IHtcbiAgICBuYW1lOiBcImd6aXBcIixcbiAgICBjb21wcmVzcyhieXRlcykge1xuICAgICAgICByZXR1cm4gZ3ppcChieXRlcywge30pO1xuICAgIH0sXG4gICAgZGVjb21wcmVzcyhieXRlcywgcmVhZE1heEJ5dGVzKSB7XG4gICAgICAgIGlmIChieXRlcy5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXcgVWludDhBcnJheSgwKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHdyYXBaTGliRXJyb3JzKGd1bnppcChieXRlcywge1xuICAgICAgICAgICAgbWF4T3V0cHV0TGVuZ3RoOiByZWFkTWF4Qnl0ZXMsXG4gICAgICAgIH0pLCByZWFkTWF4Qnl0ZXMpO1xuICAgIH0sXG59O1xuLyoqXG4gKiBUaGUgYnJvdGxpIGNvbXByZXNzaW9uIGFsZ29yaXRobSwgaW1wbGVtZW50ZWQgd2l0aCB0aGUgTm9kZS5qcyBidWlsdC1pbiBtb2R1bGVcbiAqIHpsaWIuIFRoaXMgdmFsdWUgY2FuIGJlIHVzZWQgZm9yIHRoZSBgc2VuZENvbXByZXNzaW9uYCBhbmQgYGFjY2VwdENvbXByZXNzaW9uYFxuICogb3B0aW9uIG9mIGNsaWVudCB0cmFuc3BvcnRzLCBvciBmb3IgdGhlIGBhY2NlcHRDb21wcmVzc2lvbmAgb3B0aW9uIG9mIHNlcnZlclxuICogcGx1Z2lucyBsaWtlIGBmYXN0aWZ5Q29ubmVjdFBsdWdpbmAgZnJvbSBAY29ubmVjdHJwYy9jb25uZWN0LWZhc3RpZnkuXG4gKi9cbmV4cG9ydCBjb25zdCBjb21wcmVzc2lvbkJyb3RsaSA9IHtcbiAgICBuYW1lOiBcImJyXCIsXG4gICAgY29tcHJlc3MoYnl0ZXMpIHtcbiAgICAgICAgcmV0dXJuIGJyb3RsaUNvbXByZXNzKGJ5dGVzLCB7fSk7XG4gICAgfSxcbiAgICBkZWNvbXByZXNzKGJ5dGVzLCByZWFkTWF4Qnl0ZXMpIHtcbiAgICAgICAgaWYgKGJ5dGVzLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5ldyBVaW50OEFycmF5KDApKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gd3JhcFpMaWJFcnJvcnMoYnJvdGxpRGVjb21wcmVzcyhieXRlcywge1xuICAgICAgICAgICAgbWF4T3V0cHV0TGVuZ3RoOiByZWFkTWF4Qnl0ZXMsXG4gICAgICAgIH0pLCByZWFkTWF4Qnl0ZXMpO1xuICAgIH0sXG59O1xuZnVuY3Rpb24gd3JhcFpMaWJFcnJvcnMocHJvbWlzZSwgcmVhZE1heEJ5dGVzKSB7XG4gICAgcmV0dXJuIHByb21pc2UuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgY29uc3QgcHJvcHMgPSBnZXROb2RlRXJyb3JQcm9wcyhlKTtcbiAgICAgICAgbGV0IGNvZGUgPSBDb2RlLkludGVybmFsO1xuICAgICAgICBsZXQgbWVzc2FnZSA9IFwiZGVjb21wcmVzc2lvbiBmYWlsZWRcIjtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9zd2l0Y2gtZXhoYXVzdGl2ZW5lc3MtY2hlY2tcbiAgICAgICAgc3dpdGNoIChwcm9wcy5jb2RlKSB7XG4gICAgICAgICAgICBjYXNlIFwiRVJSX0JVRkZFUl9UT09fTEFSR0VcIjpcbiAgICAgICAgICAgICAgICBjb2RlID0gQ29kZS5SZXNvdXJjZUV4aGF1c3RlZDtcbiAgICAgICAgICAgICAgICBtZXNzYWdlID0gYG1lc3NhZ2UgaXMgbGFyZ2VyIHRoYW4gY29uZmlndXJlZCByZWFkTWF4Qnl0ZXMgJHtyZWFkTWF4Qnl0ZXN9IGFmdGVyIGRlY29tcHJlc3Npb25gO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIlpfREFUQV9FUlJPUlwiOlxuICAgICAgICAgICAgY2FzZSBcIkVSUl9QQURESU5HXzJcIjpcbiAgICAgICAgICAgICAgICBjb2RlID0gQ29kZS5JbnZhbGlkQXJndW1lbnQ7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGlmIChwcm9wcy5jb2RlICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMuY29kZS5zdGFydHNXaXRoKFwiRVJSX19FUlJPUl9GT1JNQVRfXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvZGUgPSBDb2RlLkludmFsaWRBcmd1bWVudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBDb25uZWN0RXJyb3IobWVzc2FnZSwgY29kZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGUpKTtcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/compression.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/connect-node-adapter.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-node/dist/esm/connect-node-adapter.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectNodeAdapter: () => (/* binding */ connectNodeAdapter)\n/* harmony export */ });\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @connectrpc/connect */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/router.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @connectrpc/connect */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @connectrpc/connect */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @connectrpc/connect/protocol */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\");\n/* harmony import */ var _node_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node-universal-handler.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-universal-handler.js\");\n/* harmony import */ var _compression_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compression.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/compression.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * Create a Node.js request handler from a ConnectRouter.\n *\n * The returned function is compatible with http.RequestListener and its equivalent for http2.\n */\nfunction connectNodeAdapter(options) {\n    var _a;\n    if (options.acceptCompression === undefined) {\n        options.acceptCompression = [_compression_js__WEBPACK_IMPORTED_MODULE_1__.compressionGzip, _compression_js__WEBPACK_IMPORTED_MODULE_1__.compressionBrotli];\n    }\n    const router = (0,_connectrpc_connect__WEBPACK_IMPORTED_MODULE_2__.createConnectRouter)(options);\n    options.routes(router);\n    const prefix = (_a = options.requestPathPrefix) !== null && _a !== void 0 ? _a : \"\";\n    const paths = new Map();\n    for (const uHandler of router.handlers) {\n        paths.set(prefix + uHandler.requestPath, uHandler);\n    }\n    return function nodeRequestHandler(req, res) {\n        var _a, _b, _c, _d;\n        // Strip the query parameter when matching paths.\n        const uHandler = paths.get((_b = (_a = req.url) === null || _a === void 0 ? void 0 : _a.split(\"?\", 2)[0]) !== null && _b !== void 0 ? _b : \"\");\n        if (!uHandler) {\n            ((_c = options.fallback) !== null && _c !== void 0 ? _c : fallback)(req, res);\n            return;\n        }\n        const uReq = (0,_node_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.universalRequestFromNodeRequest)(req, res, undefined, (_d = options.contextValues) === null || _d === void 0 ? void 0 : _d.call(options, req));\n        uHandler(uReq)\n            .then((uRes) => (0,_node_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.universalResponseToNodeResponse)(uRes, res))\n            .catch((reason) => {\n            if (_connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.ConnectError.from(reason).code == _connectrpc_connect__WEBPACK_IMPORTED_MODULE_4__.Code.Aborted) {\n                return;\n            }\n            // eslint-disable-next-line no-console\n            console.error(`handler for rpc ${uHandler.method.name} of ${uHandler.service.typeName} failed`, reason);\n        });\n    };\n}\nconst fallback = (request, response) => {\n    response.writeHead(_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_5__.uResponseNotFound.status);\n    response.end();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC1ub2RlL2Rpc3QvZXNtL2Nvbm5lY3Qtbm9kZS1hZGFwdGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM4RTtBQUNiO0FBQytDO0FBQzFDO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxxQ0FBcUMsNERBQWUsRUFBRSw4REFBaUI7QUFDdkU7QUFDQSxtQkFBbUIsd0VBQW1CO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsMkZBQStCO0FBQ3BEO0FBQ0EsNEJBQTRCLDJGQUErQjtBQUMzRDtBQUNBLGdCQUFnQiw2REFBWSxzQkFBc0IscURBQUk7QUFDdEQ7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLHNCQUFzQixLQUFLLDJCQUEyQjtBQUNuRyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDJFQUFpQjtBQUN4QztBQUNBIiwic291cmNlcyI6WyJEOlxccHJvamVjdHNcXGF0c1xcbm9kZV9tb2R1bGVzXFxAY29ubmVjdHJwY1xcY29ubmVjdC1ub2RlXFxkaXN0XFxlc21cXGNvbm5lY3Qtbm9kZS1hZGFwdGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBDb2RlLCBDb25uZWN0RXJyb3IsIGNyZWF0ZUNvbm5lY3RSb3V0ZXIgfSBmcm9tIFwiQGNvbm5lY3RycGMvY29ubmVjdFwiO1xuaW1wb3J0IHsgdVJlc3BvbnNlTm90Rm91bmQgfSBmcm9tIFwiQGNvbm5lY3RycGMvY29ubmVjdC9wcm90b2NvbFwiO1xuaW1wb3J0IHsgdW5pdmVyc2FsUmVxdWVzdEZyb21Ob2RlUmVxdWVzdCwgdW5pdmVyc2FsUmVzcG9uc2VUb05vZGVSZXNwb25zZSwgfSBmcm9tIFwiLi9ub2RlLXVuaXZlcnNhbC1oYW5kbGVyLmpzXCI7XG5pbXBvcnQgeyBjb21wcmVzc2lvbkJyb3RsaSwgY29tcHJlc3Npb25HemlwIH0gZnJvbSBcIi4vY29tcHJlc3Npb24uanNcIjtcbi8qKlxuICogQ3JlYXRlIGEgTm9kZS5qcyByZXF1ZXN0IGhhbmRsZXIgZnJvbSBhIENvbm5lY3RSb3V0ZXIuXG4gKlxuICogVGhlIHJldHVybmVkIGZ1bmN0aW9uIGlzIGNvbXBhdGlibGUgd2l0aCBodHRwLlJlcXVlc3RMaXN0ZW5lciBhbmQgaXRzIGVxdWl2YWxlbnQgZm9yIGh0dHAyLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY29ubmVjdE5vZGVBZGFwdGVyKG9wdGlvbnMpIHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKG9wdGlvbnMuYWNjZXB0Q29tcHJlc3Npb24gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBvcHRpb25zLmFjY2VwdENvbXByZXNzaW9uID0gW2NvbXByZXNzaW9uR3ppcCwgY29tcHJlc3Npb25Ccm90bGldO1xuICAgIH1cbiAgICBjb25zdCByb3V0ZXIgPSBjcmVhdGVDb25uZWN0Um91dGVyKG9wdGlvbnMpO1xuICAgIG9wdGlvbnMucm91dGVzKHJvdXRlcik7XG4gICAgY29uc3QgcHJlZml4ID0gKF9hID0gb3B0aW9ucy5yZXF1ZXN0UGF0aFByZWZpeCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogXCJcIjtcbiAgICBjb25zdCBwYXRocyA9IG5ldyBNYXAoKTtcbiAgICBmb3IgKGNvbnN0IHVIYW5kbGVyIG9mIHJvdXRlci5oYW5kbGVycykge1xuICAgICAgICBwYXRocy5zZXQocHJlZml4ICsgdUhhbmRsZXIucmVxdWVzdFBhdGgsIHVIYW5kbGVyKTtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uIG5vZGVSZXF1ZXN0SGFuZGxlcihyZXEsIHJlcykge1xuICAgICAgICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gICAgICAgIC8vIFN0cmlwIHRoZSBxdWVyeSBwYXJhbWV0ZXIgd2hlbiBtYXRjaGluZyBwYXRocy5cbiAgICAgICAgY29uc3QgdUhhbmRsZXIgPSBwYXRocy5nZXQoKF9iID0gKF9hID0gcmVxLnVybCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnNwbGl0KFwiP1wiLCAyKVswXSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogXCJcIik7XG4gICAgICAgIGlmICghdUhhbmRsZXIpIHtcbiAgICAgICAgICAgICgoX2MgPSBvcHRpb25zLmZhbGxiYWNrKSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiBmYWxsYmFjaykocmVxLCByZXMpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHVSZXEgPSB1bml2ZXJzYWxSZXF1ZXN0RnJvbU5vZGVSZXF1ZXN0KHJlcSwgcmVzLCB1bmRlZmluZWQsIChfZCA9IG9wdGlvbnMuY29udGV4dFZhbHVlcykgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLmNhbGwob3B0aW9ucywgcmVxKSk7XG4gICAgICAgIHVIYW5kbGVyKHVSZXEpXG4gICAgICAgICAgICAudGhlbigodVJlcykgPT4gdW5pdmVyc2FsUmVzcG9uc2VUb05vZGVSZXNwb25zZSh1UmVzLCByZXMpKVxuICAgICAgICAgICAgLmNhdGNoKChyZWFzb24pID0+IHtcbiAgICAgICAgICAgIGlmIChDb25uZWN0RXJyb3IuZnJvbShyZWFzb24pLmNvZGUgPT0gQ29kZS5BYm9ydGVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYGhhbmRsZXIgZm9yIHJwYyAke3VIYW5kbGVyLm1ldGhvZC5uYW1lfSBvZiAke3VIYW5kbGVyLnNlcnZpY2UudHlwZU5hbWV9IGZhaWxlZGAsIHJlYXNvbik7XG4gICAgICAgIH0pO1xuICAgIH07XG59XG5jb25zdCBmYWxsYmFjayA9IChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICAgIHJlc3BvbnNlLndyaXRlSGVhZCh1UmVzcG9uc2VOb3RGb3VuZC5zdGF0dXMpO1xuICAgIHJlc3BvbnNlLmVuZCgpO1xufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/connect-node-adapter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/connect-transport.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-node/dist/esm/connect-transport.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConnectTransport: () => (/* binding */ createConnectTransport)\n/* harmony export */ });\n/* harmony import */ var _connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @connectrpc/connect/protocol-connect */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/transport.js\");\n/* harmony import */ var _node_transport_options_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node-transport-options.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-transport-options.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Create a Transport for the Connect protocol using the Node.js `http`, `http2`,\n * or `http2` module.\n */\nfunction createConnectTransport(options) {\n    return (0,_connectrpc_connect_protocol_connect__WEBPACK_IMPORTED_MODULE_1__.createTransport)((0,_node_transport_options_js__WEBPACK_IMPORTED_MODULE_0__.validateNodeTransportOptions)(options));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC1ub2RlL2Rpc3QvZXNtL2Nvbm5lY3QtdHJhbnNwb3J0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3VFO0FBQ0k7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcscUZBQWUsQ0FBQyx3RkFBNEI7QUFDdkQiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0LW5vZGVcXGRpc3RcXGVzbVxcY29ubmVjdC10cmFuc3BvcnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZVRyYW5zcG9ydCB9IGZyb20gXCJAY29ubmVjdHJwYy9jb25uZWN0L3Byb3RvY29sLWNvbm5lY3RcIjtcbmltcG9ydCB7IHZhbGlkYXRlTm9kZVRyYW5zcG9ydE9wdGlvbnMgfSBmcm9tIFwiLi9ub2RlLXRyYW5zcG9ydC1vcHRpb25zLmpzXCI7XG4vKipcbiAqIENyZWF0ZSBhIFRyYW5zcG9ydCBmb3IgdGhlIENvbm5lY3QgcHJvdG9jb2wgdXNpbmcgdGhlIE5vZGUuanMgYGh0dHBgLCBgaHR0cDJgLFxuICogb3IgYGh0dHAyYCBtb2R1bGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0VHJhbnNwb3J0KG9wdGlvbnMpIHtcbiAgICByZXR1cm4gY3JlYXRlVHJhbnNwb3J0KHZhbGlkYXRlTm9kZVRyYW5zcG9ydE9wdGlvbnMob3B0aW9ucykpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/connect-transport.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/grpc-transport.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-node/dist/esm/grpc-transport.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGrpcTransport: () => (/* binding */ createGrpcTransport)\n/* harmony export */ });\n/* harmony import */ var _connectrpc_connect_protocol_grpc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @connectrpc/connect/protocol-grpc */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/transport.js\");\n/* harmony import */ var _node_transport_options_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node-transport-options.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-transport-options.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Create a Transport for the gRPC protocol using the Node.js `http`, `http2`,\n * or `http2` module.\n */\nfunction createGrpcTransport(options) {\n    return (0,_connectrpc_connect_protocol_grpc__WEBPACK_IMPORTED_MODULE_1__.createTransport)((0,_node_transport_options_js__WEBPACK_IMPORTED_MODULE_0__.validateNodeTransportOptions)(options));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC1ub2RlL2Rpc3QvZXNtL2dycGMtdHJhbnNwb3J0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ29FO0FBQ087QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsa0ZBQWUsQ0FBQyx3RkFBNEI7QUFDdkQiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0LW5vZGVcXGRpc3RcXGVzbVxcZ3JwYy10cmFuc3BvcnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZVRyYW5zcG9ydCB9IGZyb20gXCJAY29ubmVjdHJwYy9jb25uZWN0L3Byb3RvY29sLWdycGNcIjtcbmltcG9ydCB7IHZhbGlkYXRlTm9kZVRyYW5zcG9ydE9wdGlvbnMgfSBmcm9tIFwiLi9ub2RlLXRyYW5zcG9ydC1vcHRpb25zLmpzXCI7XG4vKipcbiAqIENyZWF0ZSBhIFRyYW5zcG9ydCBmb3IgdGhlIGdSUEMgcHJvdG9jb2wgdXNpbmcgdGhlIE5vZGUuanMgYGh0dHBgLCBgaHR0cDJgLFxuICogb3IgYGh0dHAyYCBtb2R1bGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVHcnBjVHJhbnNwb3J0KG9wdGlvbnMpIHtcbiAgICByZXR1cm4gY3JlYXRlVHJhbnNwb3J0KHZhbGlkYXRlTm9kZVRyYW5zcG9ydE9wdGlvbnMob3B0aW9ucykpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/grpc-transport.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/grpc-web-transport.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-node/dist/esm/grpc-web-transport.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGrpcWebTransport: () => (/* binding */ createGrpcWebTransport)\n/* harmony export */ });\n/* harmony import */ var _connectrpc_connect_protocol_grpc_web__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @connectrpc/connect/protocol-grpc-web */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/transport.js\");\n/* harmony import */ var _node_transport_options_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node-transport-options.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-transport-options.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Create a Transport for the gRPC-web protocol using the Node.js `http`,\n * `http2`, or `http2` module.\n */\nfunction createGrpcWebTransport(options) {\n    return (0,_connectrpc_connect_protocol_grpc_web__WEBPACK_IMPORTED_MODULE_1__.createTransport)((0,_node_transport_options_js__WEBPACK_IMPORTED_MODULE_0__.validateNodeTransportOptions)(options));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC1ub2RlL2Rpc3QvZXNtL2dycGMtd2ViLXRyYW5zcG9ydC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN3RTtBQUNHO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHNGQUFlLENBQUMsd0ZBQTRCO0FBQ3ZEIiwic291cmNlcyI6WyJEOlxccHJvamVjdHNcXGF0c1xcbm9kZV9tb2R1bGVzXFxAY29ubmVjdHJwY1xcY29ubmVjdC1ub2RlXFxkaXN0XFxlc21cXGdycGMtd2ViLXRyYW5zcG9ydC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlVHJhbnNwb3J0IH0gZnJvbSBcIkBjb25uZWN0cnBjL2Nvbm5lY3QvcHJvdG9jb2wtZ3JwYy13ZWJcIjtcbmltcG9ydCB7IHZhbGlkYXRlTm9kZVRyYW5zcG9ydE9wdGlvbnMgfSBmcm9tIFwiLi9ub2RlLXRyYW5zcG9ydC1vcHRpb25zLmpzXCI7XG4vKipcbiAqIENyZWF0ZSBhIFRyYW5zcG9ydCBmb3IgdGhlIGdSUEMtd2ViIHByb3RvY29sIHVzaW5nIHRoZSBOb2RlLmpzIGBodHRwYCxcbiAqIGBodHRwMmAsIG9yIGBodHRwMmAgbW9kdWxlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlR3JwY1dlYlRyYW5zcG9ydChvcHRpb25zKSB7XG4gICAgcmV0dXJuIGNyZWF0ZVRyYW5zcG9ydCh2YWxpZGF0ZU5vZGVUcmFuc3BvcnRPcHRpb25zKG9wdGlvbnMpKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/grpc-web-transport.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/http2-session-manager.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-node/dist/esm/http2-session-manager.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Http2SessionManager: () => (/* binding */ Http2SessionManager)\n/* harmony export */ });\n/* harmony import */ var http2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http2 */ \"http2\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @connectrpc/connect */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @connectrpc/connect */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _node_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node-error.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-error.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Manage an HTTP/2 connection and keep it alive with PING frames.\n *\n * The logic is based on \"Basic Keepalive\" described in\n * https://github.com/grpc/proposal/blob/0ba0c1905050525f9b0aee46f3f23c8e1e515489/A8-client-side-keepalive.md#basic-keepalive\n * as well as the client channel arguments described in\n * https://github.com/grpc/grpc/blob/8e137e524a1b1da7bbf4603662876d5719563b57/doc/keepalive.md\n *\n * Usually, the managers tracks exactly one connection, but if a connection\n * receives a GOAWAY frame with NO_ERROR, the connection is maintained until\n * all streams have finished, and new requests will open a new connection.\n */\nclass Http2SessionManager {\n    /**\n     * The current state of the connection:\n     *\n     * - \"closed\"\n     *   The connection is closed, or no connection has been opened yet.\n     * - connecting\n     *   Currently establishing a connection.\n     *\n     * - \"open\"\n     *   A connection is open and has open streams. PING frames are sent every\n     *   pingIntervalMs, unless a stream received data.\n     *   If a PING frame is not responded to within pingTimeoutMs, the connection\n     *   and all open streams close.\n     *\n     * - \"idle\"\n     *   A connection is open, but it does not have any open streams.\n     *   If pingIdleConnection is enabled, PING frames are used to keep the\n     *   connection alive, similar to an \"open\" connection.\n     *   If a connection is idle for longer than idleConnectionTimeoutMs, it closes.\n     *   If a request is made on an idle connection that has not been used for\n     *   longer than pingIntervalMs, the connection is verified.\n     *\n     * - \"verifying\"\n     *   Verifying a connection after a long period of inactivity before issuing a\n     *   request. A PING frame is sent, and if it times out within pingTimeoutMs, a\n     *   new connection is opened.\n     *\n     * - \"error\"\n     *   The connection is closed because of a transient error. A connection\n     *   may have failed to reach the host, or the connection may have died,\n     *   or it may have been aborted.\n     */\n    state() {\n        if (this.s.t == \"ready\") {\n            if (this.verifying !== undefined) {\n                return \"verifying\";\n            }\n            return this.s.streamCount() > 0 ? \"open\" : \"idle\";\n        }\n        return this.s.t;\n    }\n    /**\n     * Returns the error object if the connection is in the \"error\" state,\n     * `undefined` otherwise.\n     */\n    error() {\n        if (this.s.t == \"error\") {\n            return this.s.reason;\n        }\n        return undefined;\n    }\n    constructor(url, pingOptions, http2SessionOptions) {\n        var _a, _b, _c, _d;\n        this.s = closed();\n        this.shuttingDown = [];\n        this.authority = new URL(url).origin;\n        this.http2SessionOptions = http2SessionOptions;\n        this.options = {\n            pingIntervalMs: (_a = pingOptions === null || pingOptions === void 0 ? void 0 : pingOptions.pingIntervalMs) !== null && _a !== void 0 ? _a : Number.POSITIVE_INFINITY,\n            pingTimeoutMs: (_b = pingOptions === null || pingOptions === void 0 ? void 0 : pingOptions.pingTimeoutMs) !== null && _b !== void 0 ? _b : 1000 * 15,\n            pingIdleConnection: (_c = pingOptions === null || pingOptions === void 0 ? void 0 : pingOptions.pingIdleConnection) !== null && _c !== void 0 ? _c : false,\n            idleConnectionTimeoutMs: (_d = pingOptions === null || pingOptions === void 0 ? void 0 : pingOptions.idleConnectionTimeoutMs) !== null && _d !== void 0 ? _d : 1000 * 60 * 15,\n        };\n    }\n    /**\n     * Open a connection if none exists, verify an existing connection if\n     * necessary.\n     */\n    async connect() {\n        try {\n            const ready = await this.gotoReady();\n            return ready.streamCount() > 0 ? \"open\" : \"idle\";\n        }\n        catch (e) {\n            return \"error\";\n        }\n    }\n    /**\n     * Issue a request.\n     *\n     * This method automatically opens a connection if none exists, and verifies\n     * an existing connection if necessary. It calls http2.ClientHttp2Session.request(),\n     * and keeps track of all open http2.ClientHttp2Stream.\n     *\n     * Clients must call notifyResponseByteRead() whenever they successfully read\n     * data from the http2.ClientHttp2Stream.\n     */\n    async request(method, path, headers, options) {\n        // Request sometimes fails with goaway/destroyed\n        // errors, we use a loop to retry.\n        //\n        // This is not expected to happen often, but it is possible that a\n        // connection is closed while we are trying to open a stream.\n        //\n        // Ref: https://github.com/nodejs/help/issues/2105\n        for (;;) {\n            const ready = await this.gotoReady();\n            try {\n                const stream = ready.conn.request(Object.assign(Object.assign({}, headers), { \":method\": method, \":path\": path }), options);\n                ready.registerRequest(stream);\n                return stream;\n            }\n            catch (e) {\n                // Check to see if the connection is closed or destroyed\n                // and if so, we try again.\n                if (ready.conn.closed || ready.conn.destroyed) {\n                    continue;\n                }\n                throw e;\n            }\n        }\n    }\n    /**\n     * Notify the manager of a successful read from a http2.ClientHttp2Stream.\n     *\n     * Clients must call this function whenever they successfully read data from\n     * a http2.ClientHttp2Stream obtained from request(). This informs the\n     * keep-alive logic that the connection is alive, and prevents it from sending\n     * unnecessary PING frames.\n     */\n    notifyResponseByteRead(stream) {\n        if (this.s.t == \"ready\") {\n            this.s.responseByteRead(stream);\n        }\n        for (const s of this.shuttingDown) {\n            s.responseByteRead(stream);\n        }\n    }\n    /**\n     * If there is an open connection, close it. This also closes any open streams.\n     */\n    abort(reason) {\n        var _a, _b, _c;\n        const err = reason !== null && reason !== void 0 ? reason : new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_2__.ConnectError(\"connection aborted\", _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Canceled);\n        (_b = (_a = this.s).abort) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n        for (const s of this.shuttingDown) {\n            (_c = s.abort) === null || _c === void 0 ? void 0 : _c.call(s, err);\n        }\n        this.setState(closedOrError(err));\n    }\n    async gotoReady() {\n        if (this.s.t == \"ready\") {\n            if (this.s.isShuttingDown() ||\n                this.s.conn.closed ||\n                this.s.conn.destroyed) {\n                this.setState(connect(this.authority, this.http2SessionOptions));\n            }\n            else if (this.s.requiresVerify()) {\n                await this.verify(this.s);\n            }\n        }\n        else if (this.s.t == \"closed\" || this.s.t == \"error\") {\n            this.setState(connect(this.authority, this.http2SessionOptions));\n        }\n        while (this.s.t !== \"ready\") {\n            if (this.s.t === \"error\") {\n                throw this.s.reason;\n            }\n            if (this.s.t === \"connecting\") {\n                await this.s.conn;\n            }\n        }\n        return this.s;\n    }\n    setState(state) {\n        var _a, _b;\n        (_b = (_a = this.s).onExitState) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (this.s.t == \"ready\" && this.s.isShuttingDown()) {\n            // Maintain connections that have been asked to shut down.\n            const sd = this.s;\n            this.shuttingDown.push(sd);\n            sd.onClose = sd.onError = () => {\n                const i = this.shuttingDown.indexOf(sd);\n                if (i !== -1) {\n                    this.shuttingDown.splice(i, 1);\n                }\n            };\n        }\n        switch (state.t) {\n            case \"connecting\":\n                state.conn.then((value) => {\n                    this.setState(ready(value, this.options));\n                }, (reason) => {\n                    this.setState(closedOrError(reason));\n                });\n                break;\n            case \"ready\":\n                state.onClose = () => this.setState(closed());\n                state.onError = (err) => this.setState(closedOrError(err));\n                break;\n            case \"closed\":\n                break;\n            case \"error\":\n                break;\n        }\n        this.s = state;\n    }\n    verify(stateReady) {\n        if (this.verifying !== undefined) {\n            return this.verifying;\n        }\n        this.verifying = stateReady\n            .verify()\n            .then((success) => {\n            if (success) {\n                return;\n            }\n            // verify() has destroyed the old connection\n            this.setState(connect(this.authority, this.http2SessionOptions));\n        }, (reason) => {\n            this.setState(closedOrError(reason));\n        })\n            .finally(() => {\n            this.verifying = undefined;\n        });\n        return this.verifying;\n    }\n}\nfunction closed() {\n    return {\n        t: \"closed\",\n    };\n}\nfunction error(reason) {\n    return {\n        t: \"error\",\n        reason,\n    };\n}\nfunction closedOrError(reason) {\n    const isCancel = reason instanceof _connectrpc_connect__WEBPACK_IMPORTED_MODULE_2__.ConnectError &&\n        _connectrpc_connect__WEBPACK_IMPORTED_MODULE_2__.ConnectError.from(reason).code == _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Canceled;\n    return isCancel ? closed() : error(reason);\n}\nfunction connect(authority, http2SessionOptions) {\n    let resolve;\n    let reject;\n    const conn = new Promise((res, rej) => {\n        resolve = res;\n        reject = rej;\n    });\n    const newConn = http2__WEBPACK_IMPORTED_MODULE_0__.connect(authority, http2SessionOptions);\n    newConn.on(\"connect\", onConnect);\n    newConn.on(\"error\", onError);\n    function onConnect() {\n        resolve === null || resolve === void 0 ? void 0 : resolve(newConn);\n        cleanup();\n    }\n    function onError(err) {\n        reject === null || reject === void 0 ? void 0 : reject((0,_node_error_js__WEBPACK_IMPORTED_MODULE_1__.connectErrorFromNodeReason)(err));\n        cleanup();\n    }\n    function cleanup() {\n        newConn.off(\"connect\", onConnect);\n        newConn.off(\"error\", onError);\n    }\n    return {\n        t: \"connecting\",\n        conn,\n        abort(reason) {\n            if (!newConn.destroyed) {\n                newConn.destroy(undefined, http2__WEBPACK_IMPORTED_MODULE_0__.constants.NGHTTP2_CANCEL);\n            }\n            // According to the documentation, destroy() should immediately terminate\n            // the session and the socket, but we still receive a \"connect\" event.\n            // We must not resolve a broken connection, so we reject it manually here.\n            reject === null || reject === void 0 ? void 0 : reject(reason);\n        },\n        onExitState() {\n            cleanup();\n        },\n    };\n}\nfunction ready(conn, options) {\n    // Users have reported an error \"The session has been destroyed\" raised\n    // from H2SessionManager.request(), see https://github.com/connectrpc/connect-es/issues/683\n    // This assertion will show whether the session already died in the\n    // \"connecting\" state.\n    assertSessionOpen(conn);\n    // Do not block Node.js from exiting on an idle connection.\n    // Note that we ref() again for the first stream to open, and unref() again\n    // for the last stream to close.\n    conn.unref();\n    // the last time we were sure that the connection is alive, via a PING\n    // response, or via received response bytes\n    let lastAliveAt = Date.now();\n    // how many streams are currently open on this session\n    let streamCount = 0;\n    // timer for the keep-alive interval\n    let pingIntervalId;\n    // timer for waiting for a PING response\n    let pingTimeoutId;\n    // keep track of GOAWAY - gracefully shut down open streams / wait for connection to error\n    let receivedGoAway = false;\n    // keep track of GOAWAY with ENHANCE_YOUR_CALM and with debug data too_many_pings\n    let receivedGoAwayEnhanceYourCalmTooManyPings = false;\n    // timer for closing connections without open streams, must be initialized\n    let idleTimeoutId;\n    resetIdleTimeout();\n    const state = {\n        t: \"ready\",\n        conn,\n        streamCount() {\n            return streamCount;\n        },\n        requiresVerify() {\n            const elapsedMs = Date.now() - lastAliveAt;\n            return elapsedMs > options.pingIntervalMs;\n        },\n        isShuttingDown() {\n            return receivedGoAway;\n        },\n        onClose: undefined,\n        onError: undefined,\n        registerRequest(stream) {\n            streamCount++;\n            if (streamCount == 1) {\n                conn.ref();\n                resetPingInterval(); // reset to ping with the appropriate interval for \"open\"\n                stopIdleTimeout();\n            }\n            stream.once(\"response\", () => {\n                lastAliveAt = Date.now();\n                resetPingInterval();\n            });\n            stream.once(\"close\", () => {\n                streamCount--;\n                if (streamCount == 0) {\n                    conn.unref();\n                    resetPingInterval(); // reset to ping with the appropriate interval for \"idle\"\n                    resetIdleTimeout();\n                }\n            });\n        },\n        responseByteRead(stream) {\n            if (stream.session !== conn) {\n                return;\n            }\n            if (conn.closed || conn.destroyed) {\n                return;\n            }\n            if (streamCount <= 0) {\n                return;\n            }\n            lastAliveAt = Date.now();\n            resetPingInterval();\n        },\n        verify() {\n            conn.ref();\n            return new Promise((resolve) => {\n                commonPing(() => {\n                    if (streamCount == 0)\n                        conn.unref();\n                    resolve(true);\n                });\n                conn.once(\"error\", () => resolve(false));\n            });\n        },\n        abort(reason) {\n            if (!conn.destroyed) {\n                conn.once(\"error\", () => {\n                    // conn.destroy() may raise an error after onExitState() was called\n                    // and our error listeners are removed.\n                    // We attach this one to swallow uncaught exceptions.\n                });\n                conn.destroy(reason, http2__WEBPACK_IMPORTED_MODULE_0__.constants.NGHTTP2_CANCEL);\n            }\n        },\n        onExitState() {\n            if (state.isShuttingDown()) {\n                // Per the interface, this method is called when the manager is leaving\n                // the state. We maintain this connection in the session manager until\n                // all streams have finished, so we do not detach event listeners here.\n                return;\n            }\n            cleanup();\n            this.onError = undefined;\n            this.onClose = undefined;\n        },\n    };\n    // start or restart the ping interval\n    function resetPingInterval() {\n        stopPingInterval();\n        if (streamCount > 0 || options.pingIdleConnection) {\n            pingIntervalId = safeSetTimeout(onPingInterval, options.pingIntervalMs);\n        }\n    }\n    function stopPingInterval() {\n        clearTimeout(pingIntervalId);\n        clearTimeout(pingTimeoutId);\n    }\n    function onPingInterval() {\n        commonPing(resetPingInterval);\n    }\n    function commonPing(onSuccess) {\n        clearTimeout(pingTimeoutId);\n        pingTimeoutId = safeSetTimeout(() => {\n            conn.destroy(new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_2__.ConnectError(\"PING timed out\", _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Unavailable), http2__WEBPACK_IMPORTED_MODULE_0__.constants.NGHTTP2_CANCEL);\n        }, options.pingTimeoutMs);\n        conn.ping((err, duration) => {\n            clearTimeout(pingTimeoutId);\n            if (err !== null) {\n                // We will receive an ERR_HTTP2_PING_CANCEL here if we destroy the\n                // connection with a pending ping.\n                // We might also see other errors, but they should be picked up by the\n                // \"error\" event listener.\n                return;\n            }\n            if (duration > options.pingTimeoutMs) {\n                // setTimeout is not precise, and HTTP/2 pings take less than 1ms in\n                // tests.\n                conn.destroy(new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_2__.ConnectError(\"PING timed out\", _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Unavailable), http2__WEBPACK_IMPORTED_MODULE_0__.constants.NGHTTP2_CANCEL);\n                return;\n            }\n            lastAliveAt = Date.now();\n            onSuccess();\n        });\n    }\n    function stopIdleTimeout() {\n        clearTimeout(idleTimeoutId);\n    }\n    function resetIdleTimeout() {\n        idleTimeoutId = safeSetTimeout(onIdleTimeout, options.idleConnectionTimeoutMs);\n    }\n    function onIdleTimeout() {\n        conn.close();\n        onClose(); // trigger a state change right away, so we are not open to races\n    }\n    function onGoaway(errorCode, lastStreamID, opaqueData) {\n        receivedGoAway = true;\n        const tooManyPingsAscii = Buffer.from(\"too_many_pings\", \"ascii\");\n        if (errorCode === http2__WEBPACK_IMPORTED_MODULE_0__.constants.NGHTTP2_ENHANCE_YOUR_CALM &&\n            opaqueData != null &&\n            opaqueData.equals(tooManyPingsAscii)) {\n            // double pingIntervalMs, following the last paragraph of https://github.com/grpc/proposal/blob/0ba0c1905050525f9b0aee46f3f23c8e1e515489/A8-client-side-keepalive.md#basic-keepalive\n            options.pingIntervalMs = options.pingIntervalMs * 2;\n            receivedGoAwayEnhanceYourCalmTooManyPings = true;\n        }\n        if (errorCode === http2__WEBPACK_IMPORTED_MODULE_0__.constants.NGHTTP2_NO_ERROR) {\n            const nodeMajor = parseInt(process.versions.node.split(\".\")[0], 10);\n            // Node.js v16 closes a connection on its own when it receives a GOAWAY\n            // frame and there are no open streams (emitting a \"close\" event and\n            // destroying the session), but more recent versions do not.\n            // Calling close() ourselves is ineffective here - it appears that the\n            // method is already being called, see https://github.com/nodejs/node/blob/198affc63973805ce5102d246f6b7822be57f5fc/lib/internal/http2/core.js#L681\n            if (streamCount == 0 && nodeMajor >= 18) {\n                conn.destroy(new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_2__.ConnectError(\"received GOAWAY without any open streams\", _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Canceled), http2__WEBPACK_IMPORTED_MODULE_0__.constants.NGHTTP2_NO_ERROR);\n            }\n        }\n    }\n    function onClose() {\n        var _a;\n        cleanup();\n        (_a = state.onClose) === null || _a === void 0 ? void 0 : _a.call(state);\n    }\n    function onError(err) {\n        var _a, _b;\n        cleanup();\n        if (receivedGoAwayEnhanceYourCalmTooManyPings) {\n            // We cannot prevent node from destroying session and streams with its own\n            // error that does not carry debug data, but at least we can wrap the error\n            // we surface on the manager.\n            const ce = new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_2__.ConnectError(`http/2 connection closed with error code ENHANCE_YOUR_CALM (0x${http2__WEBPACK_IMPORTED_MODULE_0__.constants.NGHTTP2_ENHANCE_YOUR_CALM.toString(16)}), too_many_pings, doubled the interval`, _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.ResourceExhausted);\n            (_a = state.onError) === null || _a === void 0 ? void 0 : _a.call(state, ce);\n        }\n        else {\n            (_b = state.onError) === null || _b === void 0 ? void 0 : _b.call(state, (0,_node_error_js__WEBPACK_IMPORTED_MODULE_1__.connectErrorFromNodeReason)(err));\n        }\n    }\n    function cleanup() {\n        stopPingInterval();\n        stopIdleTimeout();\n        conn.off(\"error\", onError);\n        conn.off(\"close\", onClose);\n        conn.off(\"goaway\", onGoaway);\n    }\n    conn.on(\"error\", onError);\n    conn.on(\"close\", onClose);\n    conn.on(\"goaway\", onGoaway);\n    return state;\n}\n/**\n * setTimeout(), but simply ignores values larger than the maximum supported\n * value (signed 32-bit integer) instead of calling the callback right away,\n * and does not block Node.js from exiting.\n */\nfunction safeSetTimeout(callback, ms) {\n    if (ms > 0x7fffffff) {\n        return;\n    }\n    return setTimeout(callback, ms).unref();\n}\nfunction assertSessionOpen(conn) {\n    if (conn.connecting) {\n        throw new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_2__.ConnectError(\"expected open session, but it is connecting\", _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Internal);\n    }\n    if (conn.destroyed) {\n        throw new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_2__.ConnectError(\"expected open session, but it is destroyed\", _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Internal);\n    }\n    if (conn.closed) {\n        throw new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_2__.ConnectError(\"expected open session, but it is closed\", _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Internal);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/http2-session-manager.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-node/dist/esm/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Http2SessionManager: () => (/* reexport safe */ _http2_session_manager_js__WEBPACK_IMPORTED_MODULE_8__.Http2SessionManager),\n/* harmony export */   compressionBrotli: () => (/* reexport safe */ _compression_js__WEBPACK_IMPORTED_MODULE_4__.compressionBrotli),\n/* harmony export */   compressionGzip: () => (/* reexport safe */ _compression_js__WEBPACK_IMPORTED_MODULE_4__.compressionGzip),\n/* harmony export */   connectNodeAdapter: () => (/* reexport safe */ _connect_node_adapter_js__WEBPACK_IMPORTED_MODULE_5__.connectNodeAdapter),\n/* harmony export */   createConnectTransport: () => (/* reexport safe */ _connect_transport_js__WEBPACK_IMPORTED_MODULE_3__.createConnectTransport),\n/* harmony export */   createGrpcTransport: () => (/* reexport safe */ _grpc_transport_js__WEBPACK_IMPORTED_MODULE_2__.createGrpcTransport),\n/* harmony export */   createGrpcWebTransport: () => (/* reexport safe */ _grpc_web_transport_js__WEBPACK_IMPORTED_MODULE_1__.createGrpcWebTransport),\n/* harmony export */   createNodeHttpClient: () => (/* reexport safe */ _node_universal_client_js__WEBPACK_IMPORTED_MODULE_7__.createNodeHttpClient),\n/* harmony export */   universalRequestFromNodeRequest: () => (/* reexport safe */ _node_universal_handler_js__WEBPACK_IMPORTED_MODULE_6__.universalRequestFromNodeRequest),\n/* harmony export */   universalResponseToNodeResponse: () => (/* reexport safe */ _node_universal_handler_js__WEBPACK_IMPORTED_MODULE_6__.universalResponseToNodeResponse)\n/* harmony export */ });\n/* harmony import */ var _node_headers_polyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node-headers-polyfill.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-headers-polyfill.js\");\n/* harmony import */ var _grpc_web_transport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./grpc-web-transport.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/grpc-web-transport.js\");\n/* harmony import */ var _grpc_transport_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./grpc-transport.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/grpc-transport.js\");\n/* harmony import */ var _connect_transport_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./connect-transport.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/connect-transport.js\");\n/* harmony import */ var _compression_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./compression.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/compression.js\");\n/* harmony import */ var _connect_node_adapter_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./connect-node-adapter.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/connect-node-adapter.js\");\n/* harmony import */ var _node_universal_handler_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node-universal-handler.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-universal-handler.js\");\n/* harmony import */ var _node_universal_client_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./node-universal-client.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-universal-client.js\");\n/* harmony import */ var _http2_session_manager_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./http2-session-manager.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/http2-session-manager.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// Polyfill the Headers API for Node versions < 18\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC1ub2RlL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ29DO0FBQzZCO0FBQ1A7QUFDTTtBQUNNO0FBQ1A7QUFDaUQ7QUFDOUM7QUFDRCIsInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxhdHNcXG5vZGVfbW9kdWxlc1xcQGNvbm5lY3RycGNcXGNvbm5lY3Qtbm9kZVxcZGlzdFxcZXNtXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLy8gUG9seWZpbGwgdGhlIEhlYWRlcnMgQVBJIGZvciBOb2RlIHZlcnNpb25zIDwgMThcbmltcG9ydCBcIi4vbm9kZS1oZWFkZXJzLXBvbHlmaWxsLmpzXCI7XG5leHBvcnQgeyBjcmVhdGVHcnBjV2ViVHJhbnNwb3J0IH0gZnJvbSBcIi4vZ3JwYy13ZWItdHJhbnNwb3J0LmpzXCI7XG5leHBvcnQgeyBjcmVhdGVHcnBjVHJhbnNwb3J0IH0gZnJvbSBcIi4vZ3JwYy10cmFuc3BvcnQuanNcIjtcbmV4cG9ydCB7IGNyZWF0ZUNvbm5lY3RUcmFuc3BvcnQgfSBmcm9tIFwiLi9jb25uZWN0LXRyYW5zcG9ydC5qc1wiO1xuZXhwb3J0IHsgY29tcHJlc3Npb25Ccm90bGksIGNvbXByZXNzaW9uR3ppcCB9IGZyb20gXCIuL2NvbXByZXNzaW9uLmpzXCI7XG5leHBvcnQgeyBjb25uZWN0Tm9kZUFkYXB0ZXIgfSBmcm9tIFwiLi9jb25uZWN0LW5vZGUtYWRhcHRlci5qc1wiO1xuZXhwb3J0IHsgdW5pdmVyc2FsUmVxdWVzdEZyb21Ob2RlUmVxdWVzdCwgdW5pdmVyc2FsUmVzcG9uc2VUb05vZGVSZXNwb25zZSwgfSBmcm9tIFwiLi9ub2RlLXVuaXZlcnNhbC1oYW5kbGVyLmpzXCI7XG5leHBvcnQgeyBjcmVhdGVOb2RlSHR0cENsaWVudCB9IGZyb20gXCIuL25vZGUtdW5pdmVyc2FsLWNsaWVudC5qc1wiO1xuZXhwb3J0IHsgSHR0cDJTZXNzaW9uTWFuYWdlciB9IGZyb20gXCIuL2h0dHAyLXNlc3Npb24tbWFuYWdlci5qc1wiO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-error.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-node/dist/esm/node-error.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   H2Code: () => (/* binding */ H2Code),\n/* harmony export */   connectErrorFromH2ResetCode: () => (/* binding */ connectErrorFromH2ResetCode),\n/* harmony export */   connectErrorFromNodeReason: () => (/* binding */ connectErrorFromNodeReason),\n/* harmony export */   getNodeErrorProps: () => (/* binding */ getNodeErrorProps),\n/* harmony export */   unwrapNodeErrorChain: () => (/* binding */ unwrapNodeErrorChain)\n/* harmony export */ });\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @connectrpc/connect */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @connectrpc/connect */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Similar to ConnectError.from(), this function turns any value into\n * a ConnectError, but special cases some Node.js specific error codes and\n * sets an appropriate Connect error code.\n */\nfunction connectErrorFromNodeReason(reason) {\n    let code = _connectrpc_connect__WEBPACK_IMPORTED_MODULE_0__.Code.Internal;\n    const chain = unwrapNodeErrorChain(reason).map(getNodeErrorProps);\n    if (chain.some((p) => p.code == \"ERR_STREAM_WRITE_AFTER_END\")) {\n        // We do not want intentional errors from the server to be shadowed\n        // by client-side errors.\n        // This can occur if the server has written a response with an error\n        // and has ended the connection. This response may already sit in a\n        // buffer on the client, while it is still writing to the request\n        // body.\n        // To avoid this problem, we wrap ERR_STREAM_WRITE_AFTER_END as a\n        // ConnectError with Code.Aborted. The special meaning of this code\n        // in this situation is documented in StreamingConn.send() and in\n        // createServerStreamingFn().\n        code = _connectrpc_connect__WEBPACK_IMPORTED_MODULE_0__.Code.Aborted;\n    }\n    else if (chain.some((p) => p.code == \"ERR_STREAM_DESTROYED\" ||\n        p.code == \"ERR_HTTP2_INVALID_STREAM\" ||\n        p.code == \"ECONNRESET\")) {\n        // A handler whose stream is suddenly destroyed usually means the client\n        // hung up. This behavior is triggered by the conformance test \"cancel_after_begin\".\n        code = _connectrpc_connect__WEBPACK_IMPORTED_MODULE_0__.Code.Aborted;\n    }\n    else if (chain.some((p) => p.code == \"ETIMEDOUT\" ||\n        p.code == \"ENOTFOUND\" ||\n        p.code == \"EAI_AGAIN\" ||\n        p.code == \"ECONNREFUSED\")) {\n        // Calling an unresolvable host should raise a ConnectError with\n        // Code.Aborted.\n        // This behavior is covered by the conformance test \"unresolvable_host\".\n        code = _connectrpc_connect__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n    }\n    const ce = _connectrpc_connect__WEBPACK_IMPORTED_MODULE_1__.ConnectError.from(reason, code);\n    if (ce !== reason) {\n        ce.cause = reason;\n    }\n    return ce;\n}\n/**\n * Unwraps a chain of errors, by walking through all \"cause\" properties\n * recursively.\n * This function is useful to find the root cause of an error.\n */\nfunction unwrapNodeErrorChain(reason) {\n    const chain = [];\n    for (;;) {\n        if (!(reason instanceof Error)) {\n            break;\n        }\n        if (chain.includes(reason)) {\n            // safeguard against infinite loop when \"cause\" points to an ancestor\n            break;\n        }\n        chain.push(reason);\n        if (!(\"cause\" in reason)) {\n            break;\n        }\n        reason = reason.cause;\n    }\n    return chain;\n}\n/**\n * Returns standard Node.js error properties from the given reason, if present.\n *\n * For context: Every error raised by Node.js APIs should expose a `code`\n * property - a string that permanently identifies the error. Some errors may\n * have an additional `syscall` property - a string that identifies native\n * components, for example \"getaddrinfo\" of libuv.\n * For more information, see https://github.com/nodejs/node/blob/f6052c68c1f9a4400a723e9c0b79da14197ab754/lib/internal/errors.js\n */\nfunction getNodeErrorProps(reason) {\n    const props = {};\n    if (reason instanceof Error) {\n        if (\"code\" in reason && typeof reason.code == \"string\") {\n            props.code = reason.code;\n        }\n        if (\"syscall\" in reason && typeof reason.syscall == \"string\") {\n            props.syscall = reason.syscall;\n        }\n    }\n    return props;\n}\n/**\n * Returns a ConnectError for an HTTP/2 error code.\n */\nfunction connectErrorFromH2ResetCode(rstCode) {\n    switch (rstCode) {\n        case H2Code.PROTOCOL_ERROR:\n        case H2Code.INTERNAL_ERROR:\n        case H2Code.FLOW_CONTROL_ERROR:\n        case H2Code.SETTINGS_TIMEOUT:\n        case H2Code.FRAME_SIZE_ERROR:\n        case H2Code.COMPRESSION_ERROR:\n        case H2Code.CONNECT_ERROR:\n            return new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`http/2 stream closed with error code ${H2Code[rstCode]} (0x${rstCode.toString(16)})`, _connectrpc_connect__WEBPACK_IMPORTED_MODULE_0__.Code.Internal);\n        case H2Code.REFUSED_STREAM:\n            return new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`http/2 stream closed with error code ${H2Code[rstCode]} (0x${rstCode.toString(16)})`, _connectrpc_connect__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable);\n        case H2Code.CANCEL:\n            return new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`http/2 stream closed with error code ${H2Code[rstCode]} (0x${rstCode.toString(16)})`, _connectrpc_connect__WEBPACK_IMPORTED_MODULE_0__.Code.Canceled);\n        case H2Code.ENHANCE_YOUR_CALM:\n            return new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`http/2 stream closed with error code ${H2Code[rstCode]} (0x${rstCode.toString(16)})`, _connectrpc_connect__WEBPACK_IMPORTED_MODULE_0__.Code.ResourceExhausted);\n        case H2Code.INADEQUATE_SECURITY:\n            return new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`http/2 stream closed with error code ${H2Code[rstCode]} (0x${rstCode.toString(16)})`, _connectrpc_connect__WEBPACK_IMPORTED_MODULE_0__.Code.PermissionDenied);\n        case H2Code.HTTP_1_1_REQUIRED:\n            return new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`http/2 stream closed with error code ${H2Code[rstCode]} (0x${rstCode.toString(16)})`, _connectrpc_connect__WEBPACK_IMPORTED_MODULE_0__.Code.PermissionDenied);\n        case H2Code.STREAM_CLOSED:\n        default:\n            // Intentionally not mapping STREAM_CLOSED (0x5), see https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#errors\n            break;\n    }\n    return undefined;\n}\nvar H2Code;\n(function (H2Code) {\n    H2Code[H2Code[\"PROTOCOL_ERROR\"] = 1] = \"PROTOCOL_ERROR\";\n    H2Code[H2Code[\"INTERNAL_ERROR\"] = 2] = \"INTERNAL_ERROR\";\n    H2Code[H2Code[\"FLOW_CONTROL_ERROR\"] = 3] = \"FLOW_CONTROL_ERROR\";\n    H2Code[H2Code[\"SETTINGS_TIMEOUT\"] = 4] = \"SETTINGS_TIMEOUT\";\n    H2Code[H2Code[\"STREAM_CLOSED\"] = 5] = \"STREAM_CLOSED\";\n    H2Code[H2Code[\"FRAME_SIZE_ERROR\"] = 6] = \"FRAME_SIZE_ERROR\";\n    H2Code[H2Code[\"REFUSED_STREAM\"] = 7] = \"REFUSED_STREAM\";\n    H2Code[H2Code[\"CANCEL\"] = 8] = \"CANCEL\";\n    H2Code[H2Code[\"COMPRESSION_ERROR\"] = 9] = \"COMPRESSION_ERROR\";\n    H2Code[H2Code[\"CONNECT_ERROR\"] = 10] = \"CONNECT_ERROR\";\n    H2Code[H2Code[\"ENHANCE_YOUR_CALM\"] = 11] = \"ENHANCE_YOUR_CALM\";\n    H2Code[H2Code[\"INADEQUATE_SECURITY\"] = 12] = \"INADEQUATE_SECURITY\";\n    H2Code[H2Code[\"HTTP_1_1_REQUIRED\"] = 13] = \"HTTP_1_1_REQUIRED\";\n})(H2Code || (H2Code = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-headers-polyfill.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-node/dist/esm/node-headers-polyfill.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var undici__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! undici */ \"(rsc)/./node_modules/undici/index.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// The global Headers class was introduced in Node v16.15.0, behind the\n// --experimental-fetch flag. It became available by default with Node\n// v18.0.0.\n// If this code runs in Node < 18, it installs an alternative\n// implementation if one has not already been polyfilled.\nconst [major] = process.versions.node\n    .split(\".\")\n    .map((value) => parseInt(value, 10));\nif (major < 18) {\n    if (typeof globalThis.Headers === \"undefined\") {\n        globalThis.Headers = undici__WEBPACK_IMPORTED_MODULE_0__.Headers;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC1ub2RlL2Rpc3QvZXNtL25vZGUtaGVhZGVycy1wb2x5ZmlsbC5qcyIsIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ29EO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDJDQUFlO0FBQzVDO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0LW5vZGVcXGRpc3RcXGVzbVxcbm9kZS1oZWFkZXJzLXBvbHlmaWxsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBIZWFkZXJzIGFzIEhlYWRlcnNQb2x5ZmlsbCB9IGZyb20gXCJ1bmRpY2lcIjtcbi8vIFRoZSBnbG9iYWwgSGVhZGVycyBjbGFzcyB3YXMgaW50cm9kdWNlZCBpbiBOb2RlIHYxNi4xNS4wLCBiZWhpbmQgdGhlXG4vLyAtLWV4cGVyaW1lbnRhbC1mZXRjaCBmbGFnLiBJdCBiZWNhbWUgYXZhaWxhYmxlIGJ5IGRlZmF1bHQgd2l0aCBOb2RlXG4vLyB2MTguMC4wLlxuLy8gSWYgdGhpcyBjb2RlIHJ1bnMgaW4gTm9kZSA8IDE4LCBpdCBpbnN0YWxscyBhbiBhbHRlcm5hdGl2ZVxuLy8gaW1wbGVtZW50YXRpb24gaWYgb25lIGhhcyBub3QgYWxyZWFkeSBiZWVuIHBvbHlmaWxsZWQuXG5jb25zdCBbbWFqb3JdID0gcHJvY2Vzcy52ZXJzaW9ucy5ub2RlXG4gICAgLnNwbGl0KFwiLlwiKVxuICAgIC5tYXAoKHZhbHVlKSA9PiBwYXJzZUludCh2YWx1ZSwgMTApKTtcbmlmIChtYWpvciA8IDE4KSB7XG4gICAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzLkhlYWRlcnMgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgZ2xvYmFsVGhpcy5IZWFkZXJzID0gSGVhZGVyc1BvbHlmaWxsO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-headers-polyfill.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-transport-options.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-node/dist/esm/node-transport-options.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateNodeTransportOptions: () => (/* binding */ validateNodeTransportOptions)\n/* harmony export */ });\n/* harmony import */ var _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @connectrpc/connect/protocol */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js\");\n/* harmony import */ var _compression_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compression.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/compression.js\");\n/* harmony import */ var _node_universal_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node-universal-client.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-universal-client.js\");\n/* harmony import */ var _http2_session_manager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./http2-session-manager.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/http2-session-manager.js\");\n/* harmony import */ var http2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! http2 */ \"http2\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! https */ \"https\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n/**\n * Asserts that the options are within sane limits, and returns default values\n * where no value is provided.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateNodeTransportOptions(options) {\n    var _a, _b, _c, _d;\n    let httpClient;\n    if (options.httpVersion == \"2\") {\n        let sessionManager;\n        if (options.sessionManager) {\n            sessionManager = options.sessionManager;\n        }\n        else {\n            sessionManager = new _http2_session_manager_js__WEBPACK_IMPORTED_MODULE_2__.Http2SessionManager(options.baseUrl, {\n                pingIntervalMs: options.pingIntervalMs,\n                pingIdleConnection: options.pingIdleConnection,\n                pingTimeoutMs: options.pingTimeoutMs,\n                idleConnectionTimeoutMs: options.idleConnectionTimeoutMs,\n            }, options.nodeOptions);\n        }\n        httpClient = (0,_node_universal_client_js__WEBPACK_IMPORTED_MODULE_1__.createNodeHttpClient)({\n            httpVersion: \"2\",\n            sessionProvider: () => sessionManager,\n        });\n    }\n    else {\n        httpClient = (0,_node_universal_client_js__WEBPACK_IMPORTED_MODULE_1__.createNodeHttpClient)({\n            httpVersion: \"1.1\",\n            nodeOptions: options.nodeOptions,\n        });\n    }\n    return Object.assign(Object.assign(Object.assign({}, options), { httpClient, useBinaryFormat: (_a = options.useBinaryFormat) !== null && _a !== void 0 ? _a : true, interceptors: (_b = options.interceptors) !== null && _b !== void 0 ? _b : [], sendCompression: (_c = options.sendCompression) !== null && _c !== void 0 ? _c : null, acceptCompression: (_d = options.acceptCompression) !== null && _d !== void 0 ? _d : [\n            _compression_js__WEBPACK_IMPORTED_MODULE_0__.compressionGzip,\n            _compression_js__WEBPACK_IMPORTED_MODULE_0__.compressionBrotli,\n        ] }), (0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_6__.validateReadWriteMaxBytes)(options.readMaxBytes, options.writeMaxBytes, options.compressMinBytes));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC1ub2RlL2Rpc3QvZXNtL25vZGUtdHJhbnNwb3J0LW9wdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN5RTtBQUNIO0FBQ0o7QUFDRDtBQUNsQztBQUNGO0FBQ0U7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLDBFQUFtQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLHFCQUFxQiwrRUFBb0I7QUFDekM7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EscUJBQXFCLCtFQUFvQjtBQUN6QztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsdURBQXVELGNBQWM7QUFDckUsWUFBWSw0REFBZTtBQUMzQixZQUFZLDhEQUFpQjtBQUM3QixXQUFXLEdBQUcsdUZBQXlCO0FBQ3ZDIiwic291cmNlcyI6WyJEOlxccHJvamVjdHNcXGF0c1xcbm9kZV9tb2R1bGVzXFxAY29ubmVjdHJwY1xcY29ubmVjdC1ub2RlXFxkaXN0XFxlc21cXG5vZGUtdHJhbnNwb3J0LW9wdGlvbnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IHZhbGlkYXRlUmVhZFdyaXRlTWF4Qnl0ZXMgfSBmcm9tIFwiQGNvbm5lY3RycGMvY29ubmVjdC9wcm90b2NvbFwiO1xuaW1wb3J0IHsgY29tcHJlc3Npb25Ccm90bGksIGNvbXByZXNzaW9uR3ppcCB9IGZyb20gXCIuL2NvbXByZXNzaW9uLmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVOb2RlSHR0cENsaWVudCB9IGZyb20gXCIuL25vZGUtdW5pdmVyc2FsLWNsaWVudC5qc1wiO1xuaW1wb3J0IHsgSHR0cDJTZXNzaW9uTWFuYWdlciB9IGZyb20gXCIuL2h0dHAyLXNlc3Npb24tbWFuYWdlci5qc1wiO1xuaW1wb3J0ICogYXMgaHR0cDIgZnJvbSBcImh0dHAyXCI7XG5pbXBvcnQgKiBhcyBodHRwIGZyb20gXCJodHRwXCI7XG5pbXBvcnQgKiBhcyBodHRwcyBmcm9tIFwiaHR0cHNcIjtcbi8qKlxuICogQXNzZXJ0cyB0aGF0IHRoZSBvcHRpb25zIGFyZSB3aXRoaW4gc2FuZSBsaW1pdHMsIGFuZCByZXR1cm5zIGRlZmF1bHQgdmFsdWVzXG4gKiB3aGVyZSBubyB2YWx1ZSBpcyBwcm92aWRlZC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlTm9kZVRyYW5zcG9ydE9wdGlvbnMob3B0aW9ucykge1xuICAgIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgICBsZXQgaHR0cENsaWVudDtcbiAgICBpZiAob3B0aW9ucy5odHRwVmVyc2lvbiA9PSBcIjJcIikge1xuICAgICAgICBsZXQgc2Vzc2lvbk1hbmFnZXI7XG4gICAgICAgIGlmIChvcHRpb25zLnNlc3Npb25NYW5hZ2VyKSB7XG4gICAgICAgICAgICBzZXNzaW9uTWFuYWdlciA9IG9wdGlvbnMuc2Vzc2lvbk1hbmFnZXI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzZXNzaW9uTWFuYWdlciA9IG5ldyBIdHRwMlNlc3Npb25NYW5hZ2VyKG9wdGlvbnMuYmFzZVVybCwge1xuICAgICAgICAgICAgICAgIHBpbmdJbnRlcnZhbE1zOiBvcHRpb25zLnBpbmdJbnRlcnZhbE1zLFxuICAgICAgICAgICAgICAgIHBpbmdJZGxlQ29ubmVjdGlvbjogb3B0aW9ucy5waW5nSWRsZUNvbm5lY3Rpb24sXG4gICAgICAgICAgICAgICAgcGluZ1RpbWVvdXRNczogb3B0aW9ucy5waW5nVGltZW91dE1zLFxuICAgICAgICAgICAgICAgIGlkbGVDb25uZWN0aW9uVGltZW91dE1zOiBvcHRpb25zLmlkbGVDb25uZWN0aW9uVGltZW91dE1zLFxuICAgICAgICAgICAgfSwgb3B0aW9ucy5ub2RlT3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgaHR0cENsaWVudCA9IGNyZWF0ZU5vZGVIdHRwQ2xpZW50KHtcbiAgICAgICAgICAgIGh0dHBWZXJzaW9uOiBcIjJcIixcbiAgICAgICAgICAgIHNlc3Npb25Qcm92aWRlcjogKCkgPT4gc2Vzc2lvbk1hbmFnZXIsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaHR0cENsaWVudCA9IGNyZWF0ZU5vZGVIdHRwQ2xpZW50KHtcbiAgICAgICAgICAgIGh0dHBWZXJzaW9uOiBcIjEuMVwiLFxuICAgICAgICAgICAgbm9kZU9wdGlvbnM6IG9wdGlvbnMubm9kZU9wdGlvbnMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpLCB7IGh0dHBDbGllbnQsIHVzZUJpbmFyeUZvcm1hdDogKF9hID0gb3B0aW9ucy51c2VCaW5hcnlGb3JtYXQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHRydWUsIGludGVyY2VwdG9yczogKF9iID0gb3B0aW9ucy5pbnRlcmNlcHRvcnMpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IFtdLCBzZW5kQ29tcHJlc3Npb246IChfYyA9IG9wdGlvbnMuc2VuZENvbXByZXNzaW9uKSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiBudWxsLCBhY2NlcHRDb21wcmVzc2lvbjogKF9kID0gb3B0aW9ucy5hY2NlcHRDb21wcmVzc2lvbikgIT09IG51bGwgJiYgX2QgIT09IHZvaWQgMCA/IF9kIDogW1xuICAgICAgICAgICAgY29tcHJlc3Npb25HemlwLFxuICAgICAgICAgICAgY29tcHJlc3Npb25Ccm90bGksXG4gICAgICAgIF0gfSksIHZhbGlkYXRlUmVhZFdyaXRlTWF4Qnl0ZXMob3B0aW9ucy5yZWFkTWF4Qnl0ZXMsIG9wdGlvbnMud3JpdGVNYXhCeXRlcywgb3B0aW9ucy5jb21wcmVzc01pbkJ5dGVzKSk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-transport-options.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-universal-client.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-node/dist/esm/node-universal-client.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNodeHttpClient: () => (/* binding */ createNodeHttpClient)\n/* harmony export */ });\n/* harmony import */ var http2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http2 */ \"http2\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! https */ \"https\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @connectrpc/connect */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @connectrpc/connect */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _node_universal_header_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node-universal-header.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-universal-header.js\");\n/* harmony import */ var _node_error_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node-error.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-error.js\");\n/* harmony import */ var _connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @connectrpc/connect/protocol */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js\");\n/* harmony import */ var _http2_session_manager_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./http2-session-manager.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/http2-session-manager.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n/**\n * Create a universal client function, a minimal abstraction of an HTTP client,\n * using the Node.js `http`, `https`, or `http2` module.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createNodeHttpClient(options) {\n    var _a;\n    if (options.httpVersion == \"1.1\") {\n        return createNodeHttp1Client(options.nodeOptions);\n    }\n    const sessionProvider = (_a = options.sessionProvider) !== null && _a !== void 0 ? _a : ((url) => new _http2_session_manager_js__WEBPACK_IMPORTED_MODULE_5__.Http2SessionManager(url));\n    return createNodeHttp2Client(sessionProvider);\n}\n/**\n * Create an HTTP client using the Node.js `http` or `https` package.\n *\n * The HTTP client is a simple function conforming to the type UniversalClientFn.\n * It takes an UniversalClientRequest as an argument, and returns a promise for\n * an UniversalClientResponse.\n */\nfunction createNodeHttp1Client(httpOptions) {\n    return async function request(req) {\n        const sentinel = createSentinel(req.signal);\n        return new Promise((resolve, reject) => {\n            sentinel.catch((e) => {\n                reject(e);\n            });\n            h1Request(sentinel, req.url, Object.assign(Object.assign({}, httpOptions), { headers: (0,_node_universal_header_js__WEBPACK_IMPORTED_MODULE_3__.webHeaderToNodeHeaders)(req.header, httpOptions === null || httpOptions === void 0 ? void 0 : httpOptions.headers), method: req.method }), (request) => {\n                void sinkRequest(req, request, sentinel);\n                request.on(\"response\", (response) => {\n                    var _a;\n                    response.on(\"error\", sentinel.reject);\n                    sentinel.catch((reason) => response.destroy((0,_node_error_js__WEBPACK_IMPORTED_MODULE_4__.connectErrorFromNodeReason)(reason)));\n                    const trailer = new Headers();\n                    resolve({\n                        status: (_a = response.statusCode) !== null && _a !== void 0 ? _a : 0,\n                        header: (0,_node_universal_header_js__WEBPACK_IMPORTED_MODULE_3__.nodeHeaderToWebHeader)(response.headers),\n                        body: h1ResponseIterable(sentinel, response, trailer),\n                        trailer,\n                    });\n                });\n            });\n        });\n    };\n}\n/**\n * Create an HTTP client using the Node.js `http2` package.\n *\n * The HTTP client is a simple function conforming to the type UniversalClientFn.\n * It takes an UniversalClientRequest as an argument, and returns a promise for\n * an UniversalClientResponse.\n */\nfunction createNodeHttp2Client(sessionProvider) {\n    return function request(req) {\n        const sentinel = createSentinel(req.signal);\n        const sessionManager = sessionProvider(req.url);\n        return new Promise((resolve, reject) => {\n            sentinel.catch((e) => {\n                reject(e);\n            });\n            h2Request(sentinel, sessionManager, req.url, req.method, (0,_node_universal_header_js__WEBPACK_IMPORTED_MODULE_3__.webHeaderToNodeHeaders)(req.header), {}, (stream) => {\n                void sinkRequest(req, stream, sentinel);\n                stream.on(\"response\", (headers) => {\n                    var _a;\n                    const response = {\n                        status: (_a = headers[\":status\"]) !== null && _a !== void 0 ? _a : 0,\n                        header: (0,_node_universal_header_js__WEBPACK_IMPORTED_MODULE_3__.nodeHeaderToWebHeader)(headers),\n                        body: h2ResponseIterable(sentinel, stream, sessionManager),\n                        trailer: h2ResponseTrailer(stream),\n                    };\n                    resolve(response);\n                });\n            });\n        });\n    };\n}\nfunction h1Request(sentinel, url, options, onRequest) {\n    let request;\n    if (new URL(url).protocol.startsWith(\"https\")) {\n        request = https__WEBPACK_IMPORTED_MODULE_2__.request(url, options);\n    }\n    else {\n        request = http__WEBPACK_IMPORTED_MODULE_1__.request(url, options);\n    }\n    sentinel.catch((reason) => request.destroy((0,_node_error_js__WEBPACK_IMPORTED_MODULE_4__.connectErrorFromNodeReason)(reason)));\n    // Node.js will only send headers with the first request body byte by default.\n    // We force it to send headers right away for consistent behavior between\n    // HTTP/1.1 and HTTP/2.2 clients.\n    request.flushHeaders();\n    request.on(\"error\", sentinel.reject);\n    request.on(\"socket\", function onRequestSocket(socket) {\n        function onSocketConnect() {\n            socket.off(\"connect\", onSocketConnect);\n            onRequest(request);\n        }\n        // If readyState is open, then socket is already open due to keepAlive, so\n        // the 'connect' event will never fire so call onRequest explicitly\n        if (socket.readyState === \"open\") {\n            onRequest(request);\n        }\n        else {\n            socket.on(\"connect\", onSocketConnect);\n        }\n    });\n}\nfunction h1ResponseIterable(sentinel, response, trailer) {\n    const inner = response[Symbol.asyncIterator]();\n    return {\n        [Symbol.asyncIterator]() {\n            return {\n                async next() {\n                    const r = await sentinel.race(inner.next());\n                    if (r.done === true) {\n                        (0,_node_universal_header_js__WEBPACK_IMPORTED_MODULE_3__.nodeHeaderToWebHeader)(response.trailers).forEach((value, key) => {\n                            trailer.set(key, value);\n                        });\n                        sentinel.resolve();\n                        await sentinel;\n                    }\n                    return r;\n                },\n                throw(e) {\n                    sentinel.reject(e);\n                    throw e;\n                },\n            };\n        },\n    };\n}\nfunction h2Request(sentinel, sm, url, method, headers, options, onStream) {\n    const requestUrl = new URL(url);\n    if (requestUrl.origin !== sm.authority) {\n        const message = `cannot make a request to ${requestUrl.origin}: the http2 session is connected to ${sm.authority}`;\n        sentinel.reject(new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_6__.ConnectError(message, _connectrpc_connect__WEBPACK_IMPORTED_MODULE_7__.Code.Internal));\n        return;\n    }\n    sm.request(method, requestUrl.pathname + requestUrl.search, headers, {}).then((stream) => {\n        sentinel.catch((reason) => {\n            if (stream.closed) {\n                return;\n            }\n            // Node.js http2 streams that are aborted via an AbortSignal close with\n            // an RST_STREAM with code INTERNAL_ERROR.\n            // To comply with the mapping between gRPC and HTTP/2 codes, we need to\n            // close with code CANCEL.\n            // See https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#errors\n            // See https://www.rfc-editor.org/rfc/rfc7540#section-7\n            const rstCode = reason instanceof _connectrpc_connect__WEBPACK_IMPORTED_MODULE_6__.ConnectError && reason.code == _connectrpc_connect__WEBPACK_IMPORTED_MODULE_7__.Code.Canceled\n                ? _node_error_js__WEBPACK_IMPORTED_MODULE_4__.H2Code.CANCEL\n                : _node_error_js__WEBPACK_IMPORTED_MODULE_4__.H2Code.INTERNAL_ERROR;\n            return new Promise((resolve) => stream.close(rstCode, resolve));\n        });\n        stream.on(\"error\", function h2StreamError(e) {\n            if (stream.writableEnded &&\n                (0,_node_error_js__WEBPACK_IMPORTED_MODULE_4__.unwrapNodeErrorChain)(e)\n                    .map(_node_error_js__WEBPACK_IMPORTED_MODULE_4__.getNodeErrorProps)\n                    .some((p) => p.code == \"ERR_STREAM_WRITE_AFTER_END\")) {\n                return;\n            }\n            sentinel.reject(e);\n        });\n        stream.on(\"close\", function h2StreamClose() {\n            const err = (0,_node_error_js__WEBPACK_IMPORTED_MODULE_4__.connectErrorFromH2ResetCode)(stream.rstCode);\n            if (err) {\n                sentinel.reject(err);\n            }\n        });\n        onStream(stream);\n    }, (reason) => {\n        sentinel.reject(reason);\n    });\n}\nfunction h2ResponseTrailer(response) {\n    const trailer = new Headers();\n    response.on(\"trailers\", (args) => {\n        (0,_node_universal_header_js__WEBPACK_IMPORTED_MODULE_3__.nodeHeaderToWebHeader)(args).forEach((value, key) => {\n            trailer.set(key, value);\n        });\n    });\n    return trailer;\n}\nfunction h2ResponseIterable(sentinel, response, sm) {\n    const inner = response[Symbol.asyncIterator]();\n    return {\n        [Symbol.asyncIterator]() {\n            return {\n                async next() {\n                    const r = await sentinel.race(inner.next());\n                    if (r.done === true) {\n                        sentinel.resolve();\n                        await sentinel;\n                    }\n                    sm === null || sm === void 0 ? void 0 : sm.notifyResponseByteRead(response);\n                    return r;\n                },\n                throw(e) {\n                    sentinel.reject(e);\n                    throw e;\n                },\n            };\n        },\n    };\n}\nasync function sinkRequest(request, nodeRequest, sentinel) {\n    if (request.body === undefined) {\n        await new Promise((resolve) => nodeRequest.end(resolve));\n        return;\n    }\n    const it = request.body[Symbol.asyncIterator]();\n    return new Promise((resolve) => {\n        writeNext();\n        function writeNext() {\n            if (sentinel.isRejected()) {\n                return;\n            }\n            it.next().then((r) => {\n                if (r.done === true) {\n                    nodeRequest.end(resolve);\n                    return;\n                }\n                nodeRequest.write(r.value, \"binary\", function (e) {\n                    if (e === null || e === undefined) {\n                        writeNext();\n                        return;\n                    }\n                    if (it.throw !== undefined) {\n                        it.throw((0,_node_error_js__WEBPACK_IMPORTED_MODULE_4__.connectErrorFromNodeReason)(e)).catch(() => {\n                            //\n                        });\n                    }\n                    // If the server responds and closes the connection before the client has written the entire response\n                    // body, we get an ERR_STREAM_WRITE_AFTER_END error code from Node.js here.\n                    // We do want to notify the iterable of the error condition, but we do not want to reject our sentinel,\n                    // because that would also affect the reading side.\n                    if (nodeRequest.writableEnded &&\n                        (0,_node_error_js__WEBPACK_IMPORTED_MODULE_4__.unwrapNodeErrorChain)(e)\n                            .map(_node_error_js__WEBPACK_IMPORTED_MODULE_4__.getNodeErrorProps)\n                            .some((p) => p.code == \"ERR_STREAM_WRITE_AFTER_END\")) {\n                        return;\n                    }\n                    sentinel.reject(e);\n                });\n            }, (e) => {\n                sentinel.reject(e);\n            });\n        }\n    });\n}\nfunction createSentinel(signal) {\n    let res;\n    let rej;\n    let resolved = false;\n    let rejected = false;\n    const p = new Promise((resolve, reject) => {\n        res = resolve;\n        rej = reject;\n    });\n    const c = {\n        resolve() {\n            if (!resolved && !rejected) {\n                resolved = true;\n                res === null || res === void 0 ? void 0 : res();\n            }\n        },\n        isResolved() {\n            return resolved;\n        },\n        reject(reason) {\n            if (!resolved && !rejected) {\n                rejected = true;\n                rej === null || rej === void 0 ? void 0 : rej((0,_node_error_js__WEBPACK_IMPORTED_MODULE_4__.connectErrorFromNodeReason)(reason));\n            }\n        },\n        isRejected() {\n            return rejected;\n        },\n        async race(promise) {\n            const r = await Promise.race([promise, p]);\n            if (r === undefined && resolved) {\n                throw new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_6__.ConnectError(\"sentinel completed early\", _connectrpc_connect__WEBPACK_IMPORTED_MODULE_7__.Code.Internal);\n            }\n            return r;\n        },\n    };\n    const s = Object.assign(p, c);\n    function onSignalAbort() {\n        c.reject((0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_8__.getAbortSignalReason)(this));\n    }\n    if (signal) {\n        if (signal.aborted) {\n            c.reject((0,_connectrpc_connect_protocol__WEBPACK_IMPORTED_MODULE_8__.getAbortSignalReason)(signal));\n        }\n        else {\n            signal.addEventListener(\"abort\", onSignalAbort);\n        }\n        p.finally(() => signal.removeEventListener(\"abort\", onSignalAbort)).catch(() => {\n            // We intentionally swallow sentinel rejection - errors must\n            // propagate through the request or response iterables.\n        });\n    }\n    return s;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-universal-client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-universal-handler.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-node/dist/esm/node-universal-handler.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   universalRequestFromNodeRequest: () => (/* binding */ universalRequestFromNodeRequest),\n/* harmony export */   universalResponseToNodeResponse: () => (/* binding */ universalResponseToNodeResponse)\n/* harmony export */ });\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @connectrpc/connect */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @connectrpc/connect */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _node_universal_header_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node-universal-header.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-universal-header.js\");\n/* harmony import */ var _node_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node-error.js */ \"(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-error.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\n\n\n\nfunction universalRequestFromNodeRequest(nodeRequest, ...rest) {\n    var _a, _b;\n    const nodeResponse = rest.length === 3 ? rest[0] : undefined;\n    const parsedJsonBody = rest.length === 3 ? rest[1] : rest[0];\n    const contextValues = rest.length === 3 ? rest[2] : rest[1];\n    const encrypted = \"encrypted\" in nodeRequest.socket && nodeRequest.socket.encrypted;\n    const protocol = encrypted ? \"https\" : \"http\";\n    const authority = \"authority\" in nodeRequest\n        ? nodeRequest.authority\n        : nodeRequest.headers.host;\n    const pathname = (_a = nodeRequest.url) !== null && _a !== void 0 ? _a : \"\";\n    if (authority === undefined) {\n        throw new _connectrpc_connect__WEBPACK_IMPORTED_MODULE_2__.ConnectError(\"unable to determine request authority from Node.js server request\", _connectrpc_connect__WEBPACK_IMPORTED_MODULE_3__.Code.Internal);\n    }\n    const body = parsedJsonBody !== undefined\n        ? parsedJsonBody\n        : asyncIterableFromNodeServerRequest(nodeRequest);\n    const abortController = new AbortController();\n    if (\"stream\" in nodeRequest) {\n        // HTTP/2 has error codes we want to honor\n        nodeRequest.once(\"close\", () => {\n            const err = (0,_node_error_js__WEBPACK_IMPORTED_MODULE_1__.connectErrorFromH2ResetCode)(nodeRequest.stream.rstCode);\n            if (err !== undefined) {\n                abortController.abort(err);\n            }\n            else {\n                abortController.abort();\n            }\n        });\n    }\n    else {\n        // HTTP/1.1 does not have error codes, but Node.js has ECONNRESET\n        const nodeResponsOrRequest = nodeResponse !== null && nodeResponse !== void 0 ? nodeResponse : nodeRequest;\n        const onH1Error = (e) => {\n            nodeRequest.off(\"error\", onH1Error);\n            nodeResponsOrRequest.off(\"close\", onH1Close);\n            abortController.abort((0,_node_error_js__WEBPACK_IMPORTED_MODULE_1__.connectErrorFromNodeReason)(e));\n        };\n        const onH1Close = () => {\n            nodeRequest.off(\"error\", onH1Error);\n            nodeResponsOrRequest.off(\"close\", onH1Close);\n            // When subscribed to the response, this can get called before \"error\"\n            abortController.abort(nodeRequest.errored\n                ? (0,_node_error_js__WEBPACK_IMPORTED_MODULE_1__.connectErrorFromNodeReason)(nodeRequest.errored)\n                : undefined);\n        };\n        nodeRequest.once(\"error\", onH1Error);\n        // Node emits close on the request as soon as all data is read.\n        // We instead subscribe to the response (if available)\n        //\n        // Ref: https://github.com/nodejs/node/issues/40775\n        nodeResponsOrRequest.once(\"close\", onH1Close);\n    }\n    return {\n        httpVersion: nodeRequest.httpVersion,\n        method: (_b = nodeRequest.method) !== null && _b !== void 0 ? _b : \"\",\n        url: new URL(pathname, `${protocol}://${authority}`).toString(),\n        header: (0,_node_universal_header_js__WEBPACK_IMPORTED_MODULE_0__.nodeHeaderToWebHeader)(nodeRequest.headers),\n        body,\n        signal: abortController.signal,\n        contextValues: contextValues,\n    };\n}\n/**\n * Writes a UniversalServerResponse to a Node.js server response.\n * This function helps to implement adapters to server frameworks running\n * on Node.js. Please be careful using this function in your own code, as we\n * may have to make changes to it in the future.\n */\nasync function universalResponseToNodeResponse(universalResponse, nodeResponse) {\n    var _a, _b, _c;\n    const it = (_a = universalResponse.body) === null || _a === void 0 ? void 0 : _a[Symbol.asyncIterator]();\n    let isWriteError = false;\n    try {\n        if (it !== undefined) {\n            let chunk = await it.next();\n            isWriteError = true;\n            // we deliberately send headers after first read, not before,\n            // because we have to give the implementation a chance to\n            // set response headers\n            nodeResponse.writeHead(universalResponse.status, (0,_node_universal_header_js__WEBPACK_IMPORTED_MODULE_0__.webHeaderToNodeHeaders)(universalResponse.header));\n            isWriteError = false;\n            for (; chunk.done !== true; chunk = await it.next()) {\n                isWriteError = true;\n                await write(nodeResponse, chunk.value);\n                if (\"flush\" in nodeResponse &&\n                    typeof nodeResponse.flush == \"function\") {\n                    // The npm package \"compression\" is an express middleware that is widely used,\n                    // for example in next.js. It uses the npm package \"compressible\" to determine\n                    // whether to apply compression to a response. Unfortunately, \"compressible\"\n                    // matches every mime type that ends with \"+json\", causing our server-streaming\n                    // RPCs to be buffered.\n                    // The package modifies the response object, and adds a flush() method, which\n                    // flushes the underlying gzip or deflate stream from the Node.js zlib module.\n                    // The method is added here:\n                    // https://github.com/expressjs/compression/blob/ad5113b98cafe1382a0ece30bb4673707ac59ce7/index.js#L70\n                    nodeResponse.flush();\n                }\n                isWriteError = false;\n            }\n        }\n        if (!nodeResponse.headersSent) {\n            nodeResponse.writeHead(universalResponse.status, (0,_node_universal_header_js__WEBPACK_IMPORTED_MODULE_0__.webHeaderToNodeHeaders)(universalResponse.header));\n        }\n        if (universalResponse.trailer) {\n            nodeResponse.addTrailers((0,_node_universal_header_js__WEBPACK_IMPORTED_MODULE_0__.webHeaderToNodeHeaders)(universalResponse.trailer));\n        }\n        await new Promise((resolve) => {\n            // The npm package \"compression\" crashes when a callback is passed to end()\n            // https://github.com/expressjs/compression/blob/ad5113b98cafe1382a0ece30bb4673707ac59ce7/index.js#L115\n            nodeResponse.once(\"end\", resolve);\n            nodeResponse.end();\n        });\n    }\n    catch (e) {\n        // Report write errors to the handler.\n        if (isWriteError) {\n            (_b = it === null || it === void 0 ? void 0 : it.throw) === null || _b === void 0 ? void 0 : _b.call(it, e).catch(() => { });\n        }\n        throw (0,_node_error_js__WEBPACK_IMPORTED_MODULE_1__.connectErrorFromNodeReason)(e);\n    }\n    finally {\n        (_c = it === null || it === void 0 ? void 0 : it.return) === null || _c === void 0 ? void 0 : _c.call(it).catch(() => { });\n    }\n}\nfunction asyncIterableFromNodeServerRequest(request) {\n    return __asyncGenerator(this, arguments, function* asyncIterableFromNodeServerRequest_1() {\n        var _a, e_1, _b, _c;\n        const it = request.iterator({\n            // Node.js v16 closes request and response when this option isn't disabled.\n            // When one of our handlers receives invalid data (such as an unexpected\n            // compression flag in a streaming request), we're unable to write the error\n            // response.\n            // Later major versions have a more sensible behavior - we can revert this\n            // workaround once we stop supporting v16.\n            destroyOnReturn: false,\n        });\n        try {\n            for (var _d = true, it_1 = __asyncValues(it), it_1_1; it_1_1 = yield __await(it_1.next()), _a = it_1_1.done, !_a; _d = true) {\n                _c = it_1_1.value;\n                _d = false;\n                const chunk = _c;\n                yield yield __await(chunk);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_d && !_a && (_b = it_1.return)) yield __await(_b.call(it_1));\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    });\n}\nfunction write(stream, data) {\n    return new Promise((resolve, reject) => {\n        if (stream.errored) {\n            return error(stream.errored);\n        }\n        stream.once(\"error\", error);\n        stream.once(\"drain\", drain);\n        // flushed == false: the stream wishes for the calling code to wait for\n        // the 'drain' event to be emitted before continuing to write additional\n        // data.\n        const flushed = stream.write(data, \"binary\", function (err) {\n            if (err && !flushed) {\n                // We are never getting a \"drain\" nor an \"error\" event if the stream\n                // has already ended (ERR_STREAM_WRITE_AFTER_END), so we have to\n                // resolve our promise in this callback.\n                error(err);\n                // However, once we do that (and remove our event listeners), we _do_\n                // get an \"error\" event, which ends up as an uncaught exception.\n                // We silence this error specifically with the following listener.\n                // All of this seems very fragile.\n                stream.once(\"error\", () => {\n                    //\n                });\n            }\n        });\n        if (flushed) {\n            drain();\n        }\n        function error(err) {\n            stream.off(\"error\", error);\n            stream.off(\"drain\", drain);\n            reject(err);\n        }\n        function drain() {\n            stream.off(\"error\", error);\n            stream.off(\"drain\", drain);\n            resolve();\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-universal-handler.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-universal-header.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect-node/dist/esm/node-universal-header.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   nodeHeaderToWebHeader: () => (/* binding */ nodeHeaderToWebHeader),\n/* harmony export */   webHeaderToNodeHeaders: () => (/* binding */ webHeaderToNodeHeaders)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Convert a Node.js header object to a fetch API Headers object.\n *\n * This function works for Node.js incoming and outgoing headers, and for the\n * http and the http2 package.\n *\n * HTTP/2 pseudo-headers (:method, :path, etc.) are stripped.\n */\nfunction nodeHeaderToWebHeader(nodeHeaders) {\n    const header = new Headers();\n    for (const [k, v] of Object.entries(nodeHeaders)) {\n        if (k.startsWith(\":\")) {\n            continue;\n        }\n        if (v === undefined) {\n            continue;\n        }\n        if (typeof v == \"string\") {\n            header.append(k, v);\n        }\n        else if (typeof v == \"number\") {\n            header.append(k, String(v));\n        }\n        else {\n            for (const e of v) {\n                header.append(k, e);\n            }\n        }\n    }\n    return header;\n}\nfunction webHeaderToNodeHeaders(headersInit, defaultNodeHeaders) {\n    if (headersInit === undefined && defaultNodeHeaders === undefined) {\n        return undefined;\n    }\n    const o = Object.create(null);\n    if (defaultNodeHeaders !== undefined) {\n        for (const [key, value] of Object.entries(defaultNodeHeaders)) {\n            if (Array.isArray(value)) {\n                o[key] = value.concat();\n            }\n            else if (value !== undefined) {\n                o[key] = value;\n            }\n        }\n    }\n    if (headersInit !== undefined) {\n        if (Array.isArray(headersInit)) {\n            for (const [key, value] of headersInit) {\n                appendWebHeader(o, key, value);\n            }\n        }\n        else if (\"forEach\" in headersInit) {\n            if (typeof headersInit.forEach == \"function\") {\n                headersInit.forEach((value, key) => {\n                    appendWebHeader(o, key, value);\n                });\n            }\n        }\n        else {\n            for (const [key, value] of Object.entries(headersInit)) {\n                appendWebHeader(o, key, value);\n            }\n        }\n    }\n    return o;\n}\nfunction appendWebHeader(o, key, value) {\n    key = key.toLowerCase();\n    const existing = o[key];\n    if (Array.isArray(existing)) {\n        existing.push(value);\n    }\n    else if (existing === undefined) {\n        o[key] = value;\n    }\n    else {\n        o[key] = [existing.toString(), value];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC1ub2RlL2Rpc3QvZXNtL25vZGUtdW5pdmVyc2FsLWhlYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxccHJvamVjdHNcXGF0c1xcbm9kZV9tb2R1bGVzXFxAY29ubmVjdHJwY1xcY29ubmVjdC1ub2RlXFxkaXN0XFxlc21cXG5vZGUtdW5pdmVyc2FsLWhlYWRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBDb252ZXJ0IGEgTm9kZS5qcyBoZWFkZXIgb2JqZWN0IHRvIGEgZmV0Y2ggQVBJIEhlYWRlcnMgb2JqZWN0LlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gd29ya3MgZm9yIE5vZGUuanMgaW5jb21pbmcgYW5kIG91dGdvaW5nIGhlYWRlcnMsIGFuZCBmb3IgdGhlXG4gKiBodHRwIGFuZCB0aGUgaHR0cDIgcGFja2FnZS5cbiAqXG4gKiBIVFRQLzIgcHNldWRvLWhlYWRlcnMgKDptZXRob2QsIDpwYXRoLCBldGMuKSBhcmUgc3RyaXBwZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBub2RlSGVhZGVyVG9XZWJIZWFkZXIobm9kZUhlYWRlcnMpIHtcbiAgICBjb25zdCBoZWFkZXIgPSBuZXcgSGVhZGVycygpO1xuICAgIGZvciAoY29uc3QgW2ssIHZdIG9mIE9iamVjdC5lbnRyaWVzKG5vZGVIZWFkZXJzKSkge1xuICAgICAgICBpZiAoay5zdGFydHNXaXRoKFwiOlwiKSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHYgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB2ID09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIGhlYWRlci5hcHBlbmQoaywgdik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIHYgPT0gXCJudW1iZXJcIikge1xuICAgICAgICAgICAgaGVhZGVyLmFwcGVuZChrLCBTdHJpbmcodikpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZm9yIChjb25zdCBlIG9mIHYpIHtcbiAgICAgICAgICAgICAgICBoZWFkZXIuYXBwZW5kKGssIGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBoZWFkZXI7XG59XG5leHBvcnQgZnVuY3Rpb24gd2ViSGVhZGVyVG9Ob2RlSGVhZGVycyhoZWFkZXJzSW5pdCwgZGVmYXVsdE5vZGVIZWFkZXJzKSB7XG4gICAgaWYgKGhlYWRlcnNJbml0ID09PSB1bmRlZmluZWQgJiYgZGVmYXVsdE5vZGVIZWFkZXJzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgY29uc3QgbyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgaWYgKGRlZmF1bHROb2RlSGVhZGVycyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGRlZmF1bHROb2RlSGVhZGVycykpIHtcbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIG9ba2V5XSA9IHZhbHVlLmNvbmNhdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIG9ba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChoZWFkZXJzSW5pdCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGhlYWRlcnNJbml0KSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgaGVhZGVyc0luaXQpIHtcbiAgICAgICAgICAgICAgICBhcHBlbmRXZWJIZWFkZXIobywga2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoXCJmb3JFYWNoXCIgaW4gaGVhZGVyc0luaXQpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaGVhZGVyc0luaXQuZm9yRWFjaCA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICBoZWFkZXJzSW5pdC5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGFwcGVuZFdlYkhlYWRlcihvLCBrZXksIHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGhlYWRlcnNJbml0KSkge1xuICAgICAgICAgICAgICAgIGFwcGVuZFdlYkhlYWRlcihvLCBrZXksIHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbztcbn1cbmZ1bmN0aW9uIGFwcGVuZFdlYkhlYWRlcihvLCBrZXksIHZhbHVlKSB7XG4gICAga2V5ID0ga2V5LnRvTG93ZXJDYXNlKCk7XG4gICAgY29uc3QgZXhpc3RpbmcgPSBvW2tleV07XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZXhpc3RpbmcpKSB7XG4gICAgICAgIGV4aXN0aW5nLnB1c2godmFsdWUpO1xuICAgIH1cbiAgICBlbHNlIGlmIChleGlzdGluZyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIG9ba2V5XSA9IHZhbHVlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgb1trZXldID0gW2V4aXN0aW5nLnRvU3RyaW5nKCksIHZhbHVlXTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect-node/dist/esm/node-universal-header.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/any-client.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/any-client.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeAnyClient: () => (/* binding */ makeAnyClient)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Create any client for the given service.\n *\n * The given createMethod function is called for each method definition\n * of the service. The function it returns is added to the client object\n * as a method.\n */\nfunction makeAnyClient(service, createMethod) {\n    const client = {};\n    for (const [localName, methodInfo] of Object.entries(service.methods)) {\n        const method = createMethod(Object.assign(Object.assign({}, methodInfo), { localName,\n            service }));\n        if (method != null) {\n            client[localName] = method;\n        }\n    }\n    return client;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9hbnktY2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0Esa0VBQWtFLGlCQUFpQjtBQUNuRixxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxccHJvamVjdHNcXGF0c1xcbm9kZV9tb2R1bGVzXFxAY29ubmVjdHJwY1xcY29ubmVjdFxcZGlzdFxcZXNtXFxhbnktY2xpZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIENyZWF0ZSBhbnkgY2xpZW50IGZvciB0aGUgZ2l2ZW4gc2VydmljZS5cbiAqXG4gKiBUaGUgZ2l2ZW4gY3JlYXRlTWV0aG9kIGZ1bmN0aW9uIGlzIGNhbGxlZCBmb3IgZWFjaCBtZXRob2QgZGVmaW5pdGlvblxuICogb2YgdGhlIHNlcnZpY2UuIFRoZSBmdW5jdGlvbiBpdCByZXR1cm5zIGlzIGFkZGVkIHRvIHRoZSBjbGllbnQgb2JqZWN0XG4gKiBhcyBhIG1ldGhvZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ha2VBbnlDbGllbnQoc2VydmljZSwgY3JlYXRlTWV0aG9kKSB7XG4gICAgY29uc3QgY2xpZW50ID0ge307XG4gICAgZm9yIChjb25zdCBbbG9jYWxOYW1lLCBtZXRob2RJbmZvXSBvZiBPYmplY3QuZW50cmllcyhzZXJ2aWNlLm1ldGhvZHMpKSB7XG4gICAgICAgIGNvbnN0IG1ldGhvZCA9IGNyZWF0ZU1ldGhvZChPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG1ldGhvZEluZm8pLCB7IGxvY2FsTmFtZSxcbiAgICAgICAgICAgIHNlcnZpY2UgfSkpO1xuICAgICAgICBpZiAobWV0aG9kICE9IG51bGwpIHtcbiAgICAgICAgICAgIGNsaWVudFtsb2NhbE5hbWVdID0gbWV0aG9kO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBjbGllbnQ7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/any-client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js":
/*!***********************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/code.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Code: () => (/* binding */ Code)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Connect represents categories of errors as codes, and each code maps to a\n * specific HTTP status code. The codes and their semantics were chosen to\n * match gRPC. Only the codes below are valid — there are no user-defined\n * codes.\n *\n * See the specification at https://connectrpc.com/docs/protocol#error-codes\n * for details.\n */\nvar Code;\n(function (Code) {\n    /**\n     * Canceled, usually be the user\n     */\n    Code[Code[\"Canceled\"] = 1] = \"Canceled\";\n    /**\n     * Unknown error\n     */\n    Code[Code[\"Unknown\"] = 2] = \"Unknown\";\n    /**\n     * Argument invalid regardless of system state\n     */\n    Code[Code[\"InvalidArgument\"] = 3] = \"InvalidArgument\";\n    /**\n     * Operation expired, may or may not have completed.\n     */\n    Code[Code[\"DeadlineExceeded\"] = 4] = \"DeadlineExceeded\";\n    /**\n     * Entity not found.\n     */\n    Code[Code[\"NotFound\"] = 5] = \"NotFound\";\n    /**\n     * Entity already exists.\n     */\n    Code[Code[\"AlreadyExists\"] = 6] = \"AlreadyExists\";\n    /**\n     * Operation not authorized.\n     */\n    Code[Code[\"PermissionDenied\"] = 7] = \"PermissionDenied\";\n    /**\n     * Quota exhausted.\n     */\n    Code[Code[\"ResourceExhausted\"] = 8] = \"ResourceExhausted\";\n    /**\n     * Argument invalid in current system state.\n     */\n    Code[Code[\"FailedPrecondition\"] = 9] = \"FailedPrecondition\";\n    /**\n     * Operation aborted.\n     */\n    Code[Code[\"Aborted\"] = 10] = \"Aborted\";\n    /**\n     * Out of bounds, use instead of FailedPrecondition.\n     */\n    Code[Code[\"OutOfRange\"] = 11] = \"OutOfRange\";\n    /**\n     * Operation not implemented or disabled.\n     */\n    Code[Code[\"Unimplemented\"] = 12] = \"Unimplemented\";\n    /**\n     * Internal error, reserved for \"serious errors\".\n     */\n    Code[Code[\"Internal\"] = 13] = \"Internal\";\n    /**\n     * Unavailable, client should back off and retry.\n     */\n    Code[Code[\"Unavailable\"] = 14] = \"Unavailable\";\n    /**\n     * Unrecoverable data loss or corruption.\n     */\n    Code[Code[\"DataLoss\"] = 15] = \"DataLoss\";\n    /**\n     * Request isn't authenticated.\n     */\n    Code[Code[\"Unauthenticated\"] = 16] = \"Unauthenticated\";\n})(Code || (Code = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9jb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsb0JBQW9CIiwic291cmNlcyI6WyJEOlxccHJvamVjdHNcXGF0c1xcbm9kZV9tb2R1bGVzXFxAY29ubmVjdHJwY1xcY29ubmVjdFxcZGlzdFxcZXNtXFxjb2RlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIENvbm5lY3QgcmVwcmVzZW50cyBjYXRlZ29yaWVzIG9mIGVycm9ycyBhcyBjb2RlcywgYW5kIGVhY2ggY29kZSBtYXBzIHRvIGFcbiAqIHNwZWNpZmljIEhUVFAgc3RhdHVzIGNvZGUuIFRoZSBjb2RlcyBhbmQgdGhlaXIgc2VtYW50aWNzIHdlcmUgY2hvc2VuIHRvXG4gKiBtYXRjaCBnUlBDLiBPbmx5IHRoZSBjb2RlcyBiZWxvdyBhcmUgdmFsaWQg4oCUIHRoZXJlIGFyZSBubyB1c2VyLWRlZmluZWRcbiAqIGNvZGVzLlxuICpcbiAqIFNlZSB0aGUgc3BlY2lmaWNhdGlvbiBhdCBodHRwczovL2Nvbm5lY3RycGMuY29tL2RvY3MvcHJvdG9jb2wjZXJyb3ItY29kZXNcbiAqIGZvciBkZXRhaWxzLlxuICovXG5leHBvcnQgdmFyIENvZGU7XG4oZnVuY3Rpb24gKENvZGUpIHtcbiAgICAvKipcbiAgICAgKiBDYW5jZWxlZCwgdXN1YWxseSBiZSB0aGUgdXNlclxuICAgICAqL1xuICAgIENvZGVbQ29kZVtcIkNhbmNlbGVkXCJdID0gMV0gPSBcIkNhbmNlbGVkXCI7XG4gICAgLyoqXG4gICAgICogVW5rbm93biBlcnJvclxuICAgICAqL1xuICAgIENvZGVbQ29kZVtcIlVua25vd25cIl0gPSAyXSA9IFwiVW5rbm93blwiO1xuICAgIC8qKlxuICAgICAqIEFyZ3VtZW50IGludmFsaWQgcmVnYXJkbGVzcyBvZiBzeXN0ZW0gc3RhdGVcbiAgICAgKi9cbiAgICBDb2RlW0NvZGVbXCJJbnZhbGlkQXJndW1lbnRcIl0gPSAzXSA9IFwiSW52YWxpZEFyZ3VtZW50XCI7XG4gICAgLyoqXG4gICAgICogT3BlcmF0aW9uIGV4cGlyZWQsIG1heSBvciBtYXkgbm90IGhhdmUgY29tcGxldGVkLlxuICAgICAqL1xuICAgIENvZGVbQ29kZVtcIkRlYWRsaW5lRXhjZWVkZWRcIl0gPSA0XSA9IFwiRGVhZGxpbmVFeGNlZWRlZFwiO1xuICAgIC8qKlxuICAgICAqIEVudGl0eSBub3QgZm91bmQuXG4gICAgICovXG4gICAgQ29kZVtDb2RlW1wiTm90Rm91bmRcIl0gPSA1XSA9IFwiTm90Rm91bmRcIjtcbiAgICAvKipcbiAgICAgKiBFbnRpdHkgYWxyZWFkeSBleGlzdHMuXG4gICAgICovXG4gICAgQ29kZVtDb2RlW1wiQWxyZWFkeUV4aXN0c1wiXSA9IDZdID0gXCJBbHJlYWR5RXhpc3RzXCI7XG4gICAgLyoqXG4gICAgICogT3BlcmF0aW9uIG5vdCBhdXRob3JpemVkLlxuICAgICAqL1xuICAgIENvZGVbQ29kZVtcIlBlcm1pc3Npb25EZW5pZWRcIl0gPSA3XSA9IFwiUGVybWlzc2lvbkRlbmllZFwiO1xuICAgIC8qKlxuICAgICAqIFF1b3RhIGV4aGF1c3RlZC5cbiAgICAgKi9cbiAgICBDb2RlW0NvZGVbXCJSZXNvdXJjZUV4aGF1c3RlZFwiXSA9IDhdID0gXCJSZXNvdXJjZUV4aGF1c3RlZFwiO1xuICAgIC8qKlxuICAgICAqIEFyZ3VtZW50IGludmFsaWQgaW4gY3VycmVudCBzeXN0ZW0gc3RhdGUuXG4gICAgICovXG4gICAgQ29kZVtDb2RlW1wiRmFpbGVkUHJlY29uZGl0aW9uXCJdID0gOV0gPSBcIkZhaWxlZFByZWNvbmRpdGlvblwiO1xuICAgIC8qKlxuICAgICAqIE9wZXJhdGlvbiBhYm9ydGVkLlxuICAgICAqL1xuICAgIENvZGVbQ29kZVtcIkFib3J0ZWRcIl0gPSAxMF0gPSBcIkFib3J0ZWRcIjtcbiAgICAvKipcbiAgICAgKiBPdXQgb2YgYm91bmRzLCB1c2UgaW5zdGVhZCBvZiBGYWlsZWRQcmVjb25kaXRpb24uXG4gICAgICovXG4gICAgQ29kZVtDb2RlW1wiT3V0T2ZSYW5nZVwiXSA9IDExXSA9IFwiT3V0T2ZSYW5nZVwiO1xuICAgIC8qKlxuICAgICAqIE9wZXJhdGlvbiBub3QgaW1wbGVtZW50ZWQgb3IgZGlzYWJsZWQuXG4gICAgICovXG4gICAgQ29kZVtDb2RlW1wiVW5pbXBsZW1lbnRlZFwiXSA9IDEyXSA9IFwiVW5pbXBsZW1lbnRlZFwiO1xuICAgIC8qKlxuICAgICAqIEludGVybmFsIGVycm9yLCByZXNlcnZlZCBmb3IgXCJzZXJpb3VzIGVycm9yc1wiLlxuICAgICAqL1xuICAgIENvZGVbQ29kZVtcIkludGVybmFsXCJdID0gMTNdID0gXCJJbnRlcm5hbFwiO1xuICAgIC8qKlxuICAgICAqIFVuYXZhaWxhYmxlLCBjbGllbnQgc2hvdWxkIGJhY2sgb2ZmIGFuZCByZXRyeS5cbiAgICAgKi9cbiAgICBDb2RlW0NvZGVbXCJVbmF2YWlsYWJsZVwiXSA9IDE0XSA9IFwiVW5hdmFpbGFibGVcIjtcbiAgICAvKipcbiAgICAgKiBVbnJlY292ZXJhYmxlIGRhdGEgbG9zcyBvciBjb3JydXB0aW9uLlxuICAgICAqL1xuICAgIENvZGVbQ29kZVtcIkRhdGFMb3NzXCJdID0gMTVdID0gXCJEYXRhTG9zc1wiO1xuICAgIC8qKlxuICAgICAqIFJlcXVlc3QgaXNuJ3QgYXV0aGVudGljYXRlZC5cbiAgICAgKi9cbiAgICBDb2RlW0NvZGVbXCJVbmF1dGhlbnRpY2F0ZWRcIl0gPSAxNl0gPSBcIlVuYXV0aGVudGljYXRlZFwiO1xufSkoQ29kZSB8fCAoQ29kZSA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js":
/*!********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/connect-error.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConnectError: () => (/* binding */ ConnectError)\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _protocol_connect_code_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./protocol-connect/code-string.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * ConnectError captures four pieces of information: a Code, an error\n * message, an optional cause of the error, and an optional collection of\n * arbitrary Protobuf messages called  \"details\".\n *\n * Because developer tools typically show just the error message, we prefix\n * it with the status code, so that the most important information is always\n * visible immediately.\n *\n * Error details are wrapped with google.protobuf.Any on the wire, so that\n * a server or middleware can attach arbitrary data to an error. Use the\n * method findDetails() to retrieve the details.\n */\nclass ConnectError extends Error {\n    /**\n     * Create a new ConnectError.\n     * If no code is provided, code \"unknown\" is used.\n     * Outgoing details are only relevant for the server side - a service may\n     * raise an error with details, and it is up to the protocol implementation\n     * to encode and send the details along with error.\n     */\n    constructor(message, code = _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unknown, metadata, outgoingDetails, cause) {\n        super(createMessage(message, code));\n        this.name = \"ConnectError\";\n        // see https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#example\n        Object.setPrototypeOf(this, new.target.prototype);\n        this.rawMessage = message;\n        this.code = code;\n        this.metadata = new Headers(metadata !== null && metadata !== void 0 ? metadata : {});\n        this.details = outgoingDetails !== null && outgoingDetails !== void 0 ? outgoingDetails : [];\n        this.cause = cause;\n    }\n    /**\n     * Convert any value - typically a caught error into a ConnectError,\n     * following these rules:\n     * - If the value is already a ConnectError, return it as is.\n     * - If the value is an AbortError from the fetch API, return the message\n     *   of the AbortError with code Canceled.\n     * - For other Errors, return the error message with code Unknown by default.\n     * - For other values, return the values String representation as a message,\n     *   with the code Unknown by default.\n     * The original value will be used for the \"cause\" property for the new\n     * ConnectError.\n     */\n    static from(reason, code = _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unknown) {\n        if (reason instanceof ConnectError) {\n            return reason;\n        }\n        if (reason instanceof Error) {\n            if (reason.name == \"AbortError\") {\n                // Fetch requests can only be canceled with an AbortController.\n                // We detect that condition by looking at the name of the raised\n                // error object, and translate to the appropriate status code.\n                return new ConnectError(reason.message, _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Canceled);\n            }\n            return new ConnectError(reason.message, code, undefined, undefined, reason);\n        }\n        return new ConnectError(String(reason), code, undefined, undefined, reason);\n    }\n    static [Symbol.hasInstance](v) {\n        if (!(v instanceof Error)) {\n            return false;\n        }\n        if (Object.getPrototypeOf(v) === ConnectError.prototype) {\n            return true;\n        }\n        return (v.name === \"ConnectError\" &&\n            \"code\" in v &&\n            typeof v.code === \"number\" &&\n            \"metadata\" in v &&\n            \"details\" in v &&\n            Array.isArray(v.details) &&\n            \"rawMessage\" in v &&\n            typeof v.rawMessage == \"string\" &&\n            \"cause\" in v);\n    }\n    findDetails(typeOrRegistry) {\n        const registry = \"typeName\" in typeOrRegistry\n            ? {\n                findMessage: (typeName) => typeName === typeOrRegistry.typeName ? typeOrRegistry : undefined,\n            }\n            : typeOrRegistry;\n        const details = [];\n        for (const data of this.details) {\n            if (\"getType\" in data) {\n                if (registry.findMessage(data.getType().typeName)) {\n                    details.push(data);\n                }\n                continue;\n            }\n            const type = registry.findMessage(data.type);\n            if (type) {\n                try {\n                    details.push(type.fromBinary(data.value));\n                }\n                catch (_) {\n                    // We silently give up if we are unable to parse the detail, because\n                    // that appears to be the least worst behavior.\n                    // It is very unlikely that a user surrounds a catch body handling the\n                    // error with another try-catch statement, and we do not want to\n                    // recommend doing so.\n                }\n            }\n        }\n        return details;\n    }\n}\n/**\n * Create an error message, prefixing the given code.\n */\nfunction createMessage(message, code) {\n    return message.length\n        ? `[${(0,_protocol_connect_code_string_js__WEBPACK_IMPORTED_MODULE_1__.codeToString)(code)}] ${message}`\n        : `[${(0,_protocol_connect_code_string_js__WEBPACK_IMPORTED_MODULE_1__.codeToString)(code)}]`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9jb25uZWN0LWVycm9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2lDO0FBQ2dDO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQywwQ0FBSTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RkFBNEY7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDBDQUFJO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsMENBQUk7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDhFQUFZLE9BQU8sSUFBSSxRQUFRO0FBQzdDLGNBQWMsOEVBQVksT0FBTztBQUNqQyIsInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxhdHNcXG5vZGVfbW9kdWxlc1xcQGNvbm5lY3RycGNcXGNvbm5lY3RcXGRpc3RcXGVzbVxcY29ubmVjdC1lcnJvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuL2NvZGUuanNcIjtcbmltcG9ydCB7IGNvZGVUb1N0cmluZyB9IGZyb20gXCIuL3Byb3RvY29sLWNvbm5lY3QvY29kZS1zdHJpbmcuanNcIjtcbi8qKlxuICogQ29ubmVjdEVycm9yIGNhcHR1cmVzIGZvdXIgcGllY2VzIG9mIGluZm9ybWF0aW9uOiBhIENvZGUsIGFuIGVycm9yXG4gKiBtZXNzYWdlLCBhbiBvcHRpb25hbCBjYXVzZSBvZiB0aGUgZXJyb3IsIGFuZCBhbiBvcHRpb25hbCBjb2xsZWN0aW9uIG9mXG4gKiBhcmJpdHJhcnkgUHJvdG9idWYgbWVzc2FnZXMgY2FsbGVkICBcImRldGFpbHNcIi5cbiAqXG4gKiBCZWNhdXNlIGRldmVsb3BlciB0b29scyB0eXBpY2FsbHkgc2hvdyBqdXN0IHRoZSBlcnJvciBtZXNzYWdlLCB3ZSBwcmVmaXhcbiAqIGl0IHdpdGggdGhlIHN0YXR1cyBjb2RlLCBzbyB0aGF0IHRoZSBtb3N0IGltcG9ydGFudCBpbmZvcm1hdGlvbiBpcyBhbHdheXNcbiAqIHZpc2libGUgaW1tZWRpYXRlbHkuXG4gKlxuICogRXJyb3IgZGV0YWlscyBhcmUgd3JhcHBlZCB3aXRoIGdvb2dsZS5wcm90b2J1Zi5Bbnkgb24gdGhlIHdpcmUsIHNvIHRoYXRcbiAqIGEgc2VydmVyIG9yIG1pZGRsZXdhcmUgY2FuIGF0dGFjaCBhcmJpdHJhcnkgZGF0YSB0byBhbiBlcnJvci4gVXNlIHRoZVxuICogbWV0aG9kIGZpbmREZXRhaWxzKCkgdG8gcmV0cmlldmUgdGhlIGRldGFpbHMuXG4gKi9cbmV4cG9ydCBjbGFzcyBDb25uZWN0RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IENvbm5lY3RFcnJvci5cbiAgICAgKiBJZiBubyBjb2RlIGlzIHByb3ZpZGVkLCBjb2RlIFwidW5rbm93blwiIGlzIHVzZWQuXG4gICAgICogT3V0Z29pbmcgZGV0YWlscyBhcmUgb25seSByZWxldmFudCBmb3IgdGhlIHNlcnZlciBzaWRlIC0gYSBzZXJ2aWNlIG1heVxuICAgICAqIHJhaXNlIGFuIGVycm9yIHdpdGggZGV0YWlscywgYW5kIGl0IGlzIHVwIHRvIHRoZSBwcm90b2NvbCBpbXBsZW1lbnRhdGlvblxuICAgICAqIHRvIGVuY29kZSBhbmQgc2VuZCB0aGUgZGV0YWlscyBhbG9uZyB3aXRoIGVycm9yLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGNvZGUgPSBDb2RlLlVua25vd24sIG1ldGFkYXRhLCBvdXRnb2luZ0RldGFpbHMsIGNhdXNlKSB7XG4gICAgICAgIHN1cGVyKGNyZWF0ZU1lc3NhZ2UobWVzc2FnZSwgY29kZSkpO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIkNvbm5lY3RFcnJvclwiO1xuICAgICAgICAvLyBzZWUgaHR0cHM6Ly93d3cudHlwZXNjcmlwdGxhbmcub3JnL2RvY3MvaGFuZGJvb2svcmVsZWFzZS1ub3Rlcy90eXBlc2NyaXB0LTItMi5odG1sI2V4YW1wbGVcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIG5ldy50YXJnZXQucHJvdG90eXBlKTtcbiAgICAgICAgdGhpcy5yYXdNZXNzYWdlID0gbWVzc2FnZTtcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgdGhpcy5tZXRhZGF0YSA9IG5ldyBIZWFkZXJzKG1ldGFkYXRhICE9PSBudWxsICYmIG1ldGFkYXRhICE9PSB2b2lkIDAgPyBtZXRhZGF0YSA6IHt9KTtcbiAgICAgICAgdGhpcy5kZXRhaWxzID0gb3V0Z29pbmdEZXRhaWxzICE9PSBudWxsICYmIG91dGdvaW5nRGV0YWlscyAhPT0gdm9pZCAwID8gb3V0Z29pbmdEZXRhaWxzIDogW107XG4gICAgICAgIHRoaXMuY2F1c2UgPSBjYXVzZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29udmVydCBhbnkgdmFsdWUgLSB0eXBpY2FsbHkgYSBjYXVnaHQgZXJyb3IgaW50byBhIENvbm5lY3RFcnJvcixcbiAgICAgKiBmb2xsb3dpbmcgdGhlc2UgcnVsZXM6XG4gICAgICogLSBJZiB0aGUgdmFsdWUgaXMgYWxyZWFkeSBhIENvbm5lY3RFcnJvciwgcmV0dXJuIGl0IGFzIGlzLlxuICAgICAqIC0gSWYgdGhlIHZhbHVlIGlzIGFuIEFib3J0RXJyb3IgZnJvbSB0aGUgZmV0Y2ggQVBJLCByZXR1cm4gdGhlIG1lc3NhZ2VcbiAgICAgKiAgIG9mIHRoZSBBYm9ydEVycm9yIHdpdGggY29kZSBDYW5jZWxlZC5cbiAgICAgKiAtIEZvciBvdGhlciBFcnJvcnMsIHJldHVybiB0aGUgZXJyb3IgbWVzc2FnZSB3aXRoIGNvZGUgVW5rbm93biBieSBkZWZhdWx0LlxuICAgICAqIC0gRm9yIG90aGVyIHZhbHVlcywgcmV0dXJuIHRoZSB2YWx1ZXMgU3RyaW5nIHJlcHJlc2VudGF0aW9uIGFzIGEgbWVzc2FnZSxcbiAgICAgKiAgIHdpdGggdGhlIGNvZGUgVW5rbm93biBieSBkZWZhdWx0LlxuICAgICAqIFRoZSBvcmlnaW5hbCB2YWx1ZSB3aWxsIGJlIHVzZWQgZm9yIHRoZSBcImNhdXNlXCIgcHJvcGVydHkgZm9yIHRoZSBuZXdcbiAgICAgKiBDb25uZWN0RXJyb3IuXG4gICAgICovXG4gICAgc3RhdGljIGZyb20ocmVhc29uLCBjb2RlID0gQ29kZS5Vbmtub3duKSB7XG4gICAgICAgIGlmIChyZWFzb24gaW5zdGFuY2VvZiBDb25uZWN0RXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiByZWFzb247XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlYXNvbiBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgICBpZiAocmVhc29uLm5hbWUgPT0gXCJBYm9ydEVycm9yXCIpIHtcbiAgICAgICAgICAgICAgICAvLyBGZXRjaCByZXF1ZXN0cyBjYW4gb25seSBiZSBjYW5jZWxlZCB3aXRoIGFuIEFib3J0Q29udHJvbGxlci5cbiAgICAgICAgICAgICAgICAvLyBXZSBkZXRlY3QgdGhhdCBjb25kaXRpb24gYnkgbG9va2luZyBhdCB0aGUgbmFtZSBvZiB0aGUgcmFpc2VkXG4gICAgICAgICAgICAgICAgLy8gZXJyb3Igb2JqZWN0LCBhbmQgdHJhbnNsYXRlIHRvIHRoZSBhcHByb3ByaWF0ZSBzdGF0dXMgY29kZS5cbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IENvbm5lY3RFcnJvcihyZWFzb24ubWVzc2FnZSwgQ29kZS5DYW5jZWxlZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV3IENvbm5lY3RFcnJvcihyZWFzb24ubWVzc2FnZSwgY29kZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHJlYXNvbik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBDb25uZWN0RXJyb3IoU3RyaW5nKHJlYXNvbiksIGNvZGUsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCByZWFzb24pO1xuICAgIH1cbiAgICBzdGF0aWMgW1N5bWJvbC5oYXNJbnN0YW5jZV0odikge1xuICAgICAgICBpZiAoISh2IGluc3RhbmNlb2YgRXJyb3IpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKE9iamVjdC5nZXRQcm90b3R5cGVPZih2KSA9PT0gQ29ubmVjdEVycm9yLnByb3RvdHlwZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICh2Lm5hbWUgPT09IFwiQ29ubmVjdEVycm9yXCIgJiZcbiAgICAgICAgICAgIFwiY29kZVwiIGluIHYgJiZcbiAgICAgICAgICAgIHR5cGVvZiB2LmNvZGUgPT09IFwibnVtYmVyXCIgJiZcbiAgICAgICAgICAgIFwibWV0YWRhdGFcIiBpbiB2ICYmXG4gICAgICAgICAgICBcImRldGFpbHNcIiBpbiB2ICYmXG4gICAgICAgICAgICBBcnJheS5pc0FycmF5KHYuZGV0YWlscykgJiZcbiAgICAgICAgICAgIFwicmF3TWVzc2FnZVwiIGluIHYgJiZcbiAgICAgICAgICAgIHR5cGVvZiB2LnJhd01lc3NhZ2UgPT0gXCJzdHJpbmdcIiAmJlxuICAgICAgICAgICAgXCJjYXVzZVwiIGluIHYpO1xuICAgIH1cbiAgICBmaW5kRGV0YWlscyh0eXBlT3JSZWdpc3RyeSkge1xuICAgICAgICBjb25zdCByZWdpc3RyeSA9IFwidHlwZU5hbWVcIiBpbiB0eXBlT3JSZWdpc3RyeVxuICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgZmluZE1lc3NhZ2U6ICh0eXBlTmFtZSkgPT4gdHlwZU5hbWUgPT09IHR5cGVPclJlZ2lzdHJ5LnR5cGVOYW1lID8gdHlwZU9yUmVnaXN0cnkgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICA6IHR5cGVPclJlZ2lzdHJ5O1xuICAgICAgICBjb25zdCBkZXRhaWxzID0gW107XG4gICAgICAgIGZvciAoY29uc3QgZGF0YSBvZiB0aGlzLmRldGFpbHMpIHtcbiAgICAgICAgICAgIGlmIChcImdldFR5cGVcIiBpbiBkYXRhKSB7XG4gICAgICAgICAgICAgICAgaWYgKHJlZ2lzdHJ5LmZpbmRNZXNzYWdlKGRhdGEuZ2V0VHlwZSgpLnR5cGVOYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICBkZXRhaWxzLnB1c2goZGF0YSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgdHlwZSA9IHJlZ2lzdHJ5LmZpbmRNZXNzYWdlKGRhdGEudHlwZSk7XG4gICAgICAgICAgICBpZiAodHlwZSkge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGRldGFpbHMucHVzaCh0eXBlLmZyb21CaW5hcnkoZGF0YS52YWx1ZSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoXykge1xuICAgICAgICAgICAgICAgICAgICAvLyBXZSBzaWxlbnRseSBnaXZlIHVwIGlmIHdlIGFyZSB1bmFibGUgdG8gcGFyc2UgdGhlIGRldGFpbCwgYmVjYXVzZVxuICAgICAgICAgICAgICAgICAgICAvLyB0aGF0IGFwcGVhcnMgdG8gYmUgdGhlIGxlYXN0IHdvcnN0IGJlaGF2aW9yLlxuICAgICAgICAgICAgICAgICAgICAvLyBJdCBpcyB2ZXJ5IHVubGlrZWx5IHRoYXQgYSB1c2VyIHN1cnJvdW5kcyBhIGNhdGNoIGJvZHkgaGFuZGxpbmcgdGhlXG4gICAgICAgICAgICAgICAgICAgIC8vIGVycm9yIHdpdGggYW5vdGhlciB0cnktY2F0Y2ggc3RhdGVtZW50LCBhbmQgd2UgZG8gbm90IHdhbnQgdG9cbiAgICAgICAgICAgICAgICAgICAgLy8gcmVjb21tZW5kIGRvaW5nIHNvLlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGV0YWlscztcbiAgICB9XG59XG4vKipcbiAqIENyZWF0ZSBhbiBlcnJvciBtZXNzYWdlLCBwcmVmaXhpbmcgdGhlIGdpdmVuIGNvZGUuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZU1lc3NhZ2UobWVzc2FnZSwgY29kZSkge1xuICAgIHJldHVybiBtZXNzYWdlLmxlbmd0aFxuICAgICAgICA/IGBbJHtjb2RlVG9TdHJpbmcoY29kZSl9XSAke21lc3NhZ2V9YFxuICAgICAgICA6IGBbJHtjb2RlVG9TdHJpbmcoY29kZSl9XWA7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/context-values.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/context-values.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContextKey: () => (/* binding */ createContextKey),\n/* harmony export */   createContextValues: () => (/* binding */ createContextValues)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * createContextValues creates a new ContextValues.\n */\nfunction createContextValues() {\n    return {\n        get(key) {\n            return key.id in this ? this[key.id] : key.defaultValue;\n        },\n        set(key, value) {\n            this[key.id] = value;\n            return this;\n        },\n        delete(key) {\n            delete this[key.id];\n            return this;\n        },\n    };\n}\n/**\n * createContextKey creates a new ContextKey.\n */\nfunction createContextKey(defaultValue, options) {\n    return { id: Symbol(options === null || options === void 0 ? void 0 : options.description), defaultValue };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9jb250ZXh0LXZhbHVlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxhQUFhO0FBQ2IiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXGNvbnRleHQtdmFsdWVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIGNyZWF0ZUNvbnRleHRWYWx1ZXMgY3JlYXRlcyBhIG5ldyBDb250ZXh0VmFsdWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29udGV4dFZhbHVlcygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBnZXQoa2V5KSB7XG4gICAgICAgICAgICByZXR1cm4ga2V5LmlkIGluIHRoaXMgPyB0aGlzW2tleS5pZF0gOiBrZXkuZGVmYXVsdFZhbHVlO1xuICAgICAgICB9LFxuICAgICAgICBzZXQoa2V5LCB2YWx1ZSkge1xuICAgICAgICAgICAgdGhpc1trZXkuaWRdID0gdmFsdWU7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcbiAgICAgICAgZGVsZXRlKGtleSkge1xuICAgICAgICAgICAgZGVsZXRlIHRoaXNba2V5LmlkXTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vKipcbiAqIGNyZWF0ZUNvbnRleHRLZXkgY3JlYXRlcyBhIG5ldyBDb250ZXh0S2V5LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29udGV4dEtleShkZWZhdWx0VmFsdWUsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4geyBpZDogU3ltYm9sKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5kZXNjcmlwdGlvbiksIGRlZmF1bHRWYWx1ZSB9O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/context-values.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/http-headers.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/http-headers.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendHeaders: () => (/* binding */ appendHeaders),\n/* harmony export */   decodeBinaryHeader: () => (/* binding */ decodeBinaryHeader),\n/* harmony export */   encodeBinaryHeader: () => (/* binding */ encodeBinaryHeader)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Encode a single binary header value according to the Connect\n * and gRPC specifications.\n *\n * This function accepts raw binary data from a buffer, a string\n * with UTF-8 text, or a protobuf message. It encodes the input\n * with unpadded base64 and returns a string that can be used for\n * a header whose name ends with `-bin`.\n */\nfunction encodeBinaryHeader(value) {\n    let bytes;\n    if (typeof value == \"object\" && \"getType\" in value) {\n        bytes = value.toBinary();\n    }\n    else if (typeof value == \"string\") {\n        bytes = new TextEncoder().encode(value);\n    }\n    else {\n        bytes = value instanceof Uint8Array ? value : new Uint8Array(value);\n    }\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.protoBase64.enc(bytes).replace(/=+$/, \"\");\n}\nfunction decodeBinaryHeader(value, type, options) {\n    try {\n        const bytes = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.protoBase64.dec(value);\n        if (type) {\n            return type.fromBinary(bytes, options);\n        }\n        return bytes;\n    }\n    catch (e) {\n        throw _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError.from(e, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.DataLoss);\n    }\n}\n/**\n * Merge two or more Headers objects by appending all fields from\n * all inputs to a new Headers object.\n */\nfunction appendHeaders(...headers) {\n    const h = new Headers();\n    for (const e of headers) {\n        e.forEach((value, key) => {\n            h.append(key, value);\n        });\n    }\n    return h;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9odHRwLWhlYWRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUQ7QUFDQztBQUNqQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywyREFBVztBQUN0QjtBQUNPO0FBQ1A7QUFDQSxzQkFBc0IsMkRBQVc7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywyREFBWSxTQUFTLDBDQUFJO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxccHJvamVjdHNcXGF0c1xcbm9kZV9tb2R1bGVzXFxAY29ubmVjdHJwY1xcY29ubmVjdFxcZGlzdFxcZXNtXFxodHRwLWhlYWRlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IHByb3RvQmFzZTY0IH0gZnJvbSBcIkBidWZidWlsZC9wcm90b2J1ZlwiO1xuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4vY29ubmVjdC1lcnJvci5qc1wiO1xuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuL2NvZGUuanNcIjtcbi8qKlxuICogRW5jb2RlIGEgc2luZ2xlIGJpbmFyeSBoZWFkZXIgdmFsdWUgYWNjb3JkaW5nIHRvIHRoZSBDb25uZWN0XG4gKiBhbmQgZ1JQQyBzcGVjaWZpY2F0aW9ucy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGFjY2VwdHMgcmF3IGJpbmFyeSBkYXRhIGZyb20gYSBidWZmZXIsIGEgc3RyaW5nXG4gKiB3aXRoIFVURi04IHRleHQsIG9yIGEgcHJvdG9idWYgbWVzc2FnZS4gSXQgZW5jb2RlcyB0aGUgaW5wdXRcbiAqIHdpdGggdW5wYWRkZWQgYmFzZTY0IGFuZCByZXR1cm5zIGEgc3RyaW5nIHRoYXQgY2FuIGJlIHVzZWQgZm9yXG4gKiBhIGhlYWRlciB3aG9zZSBuYW1lIGVuZHMgd2l0aCBgLWJpbmAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVCaW5hcnlIZWFkZXIodmFsdWUpIHtcbiAgICBsZXQgYnl0ZXM7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PSBcIm9iamVjdFwiICYmIFwiZ2V0VHlwZVwiIGluIHZhbHVlKSB7XG4gICAgICAgIGJ5dGVzID0gdmFsdWUudG9CaW5hcnkoKTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIHZhbHVlID09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgYnl0ZXMgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodmFsdWUpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgYnl0ZXMgPSB2YWx1ZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgPyB2YWx1ZSA6IG5ldyBVaW50OEFycmF5KHZhbHVlKTtcbiAgICB9XG4gICAgcmV0dXJuIHByb3RvQmFzZTY0LmVuYyhieXRlcykucmVwbGFjZSgvPSskLywgXCJcIik7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQmluYXJ5SGVhZGVyKHZhbHVlLCB0eXBlLCBvcHRpb25zKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgYnl0ZXMgPSBwcm90b0Jhc2U2NC5kZWModmFsdWUpO1xuICAgICAgICBpZiAodHlwZSkge1xuICAgICAgICAgICAgcmV0dXJuIHR5cGUuZnJvbUJpbmFyeShieXRlcywgb3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICB0aHJvdyBDb25uZWN0RXJyb3IuZnJvbShlLCBDb2RlLkRhdGFMb3NzKTtcbiAgICB9XG59XG4vKipcbiAqIE1lcmdlIHR3byBvciBtb3JlIEhlYWRlcnMgb2JqZWN0cyBieSBhcHBlbmRpbmcgYWxsIGZpZWxkcyBmcm9tXG4gKiBhbGwgaW5wdXRzIHRvIGEgbmV3IEhlYWRlcnMgb2JqZWN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gYXBwZW5kSGVhZGVycyguLi5oZWFkZXJzKSB7XG4gICAgY29uc3QgaCA9IG5ldyBIZWFkZXJzKCk7XG4gICAgZm9yIChjb25zdCBlIG9mIGhlYWRlcnMpIHtcbiAgICAgICAgZS5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgICAgICBoLmFwcGVuZChrZXksIHZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBoO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/http-headers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/implementation.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/implementation.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHandlerContext: () => (/* binding */ createHandlerContext),\n/* harmony export */   createMethodImplSpec: () => (/* binding */ createMethodImplSpec),\n/* harmony export */   createServiceImplSpec: () => (/* binding */ createServiceImplSpec)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _protocol_signals_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./protocol/signals.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js\");\n/* harmony import */ var _context_values_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context-values.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/context-values.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n/**\n * Create a new HandlerContext.\n *\n * The context is usually automatically created by handlers, but if a service\n * implementation is used in unit tests, this function can be used to create\n * a context.\n */\nfunction createHandlerContext(init) {\n    var _a;\n    let timeoutMs;\n    if (init.timeoutMs !== undefined) {\n        const date = new Date(Date.now() + init.timeoutMs);\n        timeoutMs = () => date.getTime() - Date.now();\n    }\n    else {\n        timeoutMs = () => undefined;\n    }\n    const deadline = (0,_protocol_signals_js__WEBPACK_IMPORTED_MODULE_0__.createDeadlineSignal)(init.timeoutMs);\n    const abortController = (0,_protocol_signals_js__WEBPACK_IMPORTED_MODULE_0__.createLinkedAbortController)(deadline.signal, init.requestSignal, init.shutdownSignal);\n    return Object.assign(Object.assign({}, init), { signal: abortController.signal, timeoutMs, requestHeader: new Headers(init.requestHeader), responseHeader: new Headers(init.responseHeader), responseTrailer: new Headers(init.responseTrailer), abort(reason) {\n            deadline.cleanup();\n            abortController.abort(reason);\n        }, values: (_a = init.contextValues) !== null && _a !== void 0 ? _a : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_1__.createContextValues)() });\n}\n/**\n * Create an MethodImplSpec - a user-provided implementation for a method,\n * wrapped in a discriminated union type along with service and method metadata.\n */\nfunction createMethodImplSpec(service, method, impl) {\n    return {\n        kind: method.kind,\n        service,\n        method,\n        impl,\n    };\n}\n/**\n * Create an ServiceImplSpec - a user-provided service implementation wrapped\n * with metadata.\n */\nfunction createServiceImplSpec(service, impl) {\n    const s = { service, methods: {} };\n    for (const [localName, methodInfo] of Object.entries(service.methods)) {\n        let fn = impl[localName];\n        if (typeof fn == \"function\") {\n            fn = fn.bind(impl);\n        }\n        else {\n            const message = `${service.typeName}.${methodInfo.name} is not implemented`;\n            fn = function unimplemented() {\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(message, _code_js__WEBPACK_IMPORTED_MODULE_3__.Code.Unimplemented);\n            };\n        }\n        s.methods[localName] = createMethodImplSpec(service, methodInfo, fn);\n    }\n    return s;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9pbXBsZW1lbnRhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZ0Q7QUFDRTtBQUNqQjtBQUMwRDtBQUNqQztBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDBFQUFvQjtBQUN6Qyw0QkFBNEIsaUZBQTJCO0FBQ3ZELHlDQUF5QyxXQUFXO0FBQ3BEO0FBQ0E7QUFDQSxTQUFTLHFFQUFxRSx1RUFBbUIsSUFBSTtBQUNyRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGlCQUFpQixHQUFHLGlCQUFpQjtBQUNwRTtBQUNBLDBCQUEwQiwyREFBWSxVQUFVLDBDQUFJO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxhdHNcXG5vZGVfbW9kdWxlc1xcQGNvbm5lY3RycGNcXGNvbm5lY3RcXGRpc3RcXGVzbVxcaW1wbGVtZW50YXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IE1ldGhvZEtpbmQgfSBmcm9tIFwiQGJ1ZmJ1aWxkL3Byb3RvYnVmXCI7XG5pbXBvcnQgeyBDb25uZWN0RXJyb3IgfSBmcm9tIFwiLi9jb25uZWN0LWVycm9yLmpzXCI7XG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4vY29kZS5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlRGVhZGxpbmVTaWduYWwsIGNyZWF0ZUxpbmtlZEFib3J0Q29udHJvbGxlciwgfSBmcm9tIFwiLi9wcm90b2NvbC9zaWduYWxzLmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0VmFsdWVzIH0gZnJvbSBcIi4vY29udGV4dC12YWx1ZXMuanNcIjtcbi8qKlxuICogQ3JlYXRlIGEgbmV3IEhhbmRsZXJDb250ZXh0LlxuICpcbiAqIFRoZSBjb250ZXh0IGlzIHVzdWFsbHkgYXV0b21hdGljYWxseSBjcmVhdGVkIGJ5IGhhbmRsZXJzLCBidXQgaWYgYSBzZXJ2aWNlXG4gKiBpbXBsZW1lbnRhdGlvbiBpcyB1c2VkIGluIHVuaXQgdGVzdHMsIHRoaXMgZnVuY3Rpb24gY2FuIGJlIHVzZWQgdG8gY3JlYXRlXG4gKiBhIGNvbnRleHQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVIYW5kbGVyQ29udGV4dChpbml0KSB7XG4gICAgdmFyIF9hO1xuICAgIGxldCB0aW1lb3V0TXM7XG4gICAgaWYgKGluaXQudGltZW91dE1zICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKERhdGUubm93KCkgKyBpbml0LnRpbWVvdXRNcyk7XG4gICAgICAgIHRpbWVvdXRNcyA9ICgpID0+IGRhdGUuZ2V0VGltZSgpIC0gRGF0ZS5ub3coKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRpbWVvdXRNcyA9ICgpID0+IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgY29uc3QgZGVhZGxpbmUgPSBjcmVhdGVEZWFkbGluZVNpZ25hbChpbml0LnRpbWVvdXRNcyk7XG4gICAgY29uc3QgYWJvcnRDb250cm9sbGVyID0gY3JlYXRlTGlua2VkQWJvcnRDb250cm9sbGVyKGRlYWRsaW5lLnNpZ25hbCwgaW5pdC5yZXF1ZXN0U2lnbmFsLCBpbml0LnNodXRkb3duU2lnbmFsKTtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBpbml0KSwgeyBzaWduYWw6IGFib3J0Q29udHJvbGxlci5zaWduYWwsIHRpbWVvdXRNcywgcmVxdWVzdEhlYWRlcjogbmV3IEhlYWRlcnMoaW5pdC5yZXF1ZXN0SGVhZGVyKSwgcmVzcG9uc2VIZWFkZXI6IG5ldyBIZWFkZXJzKGluaXQucmVzcG9uc2VIZWFkZXIpLCByZXNwb25zZVRyYWlsZXI6IG5ldyBIZWFkZXJzKGluaXQucmVzcG9uc2VUcmFpbGVyKSwgYWJvcnQocmVhc29uKSB7XG4gICAgICAgICAgICBkZWFkbGluZS5jbGVhbnVwKCk7XG4gICAgICAgICAgICBhYm9ydENvbnRyb2xsZXIuYWJvcnQocmVhc29uKTtcbiAgICAgICAgfSwgdmFsdWVzOiAoX2EgPSBpbml0LmNvbnRleHRWYWx1ZXMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGNyZWF0ZUNvbnRleHRWYWx1ZXMoKSB9KTtcbn1cbi8qKlxuICogQ3JlYXRlIGFuIE1ldGhvZEltcGxTcGVjIC0gYSB1c2VyLXByb3ZpZGVkIGltcGxlbWVudGF0aW9uIGZvciBhIG1ldGhvZCxcbiAqIHdyYXBwZWQgaW4gYSBkaXNjcmltaW5hdGVkIHVuaW9uIHR5cGUgYWxvbmcgd2l0aCBzZXJ2aWNlIGFuZCBtZXRob2QgbWV0YWRhdGEuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNZXRob2RJbXBsU3BlYyhzZXJ2aWNlLCBtZXRob2QsIGltcGwpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBraW5kOiBtZXRob2Qua2luZCxcbiAgICAgICAgc2VydmljZSxcbiAgICAgICAgbWV0aG9kLFxuICAgICAgICBpbXBsLFxuICAgIH07XG59XG4vKipcbiAqIENyZWF0ZSBhbiBTZXJ2aWNlSW1wbFNwZWMgLSBhIHVzZXItcHJvdmlkZWQgc2VydmljZSBpbXBsZW1lbnRhdGlvbiB3cmFwcGVkXG4gKiB3aXRoIG1ldGFkYXRhLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2VydmljZUltcGxTcGVjKHNlcnZpY2UsIGltcGwpIHtcbiAgICBjb25zdCBzID0geyBzZXJ2aWNlLCBtZXRob2RzOiB7fSB9O1xuICAgIGZvciAoY29uc3QgW2xvY2FsTmFtZSwgbWV0aG9kSW5mb10gb2YgT2JqZWN0LmVudHJpZXMoc2VydmljZS5tZXRob2RzKSkge1xuICAgICAgICBsZXQgZm4gPSBpbXBsW2xvY2FsTmFtZV07XG4gICAgICAgIGlmICh0eXBlb2YgZm4gPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBmbiA9IGZuLmJpbmQoaW1wbCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gYCR7c2VydmljZS50eXBlTmFtZX0uJHttZXRob2RJbmZvLm5hbWV9IGlzIG5vdCBpbXBsZW1lbnRlZGA7XG4gICAgICAgICAgICBmbiA9IGZ1bmN0aW9uIHVuaW1wbGVtZW50ZWQoKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihtZXNzYWdlLCBDb2RlLlVuaW1wbGVtZW50ZWQpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBzLm1ldGhvZHNbbG9jYWxOYW1lXSA9IGNyZWF0ZU1ldGhvZEltcGxTcGVjKHNlcnZpY2UsIG1ldGhvZEluZm8sIGZuKTtcbiAgICB9XG4gICAgcmV0dXJuIHM7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/implementation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/interceptor.js":
/*!******************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/interceptor.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyInterceptors: () => (/* binding */ applyInterceptors)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * applyInterceptors takes the given UnaryFn or ServerStreamingFn, and wraps\n * it with each of the given interceptors, returning a new UnaryFn or\n * ServerStreamingFn.\n */\nfunction applyInterceptors(next, interceptors) {\n    var _a;\n    return ((_a = interceptors === null || interceptors === void 0 ? void 0 : interceptors.concat().reverse().reduce(\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    (n, i) => i(n), next)) !== null && _a !== void 0 ? _a : next);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9pbnRlcmNlcHRvci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxccHJvamVjdHNcXGF0c1xcbm9kZV9tb2R1bGVzXFxAY29ubmVjdHJwY1xcY29ubmVjdFxcZGlzdFxcZXNtXFxpbnRlcmNlcHRvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBhcHBseUludGVyY2VwdG9ycyB0YWtlcyB0aGUgZ2l2ZW4gVW5hcnlGbiBvciBTZXJ2ZXJTdHJlYW1pbmdGbiwgYW5kIHdyYXBzXG4gKiBpdCB3aXRoIGVhY2ggb2YgdGhlIGdpdmVuIGludGVyY2VwdG9ycywgcmV0dXJuaW5nIGEgbmV3IFVuYXJ5Rm4gb3JcbiAqIFNlcnZlclN0cmVhbWluZ0ZuLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYXBwbHlJbnRlcmNlcHRvcnMobmV4dCwgaW50ZXJjZXB0b3JzKSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiAoKF9hID0gaW50ZXJjZXB0b3JzID09PSBudWxsIHx8IGludGVyY2VwdG9ycyA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW50ZXJjZXB0b3JzLmNvbmNhdCgpLnJldmVyc2UoKS5yZWR1Y2UoXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtYXJndW1lbnRcbiAgICAobiwgaSkgPT4gaShuKSwgbmV4dCkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG5leHQpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/interceptor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/promise-client.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/promise-client.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBiDiStreamingFn: () => (/* binding */ createBiDiStreamingFn),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   createClientStreamingFn: () => (/* binding */ createClientStreamingFn),\n/* harmony export */   createPromiseClient: () => (/* binding */ createPromiseClient),\n/* harmony export */   createServerStreamingFn: () => (/* binding */ createServerStreamingFn),\n/* harmony export */   createUnaryFn: () => (/* binding */ createUnaryFn)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _any_client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./any-client.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/any-client.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./protocol/async-iterable.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncDelegator = (undefined && undefined.__asyncDelegator) || function (o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n};\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\n\n\n\n\n\n/**\n * Create a Client for the given service, invoking RPCs through the\n * given transport.\n */\nfunction createClient(service, transport) {\n    return (0,_any_client_js__WEBPACK_IMPORTED_MODULE_0__.makeAnyClient)(service, (method) => {\n        switch (method.kind) {\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.Unary:\n                return createUnaryFn(transport, service, method);\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.ServerStreaming:\n                return createServerStreamingFn(transport, service, method);\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.ClientStreaming:\n                return createClientStreamingFn(transport, service, method);\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.BiDiStreaming:\n                return createBiDiStreamingFn(transport, service, method);\n            default:\n                return null;\n        }\n    });\n}\n/**\n * @deprecated use createClient.\n */\nfunction createPromiseClient(service, transport) {\n    return createClient(service, transport);\n}\nfunction createUnaryFn(transport, service, method) {\n    return async function (input, options) {\n        var _a, _b;\n        const response = await transport.unary(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, input, options === null || options === void 0 ? void 0 : options.contextValues);\n        (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 ? void 0 : _a.call(options, response.header);\n        (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 ? void 0 : _b.call(options, response.trailer);\n        return response.message;\n    };\n}\nfunction createServerStreamingFn(transport, service, method) {\n    return function (input, options) {\n        return handleStreamResponse(transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_2__.createAsyncIterable)([input]), options === null || options === void 0 ? void 0 : options.contextValues), options);\n    };\n}\nfunction createClientStreamingFn(transport, service, method) {\n    return async function (request, options) {\n        var _a, e_1, _b, _c;\n        var _d, _e;\n        const response = await transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, request, options === null || options === void 0 ? void 0 : options.contextValues);\n        (_d = options === null || options === void 0 ? void 0 : options.onHeader) === null || _d === void 0 ? void 0 : _d.call(options, response.header);\n        let singleMessage;\n        let count = 0;\n        try {\n            for (var _f = true, _g = __asyncValues(response.message), _h; _h = await _g.next(), _a = _h.done, !_a; _f = true) {\n                _c = _h.value;\n                _f = false;\n                const message = _c;\n                singleMessage = message;\n                count++;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_f && !_a && (_b = _g.return)) await _b.call(_g);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (!singleMessage) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: missing response message\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n        }\n        if (count > 1) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: received extra messages for client streaming method\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n        }\n        (_e = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _e === void 0 ? void 0 : _e.call(options, response.trailer);\n        return singleMessage;\n    };\n}\nfunction createBiDiStreamingFn(transport, service, method) {\n    return function (request, options) {\n        return handleStreamResponse(transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, request, options === null || options === void 0 ? void 0 : options.contextValues), options);\n    };\n}\nfunction handleStreamResponse(stream, options) {\n    const it = (function () {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, _b;\n            const response = yield __await(stream);\n            (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 ? void 0 : _a.call(options, response.header);\n            yield __await(yield* __asyncDelegator(__asyncValues(response.message)));\n            (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 ? void 0 : _b.call(options, response.trailer);\n        });\n    })()[Symbol.asyncIterator]();\n    // Create a new iterable to omit throw/return.\n    return {\n        [Symbol.asyncIterator]: () => ({\n            next: () => it.next(),\n        }),\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/promise-client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codeFromString: () => (/* binding */ codeFromString),\n/* harmony export */   codeToString: () => (/* binding */ codeToString)\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * codeToString returns the string representation of a Code.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeToString(value) {\n    const name = _code_js__WEBPACK_IMPORTED_MODULE_0__.Code[value];\n    if (typeof name != \"string\") {\n        return value.toString();\n    }\n    return (name[0].toLowerCase() +\n        name.substring(1).replace(/[A-Z]/g, (c) => \"_\" + c.toLowerCase()));\n}\nlet stringToCode;\n/**\n * codeFromString parses the string representation of a Code in snake_case.\n * For example, the string \"permission_denied\" parses into Code.PermissionDenied.\n *\n * If the given string cannot be parsed, the function returns undefined.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeFromString(value) {\n    if (!stringToCode) {\n        stringToCode = {};\n        for (const value of Object.values(_code_js__WEBPACK_IMPORTED_MODULE_0__.Code)) {\n            if (typeof value == \"string\") {\n                continue;\n            }\n            stringToCode[codeToString(value)] = value;\n        }\n    }\n    return stringToCode[value];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2NvZGUtc3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2tDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGlCQUFpQiwwQ0FBSTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSwwQ0FBMEMsMENBQUk7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxhdHNcXG5vZGVfbW9kdWxlc1xcQGNvbm5lY3RycGNcXGNvbm5lY3RcXGRpc3RcXGVzbVxccHJvdG9jb2wtY29ubmVjdFxcY29kZS1zdHJpbmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi4vY29kZS5qc1wiO1xuLyoqXG4gKiBjb2RlVG9TdHJpbmcgcmV0dXJucyB0aGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIGEgQ29kZS5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvZGVUb1N0cmluZyh2YWx1ZSkge1xuICAgIGNvbnN0IG5hbWUgPSBDb2RlW3ZhbHVlXTtcbiAgICBpZiAodHlwZW9mIG5hbWUgIT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gdmFsdWUudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgcmV0dXJuIChuYW1lWzBdLnRvTG93ZXJDYXNlKCkgK1xuICAgICAgICBuYW1lLnN1YnN0cmluZygxKS5yZXBsYWNlKC9bQS1aXS9nLCAoYykgPT4gXCJfXCIgKyBjLnRvTG93ZXJDYXNlKCkpKTtcbn1cbmxldCBzdHJpbmdUb0NvZGU7XG4vKipcbiAqIGNvZGVGcm9tU3RyaW5nIHBhcnNlcyB0aGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIGEgQ29kZSBpbiBzbmFrZV9jYXNlLlxuICogRm9yIGV4YW1wbGUsIHRoZSBzdHJpbmcgXCJwZXJtaXNzaW9uX2RlbmllZFwiIHBhcnNlcyBpbnRvIENvZGUuUGVybWlzc2lvbkRlbmllZC5cbiAqXG4gKiBJZiB0aGUgZ2l2ZW4gc3RyaW5nIGNhbm5vdCBiZSBwYXJzZWQsIHRoZSBmdW5jdGlvbiByZXR1cm5zIHVuZGVmaW5lZC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvZGVGcm9tU3RyaW5nKHZhbHVlKSB7XG4gICAgaWYgKCFzdHJpbmdUb0NvZGUpIHtcbiAgICAgICAgc3RyaW5nVG9Db2RlID0ge307XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgT2JqZWN0LnZhbHVlcyhDb2RlKSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzdHJpbmdUb0NvZGVbY29kZVRvU3RyaW5nKHZhbHVlKV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc3RyaW5nVG9Db2RlW3ZhbHVlXTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTypeRegExp: () => (/* binding */ contentTypeRegExp),\n/* harmony export */   contentTypeStreamJson: () => (/* binding */ contentTypeStreamJson),\n/* harmony export */   contentTypeStreamProto: () => (/* binding */ contentTypeStreamProto),\n/* harmony export */   contentTypeStreamRegExp: () => (/* binding */ contentTypeStreamRegExp),\n/* harmony export */   contentTypeUnaryJson: () => (/* binding */ contentTypeUnaryJson),\n/* harmony export */   contentTypeUnaryProto: () => (/* binding */ contentTypeUnaryProto),\n/* harmony export */   contentTypeUnaryRegExp: () => (/* binding */ contentTypeUnaryRegExp),\n/* harmony export */   parseContentType: () => (/* binding */ parseContentType),\n/* harmony export */   parseEncodingQuery: () => (/* binding */ parseEncodingQuery)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Regular Expression that matches any valid Connect Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst contentTypeRegExp = /^application\\/(connect\\+)?(?:(json)(?:; ?charset=utf-?8)?|(proto))$/i;\n/**\n * Regular Expression that matches a Connect unary Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst contentTypeUnaryRegExp = /^application\\/(?:json(?:; ?charset=utf-?8)?|proto)$/i;\n/**\n * Regular Expression that matches a Connect streaming Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst contentTypeStreamRegExp = /^application\\/connect\\+?(?:json(?:; ?charset=utf-?8)?|proto)$/i;\nconst contentTypeUnaryProto = \"application/proto\";\nconst contentTypeUnaryJson = \"application/json\";\nconst contentTypeStreamProto = \"application/connect+proto\";\nconst contentTypeStreamJson = \"application/connect+json\";\nconst encodingProto = \"proto\";\nconst encodingJson = \"json\";\n/**\n * Parse a Connect Content-Type header.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseContentType(contentType) {\n    const match = contentType === null || contentType === void 0 ? void 0 : contentType.match(contentTypeRegExp);\n    if (!match) {\n        return undefined;\n    }\n    const stream = !!match[1];\n    const binary = !!match[3];\n    return { stream, binary };\n}\n/**\n * Parse a Connect Get encoding query parameter.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseEncodingQuery(encoding) {\n    switch (encoding) {\n        case encodingProto:\n            return { stream: false, binary: true };\n        case encodingJson:\n            return { stream: false, binary: false };\n        default:\n            return undefined;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2NvbnRlbnQtdHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxtRUFBbUU7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBEQUEwRDtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUVBQXFFO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sLWNvbm5lY3RcXGNvbnRlbnQtdHlwZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBSZWd1bGFyIEV4cHJlc3Npb24gdGhhdCBtYXRjaGVzIGFueSB2YWxpZCBDb25uZWN0IENvbnRlbnQtVHlwZSBoZWFkZXIgdmFsdWUuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZVJlZ0V4cCA9IC9eYXBwbGljYXRpb25cXC8oY29ubmVjdFxcKyk/KD86KGpzb24pKD86OyA/Y2hhcnNldD11dGYtPzgpP3wocHJvdG8pKSQvaTtcbi8qKlxuICogUmVndWxhciBFeHByZXNzaW9uIHRoYXQgbWF0Y2hlcyBhIENvbm5lY3QgdW5hcnkgQ29udGVudC1UeXBlIGhlYWRlciB2YWx1ZS5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlVW5hcnlSZWdFeHAgPSAvXmFwcGxpY2F0aW9uXFwvKD86anNvbig/OjsgP2NoYXJzZXQ9dXRmLT84KT98cHJvdG8pJC9pO1xuLyoqXG4gKiBSZWd1bGFyIEV4cHJlc3Npb24gdGhhdCBtYXRjaGVzIGEgQ29ubmVjdCBzdHJlYW1pbmcgQ29udGVudC1UeXBlIGhlYWRlciB2YWx1ZS5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlU3RyZWFtUmVnRXhwID0gL15hcHBsaWNhdGlvblxcL2Nvbm5lY3RcXCs/KD86anNvbig/OjsgP2NoYXJzZXQ9dXRmLT84KT98cHJvdG8pJC9pO1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlVW5hcnlQcm90byA9IFwiYXBwbGljYXRpb24vcHJvdG9cIjtcbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZVVuYXJ5SnNvbiA9IFwiYXBwbGljYXRpb24vanNvblwiO1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlU3RyZWFtUHJvdG8gPSBcImFwcGxpY2F0aW9uL2Nvbm5lY3QrcHJvdG9cIjtcbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZVN0cmVhbUpzb24gPSBcImFwcGxpY2F0aW9uL2Nvbm5lY3QranNvblwiO1xuY29uc3QgZW5jb2RpbmdQcm90byA9IFwicHJvdG9cIjtcbmNvbnN0IGVuY29kaW5nSnNvbiA9IFwianNvblwiO1xuLyoqXG4gKiBQYXJzZSBhIENvbm5lY3QgQ29udGVudC1UeXBlIGhlYWRlci5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ29udGVudFR5cGUoY29udGVudFR5cGUpIHtcbiAgICBjb25zdCBtYXRjaCA9IGNvbnRlbnRUeXBlID09PSBudWxsIHx8IGNvbnRlbnRUeXBlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb250ZW50VHlwZS5tYXRjaChjb250ZW50VHlwZVJlZ0V4cCk7XG4gICAgaWYgKCFtYXRjaCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjb25zdCBzdHJlYW0gPSAhIW1hdGNoWzFdO1xuICAgIGNvbnN0IGJpbmFyeSA9ICEhbWF0Y2hbM107XG4gICAgcmV0dXJuIHsgc3RyZWFtLCBiaW5hcnkgfTtcbn1cbi8qKlxuICogUGFyc2UgYSBDb25uZWN0IEdldCBlbmNvZGluZyBxdWVyeSBwYXJhbWV0ZXIuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUVuY29kaW5nUXVlcnkoZW5jb2RpbmcpIHtcbiAgICBzd2l0Y2ggKGVuY29kaW5nKSB7XG4gICAgICAgIGNhc2UgZW5jb2RpbmdQcm90bzpcbiAgICAgICAgICAgIHJldHVybiB7IHN0cmVhbTogZmFsc2UsIGJpbmFyeTogdHJ1ZSB9O1xuICAgICAgICBjYXNlIGVuY29kaW5nSnNvbjpcbiAgICAgICAgICAgIHJldHVybiB7IHN0cmVhbTogZmFsc2UsIGJpbmFyeTogZmFsc2UgfTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEndStreamSerialization: () => (/* binding */ createEndStreamSerialization),\n/* harmony export */   endStreamFlag: () => (/* binding */ endStreamFlag),\n/* harmony export */   endStreamFromJson: () => (/* binding */ endStreamFromJson),\n/* harmony export */   endStreamToJson: () => (/* binding */ endStreamToJson)\n/* harmony export */ });\n/* harmony import */ var _error_json_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./error-json.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js\");\n/* harmony import */ var _http_headers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../http-headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/http-headers.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * endStreamFlag indicates that the data in a EnvelopedMessage\n * is a EndStreamResponse of the Connect protocol.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst endStreamFlag = 0b00000010;\n/**\n * Parse an EndStreamResponse of the Connect protocol.\n * Throws a ConnectError on malformed input.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction endStreamFromJson(data) {\n    const parseErr = new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"invalid end stream\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Unknown);\n    let jsonValue;\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        jsonValue = JSON.parse(typeof data == \"string\" ? data : new TextDecoder().decode(data));\n    }\n    catch (e) {\n        throw parseErr;\n    }\n    if (typeof jsonValue != \"object\" ||\n        jsonValue == null ||\n        Array.isArray(jsonValue)) {\n        throw parseErr;\n    }\n    const metadata = new Headers();\n    if (\"metadata\" in jsonValue) {\n        if (typeof jsonValue.metadata != \"object\" ||\n            jsonValue.metadata == null ||\n            Array.isArray(jsonValue.metadata)) {\n            throw parseErr;\n        }\n        for (const [key, values] of Object.entries(jsonValue.metadata)) {\n            if (!Array.isArray(values) ||\n                values.some((value) => typeof value != \"string\")) {\n                throw parseErr;\n            }\n            for (const value of values) {\n                metadata.append(key, value);\n            }\n        }\n    }\n    const error = \"error\" in jsonValue && jsonValue.error != null\n        ? (0,_error_json_js__WEBPACK_IMPORTED_MODULE_2__.errorFromJson)(jsonValue.error, metadata, parseErr)\n        : undefined;\n    return { metadata, error };\n}\n/**\n * Serialize the given EndStreamResponse to JSON.\n *\n * The JSON serialization options are required to produce the optional\n * human-readable representation of error details if the detail uses\n * google.protobuf.Any.\n *\n * See https://connectrpc.com/docs/protocol#error-end-stream\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction endStreamToJson(metadata, error, jsonWriteOptions) {\n    const es = {};\n    if (error !== undefined) {\n        es.error = (0,_error_json_js__WEBPACK_IMPORTED_MODULE_2__.errorToJson)(error, jsonWriteOptions);\n        metadata = (0,_http_headers_js__WEBPACK_IMPORTED_MODULE_3__.appendHeaders)(metadata, error.metadata);\n    }\n    let hasMetadata = false;\n    const md = {};\n    metadata.forEach((value, key) => {\n        hasMetadata = true;\n        md[key] = [value];\n    });\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (hasMetadata) {\n        es.metadata = md;\n    }\n    return es;\n}\n/**\n * Create a Serialization object that serializes a Connect EndStreamResponse.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createEndStreamSerialization(options) {\n    const textEncoder = new TextEncoder();\n    return {\n        serialize(data) {\n            try {\n                const jsonObject = endStreamToJson(data.metadata, data.error, options);\n                const jsonString = JSON.stringify(jsonObject);\n                return textEncoder.encode(jsonString);\n            }\n            catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`failed to serialize EndStreamResponse: ${m}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Internal);\n            }\n        },\n        parse(data) {\n            try {\n                return endStreamFromJson(data);\n            }\n            catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`failed to parse EndStreamResponse: ${m}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument);\n            }\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2VuZC1zdHJlYW0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2RDtBQUNWO0FBQ0E7QUFDakI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLHlCQUF5QiwyREFBWSx1QkFBdUIsMENBQUk7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDZEQUFhO0FBQ3ZCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG1CQUFtQiwyREFBVztBQUM5QixtQkFBbUIsK0RBQWE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJEQUFZLDJDQUEyQyxFQUFFLEdBQUcsMENBQUk7QUFDMUY7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJEQUFZLHVDQUF1QyxFQUFFLEdBQUcsMENBQUk7QUFDdEY7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxhdHNcXG5vZGVfbW9kdWxlc1xcQGNvbm5lY3RycGNcXGNvbm5lY3RcXGRpc3RcXGVzbVxccHJvdG9jb2wtY29ubmVjdFxcZW5kLXN0cmVhbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgZXJyb3JGcm9tSnNvbiwgZXJyb3JUb0pzb24gfSBmcm9tIFwiLi9lcnJvci1qc29uLmpzXCI7XG5pbXBvcnQgeyBhcHBlbmRIZWFkZXJzIH0gZnJvbSBcIi4uL2h0dHAtaGVhZGVycy5qc1wiO1xuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4uL2Nvbm5lY3QtZXJyb3IuanNcIjtcbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi4vY29kZS5qc1wiO1xuLyoqXG4gKiBlbmRTdHJlYW1GbGFnIGluZGljYXRlcyB0aGF0IHRoZSBkYXRhIGluIGEgRW52ZWxvcGVkTWVzc2FnZVxuICogaXMgYSBFbmRTdHJlYW1SZXNwb25zZSBvZiB0aGUgQ29ubmVjdCBwcm90b2NvbC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IGVuZFN0cmVhbUZsYWcgPSAwYjAwMDAwMDEwO1xuLyoqXG4gKiBQYXJzZSBhbiBFbmRTdHJlYW1SZXNwb25zZSBvZiB0aGUgQ29ubmVjdCBwcm90b2NvbC5cbiAqIFRocm93cyBhIENvbm5lY3RFcnJvciBvbiBtYWxmb3JtZWQgaW5wdXQuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmRTdHJlYW1Gcm9tSnNvbihkYXRhKSB7XG4gICAgY29uc3QgcGFyc2VFcnIgPSBuZXcgQ29ubmVjdEVycm9yKFwiaW52YWxpZCBlbmQgc3RyZWFtXCIsIENvZGUuVW5rbm93bik7XG4gICAgbGV0IGpzb25WYWx1ZTtcbiAgICB0cnkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1hc3NpZ25tZW50XG4gICAgICAgIGpzb25WYWx1ZSA9IEpTT04ucGFyc2UodHlwZW9mIGRhdGEgPT0gXCJzdHJpbmdcIiA/IGRhdGEgOiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoZGF0YSkpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICB0aHJvdyBwYXJzZUVycjtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBqc29uVmFsdWUgIT0gXCJvYmplY3RcIiB8fFxuICAgICAgICBqc29uVmFsdWUgPT0gbnVsbCB8fFxuICAgICAgICBBcnJheS5pc0FycmF5KGpzb25WYWx1ZSkpIHtcbiAgICAgICAgdGhyb3cgcGFyc2VFcnI7XG4gICAgfVxuICAgIGNvbnN0IG1ldGFkYXRhID0gbmV3IEhlYWRlcnMoKTtcbiAgICBpZiAoXCJtZXRhZGF0YVwiIGluIGpzb25WYWx1ZSkge1xuICAgICAgICBpZiAodHlwZW9mIGpzb25WYWx1ZS5tZXRhZGF0YSAhPSBcIm9iamVjdFwiIHx8XG4gICAgICAgICAgICBqc29uVmFsdWUubWV0YWRhdGEgPT0gbnVsbCB8fFxuICAgICAgICAgICAgQXJyYXkuaXNBcnJheShqc29uVmFsdWUubWV0YWRhdGEpKSB7XG4gICAgICAgICAgICB0aHJvdyBwYXJzZUVycjtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlc10gb2YgT2JqZWN0LmVudHJpZXMoanNvblZhbHVlLm1ldGFkYXRhKSkge1xuICAgICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlcykgfHxcbiAgICAgICAgICAgICAgICB2YWx1ZXMuc29tZSgodmFsdWUpID0+IHR5cGVvZiB2YWx1ZSAhPSBcInN0cmluZ1wiKSkge1xuICAgICAgICAgICAgICAgIHRocm93IHBhcnNlRXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YS5hcHBlbmQoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgZXJyb3IgPSBcImVycm9yXCIgaW4ganNvblZhbHVlICYmIGpzb25WYWx1ZS5lcnJvciAhPSBudWxsXG4gICAgICAgID8gZXJyb3JGcm9tSnNvbihqc29uVmFsdWUuZXJyb3IsIG1ldGFkYXRhLCBwYXJzZUVycilcbiAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIHsgbWV0YWRhdGEsIGVycm9yIH07XG59XG4vKipcbiAqIFNlcmlhbGl6ZSB0aGUgZ2l2ZW4gRW5kU3RyZWFtUmVzcG9uc2UgdG8gSlNPTi5cbiAqXG4gKiBUaGUgSlNPTiBzZXJpYWxpemF0aW9uIG9wdGlvbnMgYXJlIHJlcXVpcmVkIHRvIHByb2R1Y2UgdGhlIG9wdGlvbmFsXG4gKiBodW1hbi1yZWFkYWJsZSByZXByZXNlbnRhdGlvbiBvZiBlcnJvciBkZXRhaWxzIGlmIHRoZSBkZXRhaWwgdXNlc1xuICogZ29vZ2xlLnByb3RvYnVmLkFueS5cbiAqXG4gKiBTZWUgaHR0cHM6Ly9jb25uZWN0cnBjLmNvbS9kb2NzL3Byb3RvY29sI2Vycm9yLWVuZC1zdHJlYW1cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuZFN0cmVhbVRvSnNvbihtZXRhZGF0YSwgZXJyb3IsIGpzb25Xcml0ZU9wdGlvbnMpIHtcbiAgICBjb25zdCBlcyA9IHt9O1xuICAgIGlmIChlcnJvciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGVzLmVycm9yID0gZXJyb3JUb0pzb24oZXJyb3IsIGpzb25Xcml0ZU9wdGlvbnMpO1xuICAgICAgICBtZXRhZGF0YSA9IGFwcGVuZEhlYWRlcnMobWV0YWRhdGEsIGVycm9yLm1ldGFkYXRhKTtcbiAgICB9XG4gICAgbGV0IGhhc01ldGFkYXRhID0gZmFsc2U7XG4gICAgY29uc3QgbWQgPSB7fTtcbiAgICBtZXRhZGF0YS5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgIGhhc01ldGFkYXRhID0gdHJ1ZTtcbiAgICAgICAgbWRba2V5XSA9IFt2YWx1ZV07XG4gICAgfSk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bm5lY2Vzc2FyeS1jb25kaXRpb25cbiAgICBpZiAoaGFzTWV0YWRhdGEpIHtcbiAgICAgICAgZXMubWV0YWRhdGEgPSBtZDtcbiAgICB9XG4gICAgcmV0dXJuIGVzO1xufVxuLyoqXG4gKiBDcmVhdGUgYSBTZXJpYWxpemF0aW9uIG9iamVjdCB0aGF0IHNlcmlhbGl6ZXMgYSBDb25uZWN0IEVuZFN0cmVhbVJlc3BvbnNlLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRW5kU3RyZWFtU2VyaWFsaXphdGlvbihvcHRpb25zKSB7XG4gICAgY29uc3QgdGV4dEVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBzZXJpYWxpemUoZGF0YSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCBqc29uT2JqZWN0ID0gZW5kU3RyZWFtVG9Kc29uKGRhdGEubWV0YWRhdGEsIGRhdGEuZXJyb3IsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGpzb25TdHJpbmcgPSBKU09OLnN0cmluZ2lmeShqc29uT2JqZWN0KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGV4dEVuY29kZXIuZW5jb2RlKGpzb25TdHJpbmcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBtID0gZSBpbnN0YW5jZW9mIEVycm9yID8gZS5tZXNzYWdlIDogU3RyaW5nKGUpO1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IoYGZhaWxlZCB0byBzZXJpYWxpemUgRW5kU3RyZWFtUmVzcG9uc2U6ICR7bX1gLCBDb2RlLkludGVybmFsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcGFyc2UoZGF0YSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZW5kU3RyZWFtRnJvbUpzb24oZGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG0gPSBlIGluc3RhbmNlb2YgRXJyb3IgPyBlLm1lc3NhZ2UgOiBTdHJpbmcoZSk7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgZmFpbGVkIHRvIHBhcnNlIEVuZFN0cmVhbVJlc3BvbnNlOiAke219YCwgQ29kZS5JbnZhbGlkQXJndW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   errorFromJson: () => (/* binding */ errorFromJson),\n/* harmony export */   errorFromJsonBytes: () => (/* binding */ errorFromJsonBytes),\n/* harmony export */   errorToJson: () => (/* binding */ errorToJson),\n/* harmony export */   errorToJsonBytes: () => (/* binding */ errorToJsonBytes)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./code-string.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n\n\n\n\n/**\n * Parse a Connect error from a JSON value.\n * Will return a ConnectError, and throw the provided fallback if parsing failed.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction errorFromJson(jsonValue, metadata, fallback) {\n    var _a;\n    if (metadata) {\n        new Headers(metadata).forEach((value, key) => fallback.metadata.append(key, value));\n    }\n    if (typeof jsonValue !== \"object\" ||\n        jsonValue == null ||\n        Array.isArray(jsonValue)) {\n        throw fallback;\n    }\n    let code = fallback.code;\n    if (\"code\" in jsonValue && typeof jsonValue.code === \"string\") {\n        code = (_a = (0,_code_string_js__WEBPACK_IMPORTED_MODULE_0__.codeFromString)(jsonValue.code)) !== null && _a !== void 0 ? _a : code;\n    }\n    const message = jsonValue.message;\n    if (message != null && typeof message !== \"string\") {\n        throw fallback;\n    }\n    const error = new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(message !== null && message !== void 0 ? message : \"\", code, metadata);\n    if (\"details\" in jsonValue && Array.isArray(jsonValue.details)) {\n        for (const detail of jsonValue.details) {\n            if (detail === null ||\n                typeof detail != \"object\" ||\n                Array.isArray(detail) ||\n                typeof detail.type != \"string\" ||\n                typeof detail.value != \"string\") {\n                throw fallback;\n            }\n            try {\n                error.details.push({\n                    type: detail.type,\n                    value: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoBase64.dec(detail.value),\n                    debug: detail.debug,\n                });\n            }\n            catch (e) {\n                throw fallback;\n            }\n        }\n    }\n    return error;\n}\n/**\n * Parse a Connect error from a serialized JSON value.\n * Will return a ConnectError, and throw the provided fallback if parsing failed.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction errorFromJsonBytes(bytes, metadata, fallback) {\n    let jsonValue;\n    try {\n        jsonValue = JSON.parse(new TextDecoder().decode(bytes));\n    }\n    catch (e) {\n        throw fallback;\n    }\n    return errorFromJson(jsonValue, metadata, fallback);\n}\n/**\n * Serialize the given error to JSON.\n *\n * The JSON serialization options are required to produce the optional\n * human-readable representation in the \"debug\" key if the detail uses\n * google.protobuf.Any. If serialization of the \"debug\" value fails, it\n * is silently disregarded.\n *\n * See https://connectrpc.com/docs/protocol#error-end-stream\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction errorToJson(error, jsonWriteOptions) {\n    const o = {\n        code: (0,_code_string_js__WEBPACK_IMPORTED_MODULE_0__.codeToString)(error.code),\n    };\n    if (error.rawMessage.length > 0) {\n        o.message = error.rawMessage;\n    }\n    if (error.details.length > 0) {\n        o.details = error.details\n            .map((value) => {\n            if (\"getType\" in value) {\n                const i = {\n                    type: value.getType().typeName,\n                    value: value.toBinary(),\n                };\n                try {\n                    i.debug = value.toJson(jsonWriteOptions);\n                }\n                catch (e) {\n                    // We deliberately ignore errors that may occur when serializing\n                    // a message to JSON (the message contains an Any).\n                    // The rationale is that we are only trying to provide optional\n                    // debug information.\n                }\n                return i;\n            }\n            return value;\n        })\n            .map((_a) => {\n            var { value } = _a, rest = __rest(_a, [\"value\"]);\n            return (Object.assign(Object.assign({}, rest), { value: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoBase64.enc(value).replace(/=+$/, \"\") }));\n        });\n    }\n    return o;\n}\n/**\n * Serialize the given error to JSON. This calls errorToJson(), but stringifies\n * the result, and converts it into a UInt8Array.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction errorToJsonBytes(error, jsonWriteOptions) {\n    const textEncoder = new TextEncoder();\n    try {\n        const jsonObject = errorToJson(error, jsonWriteOptions);\n        const jsonString = JSON.stringify(jsonObject);\n        return textEncoder.encode(jsonString);\n    }\n    catch (e) {\n        const m = e instanceof Error ? e.message : String(e);\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`failed to serialize Connect Error: ${m}`, _code_js__WEBPACK_IMPORTED_MODULE_3__.Code.Internal);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/get-request.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/get-request.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   transformConnectPostToGetRequest: () => (/* binding */ transformConnectPostToGetRequest)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./version.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\nconst contentTypePrefix = \"application/\";\nfunction encodeMessageForUrl(message, useBase64) {\n    if (useBase64) {\n        // TODO(jchadwick-buf): Three regex replaces seems excessive.\n        // Can we make protoBase64.enc more flexible?\n        return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.protoBase64\n            .enc(message)\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\")\n            .replace(/=+$/, \"\");\n    }\n    else {\n        return encodeURIComponent(new TextDecoder().decode(message));\n    }\n}\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformConnectPostToGetRequest(request, message, useBase64) {\n    let query = `?connect=v${_version_js__WEBPACK_IMPORTED_MODULE_1__.protocolVersion}`;\n    const contentType = request.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerContentType);\n    if ((contentType === null || contentType === void 0 ? void 0 : contentType.indexOf(contentTypePrefix)) === 0) {\n        query +=\n            \"&encoding=\" +\n                encodeURIComponent(contentType.slice(contentTypePrefix.length));\n    }\n    const compression = request.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerUnaryEncoding);\n    if (compression !== null && compression !== \"identity\") {\n        query += \"&compression=\" + encodeURIComponent(compression);\n        // Force base64 for compressed payloads.\n        useBase64 = true;\n    }\n    if (useBase64) {\n        query += \"&base64=1\";\n    }\n    query += \"&message=\" + encodeMessageForUrl(message, useBase64);\n    const url = request.url + query;\n    // Omit headers that are not used for unary GET requests.\n    const header = new Headers(request.header);\n    [\n        _headers_js__WEBPACK_IMPORTED_MODULE_2__.headerProtocolVersion,\n        _headers_js__WEBPACK_IMPORTED_MODULE_2__.headerContentType,\n        _headers_js__WEBPACK_IMPORTED_MODULE_2__.headerUnaryContentLength,\n        _headers_js__WEBPACK_IMPORTED_MODULE_2__.headerUnaryEncoding,\n        _headers_js__WEBPACK_IMPORTED_MODULE_2__.headerUnaryAcceptEncoding,\n    ].forEach((h) => header.delete(h));\n    return Object.assign(Object.assign({}, request), { init: Object.assign(Object.assign({}, request.init), { method: \"GET\" }), url,\n        header });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2dldC1yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMwRDtBQUN5RjtBQUNwRztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwyREFBVztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDZCQUE2Qix3REFBZSxDQUFDO0FBQzdDLDJDQUEyQywwREFBaUI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyw0REFBbUI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDhEQUFxQjtBQUM3QixRQUFRLDBEQUFpQjtBQUN6QixRQUFRLGlFQUF3QjtBQUNoQyxRQUFRLDREQUFtQjtBQUMzQixRQUFRLGtFQUF5QjtBQUNqQztBQUNBLHlDQUF5QyxjQUFjLG9DQUFvQyxtQkFBbUIsZUFBZTtBQUM3SCxnQkFBZ0I7QUFDaEIiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sLWNvbm5lY3RcXGdldC1yZXF1ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBNZXNzYWdlLCBwcm90b0Jhc2U2NCB9IGZyb20gXCJAYnVmYnVpbGQvcHJvdG9idWZcIjtcbmltcG9ydCB7IGhlYWRlckNvbnRlbnRUeXBlLCBoZWFkZXJQcm90b2NvbFZlcnNpb24sIGhlYWRlclVuYXJ5QWNjZXB0RW5jb2RpbmcsIGhlYWRlclVuYXJ5Q29udGVudExlbmd0aCwgaGVhZGVyVW5hcnlFbmNvZGluZywgfSBmcm9tIFwiLi9oZWFkZXJzLmpzXCI7XG5pbXBvcnQgeyBwcm90b2NvbFZlcnNpb24gfSBmcm9tIFwiLi92ZXJzaW9uLmpzXCI7XG5jb25zdCBjb250ZW50VHlwZVByZWZpeCA9IFwiYXBwbGljYXRpb24vXCI7XG5mdW5jdGlvbiBlbmNvZGVNZXNzYWdlRm9yVXJsKG1lc3NhZ2UsIHVzZUJhc2U2NCkge1xuICAgIGlmICh1c2VCYXNlNjQpIHtcbiAgICAgICAgLy8gVE9ETyhqY2hhZHdpY2stYnVmKTogVGhyZWUgcmVnZXggcmVwbGFjZXMgc2VlbXMgZXhjZXNzaXZlLlxuICAgICAgICAvLyBDYW4gd2UgbWFrZSBwcm90b0Jhc2U2NC5lbmMgbW9yZSBmbGV4aWJsZT9cbiAgICAgICAgcmV0dXJuIHByb3RvQmFzZTY0XG4gICAgICAgICAgICAuZW5jKG1lc3NhZ2UpXG4gICAgICAgICAgICAucmVwbGFjZSgvXFwrL2csIFwiLVwiKVxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcLy9nLCBcIl9cIilcbiAgICAgICAgICAgIC5yZXBsYWNlKC89KyQvLCBcIlwiKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQobmV3IFRleHREZWNvZGVyKCkuZGVjb2RlKG1lc3NhZ2UpKTtcbiAgICB9XG59XG4vKipcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtQ29ubmVjdFBvc3RUb0dldFJlcXVlc3QocmVxdWVzdCwgbWVzc2FnZSwgdXNlQmFzZTY0KSB7XG4gICAgbGV0IHF1ZXJ5ID0gYD9jb25uZWN0PXYke3Byb3RvY29sVmVyc2lvbn1gO1xuICAgIGNvbnN0IGNvbnRlbnRUeXBlID0gcmVxdWVzdC5oZWFkZXIuZ2V0KGhlYWRlckNvbnRlbnRUeXBlKTtcbiAgICBpZiAoKGNvbnRlbnRUeXBlID09PSBudWxsIHx8IGNvbnRlbnRUeXBlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb250ZW50VHlwZS5pbmRleE9mKGNvbnRlbnRUeXBlUHJlZml4KSkgPT09IDApIHtcbiAgICAgICAgcXVlcnkgKz1cbiAgICAgICAgICAgIFwiJmVuY29kaW5nPVwiICtcbiAgICAgICAgICAgICAgICBlbmNvZGVVUklDb21wb25lbnQoY29udGVudFR5cGUuc2xpY2UoY29udGVudFR5cGVQcmVmaXgubGVuZ3RoKSk7XG4gICAgfVxuICAgIGNvbnN0IGNvbXByZXNzaW9uID0gcmVxdWVzdC5oZWFkZXIuZ2V0KGhlYWRlclVuYXJ5RW5jb2RpbmcpO1xuICAgIGlmIChjb21wcmVzc2lvbiAhPT0gbnVsbCAmJiBjb21wcmVzc2lvbiAhPT0gXCJpZGVudGl0eVwiKSB7XG4gICAgICAgIHF1ZXJ5ICs9IFwiJmNvbXByZXNzaW9uPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KGNvbXByZXNzaW9uKTtcbiAgICAgICAgLy8gRm9yY2UgYmFzZTY0IGZvciBjb21wcmVzc2VkIHBheWxvYWRzLlxuICAgICAgICB1c2VCYXNlNjQgPSB0cnVlO1xuICAgIH1cbiAgICBpZiAodXNlQmFzZTY0KSB7XG4gICAgICAgIHF1ZXJ5ICs9IFwiJmJhc2U2ND0xXCI7XG4gICAgfVxuICAgIHF1ZXJ5ICs9IFwiJm1lc3NhZ2U9XCIgKyBlbmNvZGVNZXNzYWdlRm9yVXJsKG1lc3NhZ2UsIHVzZUJhc2U2NCk7XG4gICAgY29uc3QgdXJsID0gcmVxdWVzdC51cmwgKyBxdWVyeTtcbiAgICAvLyBPbWl0IGhlYWRlcnMgdGhhdCBhcmUgbm90IHVzZWQgZm9yIHVuYXJ5IEdFVCByZXF1ZXN0cy5cbiAgICBjb25zdCBoZWFkZXIgPSBuZXcgSGVhZGVycyhyZXF1ZXN0LmhlYWRlcik7XG4gICAgW1xuICAgICAgICBoZWFkZXJQcm90b2NvbFZlcnNpb24sXG4gICAgICAgIGhlYWRlckNvbnRlbnRUeXBlLFxuICAgICAgICBoZWFkZXJVbmFyeUNvbnRlbnRMZW5ndGgsXG4gICAgICAgIGhlYWRlclVuYXJ5RW5jb2RpbmcsXG4gICAgICAgIGhlYWRlclVuYXJ5QWNjZXB0RW5jb2RpbmcsXG4gICAgXS5mb3JFYWNoKChoKSA9PiBoZWFkZXIuZGVsZXRlKGgpKTtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCByZXF1ZXN0KSwgeyBpbml0OiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHJlcXVlc3QuaW5pdCksIHsgbWV0aG9kOiBcIkdFVFwiIH0pLCB1cmwsXG4gICAgICAgIGhlYWRlciB9KTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/get-request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/handler-factory.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/handler-factory.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHandlerFactory: () => (/* binding */ createHandlerFactory)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _implementation_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../implementation.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/implementation.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./content-type.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js\");\n/* harmony import */ var _end_stream_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./end-stream.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js\");\n/* harmony import */ var _error_json_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./error-json.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _http_status_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./http-status.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/http-status.js\");\n/* harmony import */ var _parse_timeout_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./parse-timeout.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/parse-timeout.js\");\n/* harmony import */ var _query_params_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./query-params.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/query-params.js\");\n/* harmony import */ var _trailer_mux_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./trailer-mux.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./version.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js\");\n/* harmony import */ var _protocol_compression_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../protocol/compression.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\");\n/* harmony import */ var _protocol_serialization_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../protocol/serialization.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol/universal-handler.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js\");\n/* harmony import */ var _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../protocol/universal.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../protocol/async-iterable.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocol/content-type-matcher.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js\");\n/* harmony import */ var _protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../protocol/create-method-url.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../protocol/invoke-implementation.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst protocolName = \"connect\";\nconst methodPost = \"POST\";\nconst methodGet = \"GET\";\n/**\n * Create a factory that creates Connect handlers.\n */\nfunction createHandlerFactory(options) {\n    const opt = (0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.validateUniversalHandlerOptions)(options);\n    const endStreamSerialization = (0,_end_stream_js__WEBPACK_IMPORTED_MODULE_1__.createEndStreamSerialization)(opt.jsonOptions);\n    function fact(spec) {\n        let h;\n        let contentTypeRegExp;\n        const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_2__.createMethodSerializationLookup)(spec.method, opt.binaryOptions, opt.jsonOptions, opt);\n        switch (spec.kind) {\n            case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.MethodKind.Unary:\n                contentTypeRegExp = _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeUnaryRegExp;\n                h = createUnaryHandler(opt, spec, serialization);\n                break;\n            default:\n                contentTypeRegExp = _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeStreamRegExp;\n                h = createStreamHandler(opt, spec, serialization, endStreamSerialization);\n                break;\n        }\n        const allowedMethods = [methodPost];\n        if (spec.method.idempotency === _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.MethodIdempotency.NoSideEffects) {\n            allowedMethods.push(methodGet);\n        }\n        return Object.assign(h, {\n            protocolNames: [protocolName],\n            supportedContentType: (0,_protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_5__.contentTypeMatcher)(contentTypeRegExp),\n            allowedMethods,\n            requestPath: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_6__.createMethodUrl)(\"/\", spec.service, spec.method),\n            service: spec.service,\n            method: spec.method,\n        });\n    }\n    fact.protocolName = protocolName;\n    return fact;\n}\nfunction createUnaryHandler(opt, spec, serialization) {\n    return async function handle(req) {\n        const isGet = req.method == methodGet;\n        if (isGet && spec.method.idempotency != _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.MethodIdempotency.NoSideEffects) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseMethodNotAllowed;\n        }\n        const queryParams = new URL(req.url).searchParams;\n        const compressionRequested = isGet\n            ? queryParams.get(_query_params_js__WEBPACK_IMPORTED_MODULE_8__.paramCompression)\n            : req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryEncoding);\n        const type = isGet\n            ? (0,_content_type_js__WEBPACK_IMPORTED_MODULE_4__.parseEncodingQuery)(queryParams.get(_query_params_js__WEBPACK_IMPORTED_MODULE_8__.paramEncoding))\n            : (0,_content_type_js__WEBPACK_IMPORTED_MODULE_4__.parseContentType)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerContentType));\n        if (type == undefined || type.stream) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseUnsupportedMediaType;\n        }\n        const timeout = (0,_parse_timeout_js__WEBPACK_IMPORTED_MODULE_10__.parseTimeout)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerTimeout), opt.maxTimeoutMs);\n        const context = (0,_implementation_js__WEBPACK_IMPORTED_MODULE_11__.createHandlerContext)(Object.assign(Object.assign({}, spec), { requestMethod: req.method, protocolName, timeoutMs: timeout.timeoutMs, shutdownSignal: opt.shutdownSignal, requestSignal: req.signal, requestHeader: req.header, url: req.url, responseHeader: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerContentType]: type.binary\n                    ? _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeUnaryProto\n                    : _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeUnaryJson,\n            }, contextValues: req.contextValues }));\n        const compression = (0,_protocol_compression_js__WEBPACK_IMPORTED_MODULE_12__.compressionNegotiate)(opt.acceptCompression, compressionRequested, req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryAcceptEncoding), _headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryAcceptEncoding);\n        let status = _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseOk.status;\n        let body;\n        try {\n            if (opt.requireConnectProtocolHeader) {\n                if (isGet) {\n                    (0,_version_js__WEBPACK_IMPORTED_MODULE_13__.requireProtocolVersionParam)(queryParams);\n                }\n                else {\n                    (0,_version_js__WEBPACK_IMPORTED_MODULE_13__.requireProtocolVersionHeader)(req.header);\n                }\n            }\n            // raise compression error to serialize it as a error response\n            if (compression.error) {\n                throw compression.error;\n            }\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error) {\n                throw timeout.error;\n            }\n            let reqBody;\n            if (isGet) {\n                reqBody = await readUnaryMessageFromQuery(opt.readMaxBytes, compression.request, queryParams);\n            }\n            else {\n                reqBody = await readUnaryMessageFromBody(opt.readMaxBytes, compression.request, req);\n            }\n            const input = parseUnaryMessage(spec.method, type.binary, serialization, reqBody);\n            const output = await (0,_protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_14__.invokeUnaryImplementation)(spec, context, input, opt.interceptors);\n            body = serialization.getO(type.binary).serialize(output);\n        }\n        catch (e) {\n            let error;\n            if (e instanceof _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError) {\n                error = e;\n            }\n            else {\n                error = new _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError(\"internal error\", _code_js__WEBPACK_IMPORTED_MODULE_16__.Code.Internal, undefined, undefined, e);\n            }\n            status = (0,_http_status_js__WEBPACK_IMPORTED_MODULE_17__.codeToHttpStatus)(error.code);\n            context.responseHeader.set(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerContentType, _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeUnaryJson);\n            error.metadata.forEach((value, key) => {\n                context.responseHeader.set(key, value);\n            });\n            body = (0,_error_json_js__WEBPACK_IMPORTED_MODULE_18__.errorToJsonBytes)(error, opt.jsonOptions);\n        }\n        finally {\n            context.abort();\n        }\n        if (compression.response && body.byteLength >= opt.compressMinBytes) {\n            body = await compression.response.compress(body);\n            context.responseHeader.set(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryEncoding, compression.response.name);\n        }\n        const header = (0,_trailer_mux_js__WEBPACK_IMPORTED_MODULE_19__.trailerMux)(context.responseHeader, context.responseTrailer);\n        header.set(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryContentLength, body.byteLength.toString(10));\n        return {\n            status,\n            body: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.createAsyncIterable)([body]),\n            header,\n        };\n    };\n}\nasync function readUnaryMessageFromBody(readMaxBytes, compression, request) {\n    if (typeof request.body == \"object\" &&\n        request.body !== null &&\n        Symbol.asyncIterator in request.body) {\n        let reqBytes = await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.readAllBytes)(request.body, readMaxBytes, request.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerUnaryContentLength));\n        if (compression) {\n            reqBytes = await compression.decompress(reqBytes, readMaxBytes);\n        }\n        return reqBytes;\n    }\n    return request.body;\n}\nasync function readUnaryMessageFromQuery(readMaxBytes, compression, queryParams) {\n    var _a;\n    const base64 = queryParams.get(_query_params_js__WEBPACK_IMPORTED_MODULE_8__.paramBase64);\n    const message = (_a = queryParams.get(_query_params_js__WEBPACK_IMPORTED_MODULE_8__.paramMessage)) !== null && _a !== void 0 ? _a : \"\";\n    let decoded;\n    if (base64 === \"1\") {\n        decoded = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_21__.protoBase64.dec(message);\n    }\n    else {\n        decoded = new TextEncoder().encode(message);\n    }\n    if (compression) {\n        decoded = await compression.decompress(decoded, readMaxBytes);\n    }\n    return decoded;\n}\nfunction parseUnaryMessage(method, useBinaryFormat, serialization, input) {\n    if (input instanceof Uint8Array) {\n        return serialization.getI(useBinaryFormat).parse(input);\n    }\n    if (useBinaryFormat) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError(\"received parsed JSON request body, but content-type indicates binary format\", _code_js__WEBPACK_IMPORTED_MODULE_16__.Code.Internal);\n    }\n    try {\n        return method.I.fromJson(input);\n    }\n    catch (e) {\n        throw _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError.from(e, _code_js__WEBPACK_IMPORTED_MODULE_16__.Code.InvalidArgument);\n    }\n}\nfunction createStreamHandler(opt, spec, serialization, endStreamSerialization) {\n    return async function handle(req) {\n        (0,_protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.assertByteStreamRequest)(req);\n        const type = (0,_content_type_js__WEBPACK_IMPORTED_MODULE_4__.parseContentType)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerContentType));\n        if (type == undefined || !type.stream) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseUnsupportedMediaType;\n        }\n        if (req.method !== methodPost) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseMethodNotAllowed;\n        }\n        const timeout = (0,_parse_timeout_js__WEBPACK_IMPORTED_MODULE_10__.parseTimeout)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerTimeout), opt.maxTimeoutMs);\n        const context = (0,_implementation_js__WEBPACK_IMPORTED_MODULE_11__.createHandlerContext)(Object.assign(Object.assign({}, spec), { requestMethod: req.method, protocolName, timeoutMs: timeout.timeoutMs, shutdownSignal: opt.shutdownSignal, requestSignal: req.signal, requestHeader: req.header, url: req.url, responseHeader: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerContentType]: type.binary\n                    ? _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeStreamProto\n                    : _content_type_js__WEBPACK_IMPORTED_MODULE_4__.contentTypeStreamJson,\n            }, contextValues: req.contextValues }));\n        const compression = (0,_protocol_compression_js__WEBPACK_IMPORTED_MODULE_12__.compressionNegotiate)(opt.acceptCompression, req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerStreamEncoding), req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerStreamAcceptEncoding), _headers_js__WEBPACK_IMPORTED_MODULE_9__.headerStreamAcceptEncoding);\n        if (compression.response) {\n            context.responseHeader.set(_headers_js__WEBPACK_IMPORTED_MODULE_9__.headerStreamEncoding, compression.response.name);\n        }\n        // We split the pipeline into two parts: The request iterator, and the\n        // response iterator. We do this because the request iterator is responsible\n        // for parsing the request body, and we don't want write errors of the response\n        // iterator to affect the request iterator.\n        const inputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.pipe)(req.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformPrepend)(() => {\n            if (opt.requireConnectProtocolHeader) {\n                (0,_version_js__WEBPACK_IMPORTED_MODULE_13__.requireProtocolVersionHeader)(req.header);\n            }\n            // raise compression error to serialize it as the end stream response\n            if (compression.error)\n                throw compression.error;\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error)\n                throw timeout.error;\n            return undefined;\n        }), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformDecompressEnvelope)(compression.request, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformParseEnvelope)(serialization.getI(type.binary), _end_stream_js__WEBPACK_IMPORTED_MODULE_1__.endStreamFlag));\n        const it = (0,_protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_14__.transformInvokeImplementation)(spec, context, opt.interceptors)(inputIt)[Symbol.asyncIterator]();\n        const outputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.pipe)(\n        // We wrap the iterator in an async iterator to ensure that the\n        // abort signal is aborted when the iterator is done.\n        {\n            [Symbol.asyncIterator]() {\n                return {\n                    next: () => it.next(),\n                    throw: (e) => {\n                        var _a, _b;\n                        context.abort(e);\n                        return (_b = (_a = it.throw) === null || _a === void 0 ? void 0 : _a.call(it, e)) !== null && _b !== void 0 ? _b : Promise.reject({ done: true });\n                    },\n                    return: (v) => {\n                        var _a, _b;\n                        context.abort();\n                        return ((_b = (_a = it.return) === null || _a === void 0 ? void 0 : _a.call(it, v)) !== null && _b !== void 0 ? _b : Promise.resolve({ done: true, value: v }));\n                    },\n                };\n            },\n        }, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformSerializeEnvelope)(serialization.getO(type.binary)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformCatchFinally)((e) => {\n            context.abort();\n            const end = {\n                metadata: context.responseTrailer,\n            };\n            if (e instanceof _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError) {\n                end.error = e;\n            }\n            else if (e !== undefined) {\n                end.error = new _connect_error_js__WEBPACK_IMPORTED_MODULE_15__.ConnectError(\"internal error\", _code_js__WEBPACK_IMPORTED_MODULE_16__.Code.Internal, undefined, undefined, e);\n            }\n            return {\n                flags: _end_stream_js__WEBPACK_IMPORTED_MODULE_1__.endStreamFlag,\n                data: endStreamSerialization.serialize(end),\n            };\n        }), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformCompressEnvelope)(compression.response, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.transformJoinEnvelopes)(), { propagateDownStreamError: true });\n        return Object.assign(Object.assign({}, _protocol_universal_js__WEBPACK_IMPORTED_MODULE_7__.uResponseOk), { \n            // We wait for the first response body bytes before resolving, so that\n            // implementations have a chance to add headers before an adapter commits\n            // them to the wire.\n            body: await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_20__.untilFirst)(outputIt), header: context.responseHeader });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/handler-factory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerContentType: () => (/* binding */ headerContentType),\n/* harmony export */   headerProtocolVersion: () => (/* binding */ headerProtocolVersion),\n/* harmony export */   headerStreamAcceptEncoding: () => (/* binding */ headerStreamAcceptEncoding),\n/* harmony export */   headerStreamEncoding: () => (/* binding */ headerStreamEncoding),\n/* harmony export */   headerTimeout: () => (/* binding */ headerTimeout),\n/* harmony export */   headerUnaryAcceptEncoding: () => (/* binding */ headerUnaryAcceptEncoding),\n/* harmony export */   headerUnaryContentLength: () => (/* binding */ headerUnaryContentLength),\n/* harmony export */   headerUnaryEncoding: () => (/* binding */ headerUnaryEncoding),\n/* harmony export */   headerUserAgent: () => (/* binding */ headerUserAgent)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nconst headerContentType = \"Content-Type\";\nconst headerUnaryContentLength = \"Content-Length\";\nconst headerUnaryEncoding = \"Content-Encoding\";\nconst headerStreamEncoding = \"Connect-Content-Encoding\";\nconst headerUnaryAcceptEncoding = \"Accept-Encoding\";\nconst headerStreamAcceptEncoding = \"Connect-Accept-Encoding\";\nconst headerTimeout = \"Connect-Timeout-Ms\";\nconst headerProtocolVersion = \"Connect-Protocol-Version\";\nconst headerUserAgent = \"User-Agent\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2hlYWRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sLWNvbm5lY3RcXGhlYWRlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBoZWFkZXJDb250ZW50VHlwZSA9IFwiQ29udGVudC1UeXBlXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyVW5hcnlDb250ZW50TGVuZ3RoID0gXCJDb250ZW50LUxlbmd0aFwiO1xuZXhwb3J0IGNvbnN0IGhlYWRlclVuYXJ5RW5jb2RpbmcgPSBcIkNvbnRlbnQtRW5jb2RpbmdcIjtcbmV4cG9ydCBjb25zdCBoZWFkZXJTdHJlYW1FbmNvZGluZyA9IFwiQ29ubmVjdC1Db250ZW50LUVuY29kaW5nXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyVW5hcnlBY2NlcHRFbmNvZGluZyA9IFwiQWNjZXB0LUVuY29kaW5nXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyU3RyZWFtQWNjZXB0RW5jb2RpbmcgPSBcIkNvbm5lY3QtQWNjZXB0LUVuY29kaW5nXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyVGltZW91dCA9IFwiQ29ubmVjdC1UaW1lb3V0LU1zXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyUHJvdG9jb2xWZXJzaW9uID0gXCJDb25uZWN0LVByb3RvY29sLVZlcnNpb25cIjtcbmV4cG9ydCBjb25zdCBoZWFkZXJVc2VyQWdlbnQgPSBcIlVzZXItQWdlbnRcIjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/http-status.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/http-status.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codeFromHttpStatus: () => (/* binding */ codeFromHttpStatus),\n/* harmony export */   codeToHttpStatus: () => (/* binding */ codeToHttpStatus)\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Determine the Connect error code for the given HTTP status code.\n * See https://connectrpc.com/docs/protocol/#http-to-error-code\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeFromHttpStatus(httpStatus) {\n    switch (httpStatus) {\n        case 400: // Bad Request\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Internal;\n        case 401: // Unauthorized\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unauthenticated;\n        case 403: // Forbidden\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.PermissionDenied;\n        case 404: // Not Found\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unimplemented;\n        case 429: // Too Many Requests\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        case 502: // Bad Gateway\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        case 503: // Service Unavailable\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        case 504: // Gateway Timeout\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        default:\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unknown;\n    }\n}\n/**\n * Returns a HTTP status code for the given Connect code.\n * See https://connectrpc.com/docs/protocol#error-codes\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeToHttpStatus(code) {\n    switch (code) {\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Canceled:\n            return 499; // Client Closed Request\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unknown:\n            return 500; // Internal Server Error\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.InvalidArgument:\n            return 400; // Bad Request\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.DeadlineExceeded:\n            return 504; // Gateway Timeout\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.NotFound:\n            return 404; // Not Found\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.AlreadyExists:\n            return 409; // Conflict\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.PermissionDenied:\n            return 403; // Forbidden\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.ResourceExhausted:\n            return 429; // Too Many Requests\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.FailedPrecondition:\n            return 400; // Bad Request\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Aborted:\n            return 409; // Conflict\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.OutOfRange:\n            return 400; // Bad Request\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unimplemented:\n            return 501; // Not Implemented\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Internal:\n            return 500; // Internal Server Error\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable:\n            return 503; // Service Unavailable\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.DataLoss:\n            return 500; // Internal Server Error\n        case _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unauthenticated:\n            return 401; // Unauthorized\n        default:\n            return 500; // same as CodeUnknown\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L2h0dHAtc3RhdHVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2tDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBLG1CQUFtQiwwQ0FBSTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCLGFBQWEsMENBQUk7QUFDakIsd0JBQXdCO0FBQ3hCO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sLWNvbm5lY3RcXGh0dHAtc3RhdHVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbi8qKlxuICogRGV0ZXJtaW5lIHRoZSBDb25uZWN0IGVycm9yIGNvZGUgZm9yIHRoZSBnaXZlbiBIVFRQIHN0YXR1cyBjb2RlLlxuICogU2VlIGh0dHBzOi8vY29ubmVjdHJwYy5jb20vZG9jcy9wcm90b2NvbC8jaHR0cC10by1lcnJvci1jb2RlXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb2RlRnJvbUh0dHBTdGF0dXMoaHR0cFN0YXR1cykge1xuICAgIHN3aXRjaCAoaHR0cFN0YXR1cykge1xuICAgICAgICBjYXNlIDQwMDogLy8gQmFkIFJlcXVlc3RcbiAgICAgICAgICAgIHJldHVybiBDb2RlLkludGVybmFsO1xuICAgICAgICBjYXNlIDQwMTogLy8gVW5hdXRob3JpemVkXG4gICAgICAgICAgICByZXR1cm4gQ29kZS5VbmF1dGhlbnRpY2F0ZWQ7XG4gICAgICAgIGNhc2UgNDAzOiAvLyBGb3JiaWRkZW5cbiAgICAgICAgICAgIHJldHVybiBDb2RlLlBlcm1pc3Npb25EZW5pZWQ7XG4gICAgICAgIGNhc2UgNDA0OiAvLyBOb3QgRm91bmRcbiAgICAgICAgICAgIHJldHVybiBDb2RlLlVuaW1wbGVtZW50ZWQ7XG4gICAgICAgIGNhc2UgNDI5OiAvLyBUb28gTWFueSBSZXF1ZXN0c1xuICAgICAgICAgICAgcmV0dXJuIENvZGUuVW5hdmFpbGFibGU7XG4gICAgICAgIGNhc2UgNTAyOiAvLyBCYWQgR2F0ZXdheVxuICAgICAgICAgICAgcmV0dXJuIENvZGUuVW5hdmFpbGFibGU7XG4gICAgICAgIGNhc2UgNTAzOiAvLyBTZXJ2aWNlIFVuYXZhaWxhYmxlXG4gICAgICAgICAgICByZXR1cm4gQ29kZS5VbmF2YWlsYWJsZTtcbiAgICAgICAgY2FzZSA1MDQ6IC8vIEdhdGV3YXkgVGltZW91dFxuICAgICAgICAgICAgcmV0dXJuIENvZGUuVW5hdmFpbGFibGU7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gQ29kZS5Vbmtub3duO1xuICAgIH1cbn1cbi8qKlxuICogUmV0dXJucyBhIEhUVFAgc3RhdHVzIGNvZGUgZm9yIHRoZSBnaXZlbiBDb25uZWN0IGNvZGUuXG4gKiBTZWUgaHR0cHM6Ly9jb25uZWN0cnBjLmNvbS9kb2NzL3Byb3RvY29sI2Vycm9yLWNvZGVzXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb2RlVG9IdHRwU3RhdHVzKGNvZGUpIHtcbiAgICBzd2l0Y2ggKGNvZGUpIHtcbiAgICAgICAgY2FzZSBDb2RlLkNhbmNlbGVkOlxuICAgICAgICAgICAgcmV0dXJuIDQ5OTsgLy8gQ2xpZW50IENsb3NlZCBSZXF1ZXN0XG4gICAgICAgIGNhc2UgQ29kZS5Vbmtub3duOlxuICAgICAgICAgICAgcmV0dXJuIDUwMDsgLy8gSW50ZXJuYWwgU2VydmVyIEVycm9yXG4gICAgICAgIGNhc2UgQ29kZS5JbnZhbGlkQXJndW1lbnQ6XG4gICAgICAgICAgICByZXR1cm4gNDAwOyAvLyBCYWQgUmVxdWVzdFxuICAgICAgICBjYXNlIENvZGUuRGVhZGxpbmVFeGNlZWRlZDpcbiAgICAgICAgICAgIHJldHVybiA1MDQ7IC8vIEdhdGV3YXkgVGltZW91dFxuICAgICAgICBjYXNlIENvZGUuTm90Rm91bmQ6XG4gICAgICAgICAgICByZXR1cm4gNDA0OyAvLyBOb3QgRm91bmRcbiAgICAgICAgY2FzZSBDb2RlLkFscmVhZHlFeGlzdHM6XG4gICAgICAgICAgICByZXR1cm4gNDA5OyAvLyBDb25mbGljdFxuICAgICAgICBjYXNlIENvZGUuUGVybWlzc2lvbkRlbmllZDpcbiAgICAgICAgICAgIHJldHVybiA0MDM7IC8vIEZvcmJpZGRlblxuICAgICAgICBjYXNlIENvZGUuUmVzb3VyY2VFeGhhdXN0ZWQ6XG4gICAgICAgICAgICByZXR1cm4gNDI5OyAvLyBUb28gTWFueSBSZXF1ZXN0c1xuICAgICAgICBjYXNlIENvZGUuRmFpbGVkUHJlY29uZGl0aW9uOlxuICAgICAgICAgICAgcmV0dXJuIDQwMDsgLy8gQmFkIFJlcXVlc3RcbiAgICAgICAgY2FzZSBDb2RlLkFib3J0ZWQ6XG4gICAgICAgICAgICByZXR1cm4gNDA5OyAvLyBDb25mbGljdFxuICAgICAgICBjYXNlIENvZGUuT3V0T2ZSYW5nZTpcbiAgICAgICAgICAgIHJldHVybiA0MDA7IC8vIEJhZCBSZXF1ZXN0XG4gICAgICAgIGNhc2UgQ29kZS5VbmltcGxlbWVudGVkOlxuICAgICAgICAgICAgcmV0dXJuIDUwMTsgLy8gTm90IEltcGxlbWVudGVkXG4gICAgICAgIGNhc2UgQ29kZS5JbnRlcm5hbDpcbiAgICAgICAgICAgIHJldHVybiA1MDA7IC8vIEludGVybmFsIFNlcnZlciBFcnJvclxuICAgICAgICBjYXNlIENvZGUuVW5hdmFpbGFibGU6XG4gICAgICAgICAgICByZXR1cm4gNTAzOyAvLyBTZXJ2aWNlIFVuYXZhaWxhYmxlXG4gICAgICAgIGNhc2UgQ29kZS5EYXRhTG9zczpcbiAgICAgICAgICAgIHJldHVybiA1MDA7IC8vIEludGVybmFsIFNlcnZlciBFcnJvclxuICAgICAgICBjYXNlIENvZGUuVW5hdXRoZW50aWNhdGVkOlxuICAgICAgICAgICAgcmV0dXJuIDQwMTsgLy8gVW5hdXRob3JpemVkXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gNTAwOyAvLyBzYW1lIGFzIENvZGVVbmtub3duXG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/http-status.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/parse-timeout.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/parse-timeout.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseTimeout: () => (/* binding */ parseTimeout)\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Parse a Connect Timeout (Deadline) header.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseTimeout(value, maxTimeoutMs) {\n    if (value === null) {\n        return {};\n    }\n    const results = /^\\d{1,10}$/.exec(value);\n    if (results === null) {\n        return {\n            error: new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`protocol error: invalid connect timeout value: ${value}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument),\n        };\n    }\n    const timeoutMs = parseInt(results[0]);\n    if (timeoutMs > maxTimeoutMs) {\n        return {\n            timeoutMs: timeoutMs,\n            error: new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`timeout ${timeoutMs}ms must be <= ${maxTimeoutMs}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument),\n        };\n    }\n    return {\n        timeoutMs: parseInt(results[0]),\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3BhcnNlLXRpbWVvdXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDaUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLEtBQUs7QUFDOUI7QUFDQTtBQUNBLHVCQUF1QiwyREFBWSxtREFBbUQsTUFBTSxHQUFHLDBDQUFJO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwyREFBWSxZQUFZLFVBQVUsZ0JBQWdCLGFBQWEsR0FBRywwQ0FBSTtBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sLWNvbm5lY3RcXHBhcnNlLXRpbWVvdXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi4vY29kZS5qc1wiO1xuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4uL2Nvbm5lY3QtZXJyb3IuanNcIjtcbi8qKlxuICogUGFyc2UgYSBDb25uZWN0IFRpbWVvdXQgKERlYWRsaW5lKSBoZWFkZXIuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVRpbWVvdXQodmFsdWUsIG1heFRpbWVvdXRNcykge1xuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdHMgPSAvXlxcZHsxLDEwfSQvLmV4ZWModmFsdWUpO1xuICAgIGlmIChyZXN1bHRzID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBlcnJvcjogbmV3IENvbm5lY3RFcnJvcihgcHJvdG9jb2wgZXJyb3I6IGludmFsaWQgY29ubmVjdCB0aW1lb3V0IHZhbHVlOiAke3ZhbHVlfWAsIENvZGUuSW52YWxpZEFyZ3VtZW50KSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29uc3QgdGltZW91dE1zID0gcGFyc2VJbnQocmVzdWx0c1swXSk7XG4gICAgaWYgKHRpbWVvdXRNcyA+IG1heFRpbWVvdXRNcykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdGltZW91dE1zOiB0aW1lb3V0TXMsXG4gICAgICAgICAgICBlcnJvcjogbmV3IENvbm5lY3RFcnJvcihgdGltZW91dCAke3RpbWVvdXRNc31tcyBtdXN0IGJlIDw9ICR7bWF4VGltZW91dE1zfWAsIENvZGUuSW52YWxpZEFyZ3VtZW50KSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdGltZW91dE1zOiBwYXJzZUludChyZXN1bHRzWzBdKSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/parse-timeout.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/query-params.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/query-params.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   paramBase64: () => (/* binding */ paramBase64),\n/* harmony export */   paramCompression: () => (/* binding */ paramCompression),\n/* harmony export */   paramConnectVersion: () => (/* binding */ paramConnectVersion),\n/* harmony export */   paramEncoding: () => (/* binding */ paramEncoding),\n/* harmony export */   paramMessage: () => (/* binding */ paramMessage)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nconst paramConnectVersion = \"connect\";\nconst paramEncoding = \"encoding\";\nconst paramCompression = \"compression\";\nconst paramBase64 = \"base64\";\nconst paramMessage = \"message\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3F1ZXJ5LXBhcmFtcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxhdHNcXG5vZGVfbW9kdWxlc1xcQGNvbm5lY3RycGNcXGNvbm5lY3RcXGRpc3RcXGVzbVxccHJvdG9jb2wtY29ubmVjdFxccXVlcnktcGFyYW1zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgcGFyYW1Db25uZWN0VmVyc2lvbiA9IFwiY29ubmVjdFwiO1xuZXhwb3J0IGNvbnN0IHBhcmFtRW5jb2RpbmcgPSBcImVuY29kaW5nXCI7XG5leHBvcnQgY29uc3QgcGFyYW1Db21wcmVzc2lvbiA9IFwiY29tcHJlc3Npb25cIjtcbmV4cG9ydCBjb25zdCBwYXJhbUJhc2U2NCA9IFwiYmFzZTY0XCI7XG5leHBvcnQgY29uc3QgcGFyYW1NZXNzYWdlID0gXCJtZXNzYWdlXCI7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/query-params.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/request-header.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/request-header.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   requestHeader: () => (/* binding */ requestHeader),\n/* harmony export */   requestHeaderWithCompression: () => (/* binding */ requestHeaderWithCompression)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./version.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./content-type.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * Creates headers for a Connect request.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeader(methodKind, useBinaryFormat, timeoutMs, userProvidedHeaders, setUserAgent) {\n    const result = new Headers(userProvidedHeaders !== null && userProvidedHeaders !== void 0 ? userProvidedHeaders : {});\n    if (timeoutMs !== undefined) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerTimeout, `${timeoutMs}`);\n    }\n    result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerContentType, methodKind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.Unary\n        ? useBinaryFormat\n            ? _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeUnaryProto\n            : _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeUnaryJson\n        : useBinaryFormat\n            ? _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeStreamProto\n            : _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeStreamJson);\n    result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerProtocolVersion, _version_js__WEBPACK_IMPORTED_MODULE_3__.protocolVersion);\n    if (setUserAgent) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUserAgent, \"connect-es/1.6.1\");\n    }\n    return result;\n}\n/**\n * Creates headers for a Connect request with compression.\n *\n * Note that we always set the Content-Encoding header for unary methods.\n * It is up to the caller to decide whether to apply compression - and remove\n * the header if compression is not used, for example because the payload is\n * too small to make compression effective.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeaderWithCompression(methodKind, useBinaryFormat, timeoutMs, userProvidedHeaders, acceptCompression, sendCompression, setUserAgent) {\n    const result = requestHeader(methodKind, useBinaryFormat, timeoutMs, userProvidedHeaders, setUserAgent);\n    if (sendCompression != null) {\n        const name = methodKind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.Unary\n            ? _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUnaryEncoding\n            : _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStreamEncoding;\n        result.set(name, sendCompression.name);\n    }\n    if (acceptCompression.length > 0) {\n        const name = methodKind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.MethodKind.Unary\n            ? _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUnaryAcceptEncoding\n            : _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStreamAcceptEncoding;\n        result.set(name, acceptCompression.map((c) => c.name).join(\",\"));\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3JlcXVlc3QtaGVhZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2dEO0FBQzJKO0FBQzVKO0FBQ2lGO0FBQ2hJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLHdIQUF3SDtBQUN4SDtBQUNBLG1CQUFtQixzREFBYSxLQUFLLFVBQVU7QUFDL0M7QUFDQSxlQUFlLDBEQUFpQixnQkFBZ0IsMERBQVU7QUFDMUQ7QUFDQSxjQUFjLG1FQUFxQjtBQUNuQyxjQUFjLGtFQUFvQjtBQUNsQztBQUNBLGNBQWMsb0VBQXNCO0FBQ3BDLGNBQWMsbUVBQXFCO0FBQ25DLGVBQWUsOERBQXFCLEVBQUUsd0RBQWU7QUFDckQ7QUFDQSxtQkFBbUIsd0RBQWU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxtQ0FBbUMsMERBQVU7QUFDN0MsY0FBYyw0REFBbUI7QUFDakMsY0FBYyw2REFBb0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDBEQUFVO0FBQzdDLGNBQWMsa0VBQXlCO0FBQ3ZDLGNBQWMsbUVBQTBCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxccHJvamVjdHNcXGF0c1xcbm9kZV9tb2R1bGVzXFxAY29ubmVjdHJwY1xcY29ubmVjdFxcZGlzdFxcZXNtXFxwcm90b2NvbC1jb25uZWN0XFxyZXF1ZXN0LWhlYWRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgTWV0aG9kS2luZCB9IGZyb20gXCJAYnVmYnVpbGQvcHJvdG9idWZcIjtcbmltcG9ydCB7IGhlYWRlckNvbnRlbnRUeXBlLCBoZWFkZXJTdHJlYW1BY2NlcHRFbmNvZGluZywgaGVhZGVyU3RyZWFtRW5jb2RpbmcsIGhlYWRlclVuYXJ5QWNjZXB0RW5jb2RpbmcsIGhlYWRlclVuYXJ5RW5jb2RpbmcsIGhlYWRlclRpbWVvdXQsIGhlYWRlclByb3RvY29sVmVyc2lvbiwgaGVhZGVyVXNlckFnZW50LCB9IGZyb20gXCIuL2hlYWRlcnMuanNcIjtcbmltcG9ydCB7IHByb3RvY29sVmVyc2lvbiB9IGZyb20gXCIuL3ZlcnNpb24uanNcIjtcbmltcG9ydCB7IGNvbnRlbnRUeXBlU3RyZWFtSnNvbiwgY29udGVudFR5cGVTdHJlYW1Qcm90bywgY29udGVudFR5cGVVbmFyeUpzb24sIGNvbnRlbnRUeXBlVW5hcnlQcm90bywgfSBmcm9tIFwiLi9jb250ZW50LXR5cGUuanNcIjtcbi8qKlxuICogQ3JlYXRlcyBoZWFkZXJzIGZvciBhIENvbm5lY3QgcmVxdWVzdC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlcXVlc3RIZWFkZXIobWV0aG9kS2luZCwgdXNlQmluYXJ5Rm9ybWF0LCB0aW1lb3V0TXMsIHVzZXJQcm92aWRlZEhlYWRlcnMsIHNldFVzZXJBZ2VudCkge1xuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBIZWFkZXJzKHVzZXJQcm92aWRlZEhlYWRlcnMgIT09IG51bGwgJiYgdXNlclByb3ZpZGVkSGVhZGVycyAhPT0gdm9pZCAwID8gdXNlclByb3ZpZGVkSGVhZGVycyA6IHt9KTtcbiAgICBpZiAodGltZW91dE1zICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmVzdWx0LnNldChoZWFkZXJUaW1lb3V0LCBgJHt0aW1lb3V0TXN9YCk7XG4gICAgfVxuICAgIHJlc3VsdC5zZXQoaGVhZGVyQ29udGVudFR5cGUsIG1ldGhvZEtpbmQgPT0gTWV0aG9kS2luZC5VbmFyeVxuICAgICAgICA/IHVzZUJpbmFyeUZvcm1hdFxuICAgICAgICAgICAgPyBjb250ZW50VHlwZVVuYXJ5UHJvdG9cbiAgICAgICAgICAgIDogY29udGVudFR5cGVVbmFyeUpzb25cbiAgICAgICAgOiB1c2VCaW5hcnlGb3JtYXRcbiAgICAgICAgICAgID8gY29udGVudFR5cGVTdHJlYW1Qcm90b1xuICAgICAgICAgICAgOiBjb250ZW50VHlwZVN0cmVhbUpzb24pO1xuICAgIHJlc3VsdC5zZXQoaGVhZGVyUHJvdG9jb2xWZXJzaW9uLCBwcm90b2NvbFZlcnNpb24pO1xuICAgIGlmIChzZXRVc2VyQWdlbnQpIHtcbiAgICAgICAgcmVzdWx0LnNldChoZWFkZXJVc2VyQWdlbnQsIFwiY29ubmVjdC1lcy8xLjYuMVwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogQ3JlYXRlcyBoZWFkZXJzIGZvciBhIENvbm5lY3QgcmVxdWVzdCB3aXRoIGNvbXByZXNzaW9uLlxuICpcbiAqIE5vdGUgdGhhdCB3ZSBhbHdheXMgc2V0IHRoZSBDb250ZW50LUVuY29kaW5nIGhlYWRlciBmb3IgdW5hcnkgbWV0aG9kcy5cbiAqIEl0IGlzIHVwIHRvIHRoZSBjYWxsZXIgdG8gZGVjaWRlIHdoZXRoZXIgdG8gYXBwbHkgY29tcHJlc3Npb24gLSBhbmQgcmVtb3ZlXG4gKiB0aGUgaGVhZGVyIGlmIGNvbXByZXNzaW9uIGlzIG5vdCB1c2VkLCBmb3IgZXhhbXBsZSBiZWNhdXNlIHRoZSBwYXlsb2FkIGlzXG4gKiB0b28gc21hbGwgdG8gbWFrZSBjb21wcmVzc2lvbiBlZmZlY3RpdmUuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXF1ZXN0SGVhZGVyV2l0aENvbXByZXNzaW9uKG1ldGhvZEtpbmQsIHVzZUJpbmFyeUZvcm1hdCwgdGltZW91dE1zLCB1c2VyUHJvdmlkZWRIZWFkZXJzLCBhY2NlcHRDb21wcmVzc2lvbiwgc2VuZENvbXByZXNzaW9uLCBzZXRVc2VyQWdlbnQpIHtcbiAgICBjb25zdCByZXN1bHQgPSByZXF1ZXN0SGVhZGVyKG1ldGhvZEtpbmQsIHVzZUJpbmFyeUZvcm1hdCwgdGltZW91dE1zLCB1c2VyUHJvdmlkZWRIZWFkZXJzLCBzZXRVc2VyQWdlbnQpO1xuICAgIGlmIChzZW5kQ29tcHJlc3Npb24gIT0gbnVsbCkge1xuICAgICAgICBjb25zdCBuYW1lID0gbWV0aG9kS2luZCA9PSBNZXRob2RLaW5kLlVuYXJ5XG4gICAgICAgICAgICA/IGhlYWRlclVuYXJ5RW5jb2RpbmdcbiAgICAgICAgICAgIDogaGVhZGVyU3RyZWFtRW5jb2Rpbmc7XG4gICAgICAgIHJlc3VsdC5zZXQobmFtZSwgc2VuZENvbXByZXNzaW9uLm5hbWUpO1xuICAgIH1cbiAgICBpZiAoYWNjZXB0Q29tcHJlc3Npb24ubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCBuYW1lID0gbWV0aG9kS2luZCA9PSBNZXRob2RLaW5kLlVuYXJ5XG4gICAgICAgICAgICA/IGhlYWRlclVuYXJ5QWNjZXB0RW5jb2RpbmdcbiAgICAgICAgICAgIDogaGVhZGVyU3RyZWFtQWNjZXB0RW5jb2Rpbmc7XG4gICAgICAgIHJlc3VsdC5zZXQobmFtZSwgYWNjZXB0Q29tcHJlc3Npb24ubWFwKChjKSA9PiBjLm5hbWUpLmpvaW4oXCIsXCIpKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/request-header.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trailerDemux: () => (/* binding */ trailerDemux),\n/* harmony export */   trailerMux: () => (/* binding */ trailerMux)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * In unary RPCs, Connect transports trailing metadata as response header\n * fields, prefixed with \"trailer-\".\n *\n * This function demuxes headers and trailers into two separate Headers\n * objects.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction trailerDemux(header) {\n    const h = new Headers(), t = new Headers();\n    header.forEach((value, key) => {\n        if (key.toLowerCase().startsWith(\"trailer-\")) {\n            t.append(key.substring(8), value);\n        }\n        else {\n            h.append(key, value);\n        }\n    });\n    return [h, t];\n}\n/**\n * In unary RPCs, Connect transports trailing metadata as response header\n * fields, prefixed with \"trailer-\".\n *\n * This function muxes a header and a trailer into a single Headers object.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction trailerMux(header, trailer) {\n    const h = new Headers(header);\n    trailer.forEach((value, key) => {\n        h.append(`trailer-${key}`, value);\n    });\n    return h;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3RyYWlsZXItbXV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSw0QkFBNEIsSUFBSTtBQUNoQyxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxhdHNcXG5vZGVfbW9kdWxlc1xcQGNvbm5lY3RycGNcXGNvbm5lY3RcXGRpc3RcXGVzbVxccHJvdG9jb2wtY29ubmVjdFxcdHJhaWxlci1tdXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogSW4gdW5hcnkgUlBDcywgQ29ubmVjdCB0cmFuc3BvcnRzIHRyYWlsaW5nIG1ldGFkYXRhIGFzIHJlc3BvbnNlIGhlYWRlclxuICogZmllbGRzLCBwcmVmaXhlZCB3aXRoIFwidHJhaWxlci1cIi5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGRlbXV4ZXMgaGVhZGVycyBhbmQgdHJhaWxlcnMgaW50byB0d28gc2VwYXJhdGUgSGVhZGVyc1xuICogb2JqZWN0cy5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRyYWlsZXJEZW11eChoZWFkZXIpIHtcbiAgICBjb25zdCBoID0gbmV3IEhlYWRlcnMoKSwgdCA9IG5ldyBIZWFkZXJzKCk7XG4gICAgaGVhZGVyLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgaWYgKGtleS50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgoXCJ0cmFpbGVyLVwiKSkge1xuICAgICAgICAgICAgdC5hcHBlbmQoa2V5LnN1YnN0cmluZyg4KSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaC5hcHBlbmQoa2V5LCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gW2gsIHRdO1xufVxuLyoqXG4gKiBJbiB1bmFyeSBSUENzLCBDb25uZWN0IHRyYW5zcG9ydHMgdHJhaWxpbmcgbWV0YWRhdGEgYXMgcmVzcG9uc2UgaGVhZGVyXG4gKiBmaWVsZHMsIHByZWZpeGVkIHdpdGggXCJ0cmFpbGVyLVwiLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gbXV4ZXMgYSBoZWFkZXIgYW5kIGEgdHJhaWxlciBpbnRvIGEgc2luZ2xlIEhlYWRlcnMgb2JqZWN0LlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdHJhaWxlck11eChoZWFkZXIsIHRyYWlsZXIpIHtcbiAgICBjb25zdCBoID0gbmV3IEhlYWRlcnMoaGVhZGVyKTtcbiAgICB0cmFpbGVyLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgaC5hcHBlbmQoYHRyYWlsZXItJHtrZXl9YCwgdmFsdWUpO1xuICAgIH0pO1xuICAgIHJldHVybiBoO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/transport.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/transport.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTransport: () => (/* binding */ createTransport)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _request_header_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request-header.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/request-header.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _validate_response_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./validate-response.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/validate-response.js\");\n/* harmony import */ var _trailer_mux_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./trailer-mux.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/trailer-mux.js\");\n/* harmony import */ var _error_json_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./error-json.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/error-json.js\");\n/* harmony import */ var _end_stream_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./end-stream.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/end-stream.js\");\n/* harmony import */ var _get_request_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./get-request.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/get-request.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _http_headers_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../http-headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/http-headers.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../protocol/async-iterable.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../protocol/create-method-url.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protocol/run-call.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js\");\n/* harmony import */ var _protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol/serialization.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _context_values_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../context-values.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/context-values.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a Transport for the Connect protocol.\n */\nfunction createTransport(opt) {\n    return {\n        async unary(service, method, signal, timeoutMs, header, message, contextValues) {\n            const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? opt.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return await (0,_protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__.runUnaryCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: false,\n                    service,\n                    method,\n                    url: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0,_request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeaderWithCompression)(method.kind, opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression, true),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_4__.createContextValues)(),\n                    message,\n                },\n                next: async (req) => {\n                    var _a;\n                    let requestBody = serialization\n                        .getI(opt.useBinaryFormat)\n                        .serialize(req.message);\n                    if (opt.sendCompression &&\n                        requestBody.byteLength > opt.compressMinBytes) {\n                        requestBody = await opt.sendCompression.compress(requestBody);\n                        req.header.set(_headers_js__WEBPACK_IMPORTED_MODULE_5__.headerUnaryEncoding, opt.sendCompression.name);\n                    }\n                    else {\n                        req.header.delete(_headers_js__WEBPACK_IMPORTED_MODULE_5__.headerUnaryEncoding);\n                    }\n                    const useGet = opt.useHttpGet === true &&\n                        method.idempotency === _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_6__.MethodIdempotency.NoSideEffects;\n                    let body;\n                    if (useGet) {\n                        req = (0,_get_request_js__WEBPACK_IMPORTED_MODULE_7__.transformConnectPostToGetRequest)(req, requestBody, opt.useBinaryFormat);\n                    }\n                    else {\n                        body = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.createAsyncIterable)([requestBody]);\n                    }\n                    const universalResponse = await opt.httpClient({\n                        url: req.url,\n                        method: (_a = req.init.method) !== null && _a !== void 0 ? _a : \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body,\n                    });\n                    const { compression, isUnaryError, unaryError } = (0,_validate_response_js__WEBPACK_IMPORTED_MODULE_9__.validateResponseWithCompression)(method.kind, opt.acceptCompression, opt.useBinaryFormat, universalResponse.status, universalResponse.header);\n                    const [header, trailer] = (0,_trailer_mux_js__WEBPACK_IMPORTED_MODULE_10__.trailerDemux)(universalResponse.header);\n                    let responseBody = await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.pipeTo)(universalResponse.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.sinkAllBytes)(opt.readMaxBytes, universalResponse.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_5__.headerUnaryContentLength)), { propagateDownStreamError: false });\n                    if (compression) {\n                        responseBody = await compression.decompress(responseBody, opt.readMaxBytes);\n                    }\n                    if (isUnaryError) {\n                        throw (0,_error_json_js__WEBPACK_IMPORTED_MODULE_11__.errorFromJsonBytes)(responseBody, (0,_http_headers_js__WEBPACK_IMPORTED_MODULE_12__.appendHeaders)(header, trailer), unaryError);\n                    }\n                    return {\n                        stream: false,\n                        service,\n                        method,\n                        header,\n                        message: serialization\n                            .getO(opt.useBinaryFormat)\n                            .parse(responseBody),\n                        trailer,\n                    };\n                },\n            });\n        },\n        async stream(service, method, signal, timeoutMs, header, input, contextValues) {\n            const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            const endStreamSerialization = (0,_end_stream_js__WEBPACK_IMPORTED_MODULE_13__.createEndStreamSerialization)(opt.jsonOptions);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? opt.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return (0,_protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__.runStreamingCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: true,\n                    service,\n                    method,\n                    url: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0,_request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeaderWithCompression)(method.kind, opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression, true),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_4__.createContextValues)(),\n                    message: input,\n                },\n                next: async (req) => {\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.pipe)(req.message, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformJoinEnvelopes)(), { propagateDownStreamError: true }),\n                    });\n                    const { compression } = (0,_validate_response_js__WEBPACK_IMPORTED_MODULE_9__.validateResponseWithCompression)(method.kind, opt.acceptCompression, opt.useBinaryFormat, uRes.status, uRes.header);\n                    const res = Object.assign(Object.assign({}, req), { header: uRes.header, trailer: new Headers(), message: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.pipe)(uRes.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_8__.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat), _end_stream_js__WEBPACK_IMPORTED_MODULE_13__.endStreamFlag, endStreamSerialization), function (iterable) {\n                            return __asyncGenerator(this, arguments, function* () {\n                                var _a, e_1, _b, _c;\n                                let endStreamReceived = false;\n                                try {\n                                    for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield __await(iterable_1.next()), _a = iterable_1_1.done, !_a; _d = true) {\n                                        _c = iterable_1_1.value;\n                                        _d = false;\n                                        const chunk = _c;\n                                        if (chunk.end) {\n                                            if (endStreamReceived) {\n                                                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_14__.ConnectError(\"protocol error: received extra EndStreamResponse\", _code_js__WEBPACK_IMPORTED_MODULE_15__.Code.InvalidArgument);\n                                            }\n                                            endStreamReceived = true;\n                                            if (chunk.value.error) {\n                                                const error = chunk.value.error;\n                                                uRes.header.forEach((value, key) => {\n                                                    error.metadata.append(key, value);\n                                                });\n                                                throw error;\n                                            }\n                                            chunk.value.metadata.forEach((value, key) => res.trailer.set(key, value));\n                                            continue;\n                                        }\n                                        if (endStreamReceived) {\n                                            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_14__.ConnectError(\"protocol error: received extra message after EndStreamResponse\", _code_js__WEBPACK_IMPORTED_MODULE_15__.Code.InvalidArgument);\n                                        }\n                                        yield yield __await(chunk.value);\n                                    }\n                                }\n                                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                                finally {\n                                    try {\n                                        if (!_d && !_a && (_b = iterable_1.return)) yield __await(_b.call(iterable_1));\n                                    }\n                                    finally { if (e_1) throw e_1.error; }\n                                }\n                                if (!endStreamReceived) {\n                                    throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_14__.ConnectError(\"protocol error: missing EndStreamResponse\", _code_js__WEBPACK_IMPORTED_MODULE_15__.Code.InvalidArgument);\n                                }\n                            });\n                        }, { propagateDownStreamError: true }) });\n                    return res;\n                },\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/transport.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/validate-response.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/validate-response.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateResponse: () => (/* binding */ validateResponse),\n/* harmony export */   validateResponseWithCompression: () => (/* binding */ validateResponseWithCompression)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _http_status_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./http-status.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/http-status.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./content-type.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/content-type.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n/**\n * Validates response status and header for the Connect protocol.\n * Throws a ConnectError if the header indicates an error, or if\n * the content type is unexpected, with the following exception:\n * For unary RPCs with an HTTP error status, this returns an error\n * derived from the HTTP status instead of throwing it, giving an\n * implementation a chance to parse a Connect error from the wire.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateResponse(methodKind, useBinaryFormat, status, headers) {\n    const mimeType = headers.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerContentType);\n    const parsedType = (0,_content_type_js__WEBPACK_IMPORTED_MODULE_1__.parseContentType)(mimeType);\n    if (status !== 200) {\n        const errorFromStatus = new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(`HTTP ${status}`, (0,_http_status_js__WEBPACK_IMPORTED_MODULE_3__.codeFromHttpStatus)(status), headers);\n        // If parsedType is defined and it is not binary, then this is a unary JSON response\n        if (methodKind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary && parsedType && !parsedType.binary) {\n            return { isUnaryError: true, unaryError: errorFromStatus };\n        }\n        throw errorFromStatus;\n    }\n    const allowedContentType = {\n        binary: useBinaryFormat,\n        stream: methodKind !== _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary,\n    };\n    if ((parsedType === null || parsedType === void 0 ? void 0 : parsedType.binary) !== allowedContentType.binary ||\n        parsedType.stream !== allowedContentType.stream) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(`unsupported content type ${mimeType}`, parsedType === undefined ? _code_js__WEBPACK_IMPORTED_MODULE_5__.Code.Unknown : _code_js__WEBPACK_IMPORTED_MODULE_5__.Code.Internal, headers);\n    }\n    return { isUnaryError: false };\n}\n/**\n * Validates response status and header for the Connect protocol.\n * This function is identical to validateResponse(), but also verifies\n * that a given encoding header is acceptable.\n *\n * @private\n */\nfunction validateResponseWithCompression(methodKind, acceptCompression, useBinaryFormat, status, headers) {\n    let compression;\n    const encoding = headers.get(methodKind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary ? _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUnaryEncoding : _headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStreamEncoding);\n    if (encoding != null && encoding.toLowerCase() !== \"identity\") {\n        compression = acceptCompression.find((c) => c.name === encoding);\n        if (!compression) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(`unsupported response encoding \"${encoding}\"`, _code_js__WEBPACK_IMPORTED_MODULE_5__.Code.Internal, headers);\n        }\n    }\n    return Object.assign({ compression }, validateResponse(methodKind, useBinaryFormat, status, headers));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3ZhbGlkYXRlLXJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZ0Q7QUFDZDtBQUNvQjtBQUNIO0FBQ0U7QUFDd0M7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGlDQUFpQywwREFBaUI7QUFDbEQsdUJBQXVCLGtFQUFnQjtBQUN2QztBQUNBLG9DQUFvQywyREFBWSxTQUFTLE9BQU8sR0FBRyxtRUFBa0I7QUFDckY7QUFDQSwwQkFBMEIsMERBQVU7QUFDcEMscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsMERBQVU7QUFDekM7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDJEQUFZLDZCQUE2QixTQUFTLDhCQUE4QiwwQ0FBSSxXQUFXLDBDQUFJO0FBQ3JIO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsK0NBQStDLDBEQUFVLFNBQVMsNERBQW1CLEdBQUcsNkRBQW9CO0FBQzVHO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyREFBWSxtQ0FBbUMsU0FBUyxJQUFJLDBDQUFJO0FBQ3RGO0FBQ0E7QUFDQSwyQkFBMkIsYUFBYTtBQUN4QyIsInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxhdHNcXG5vZGVfbW9kdWxlc1xcQGNvbm5lY3RycGNcXGNvbm5lY3RcXGRpc3RcXGVzbVxccHJvdG9jb2wtY29ubmVjdFxcdmFsaWRhdGUtcmVzcG9uc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IE1ldGhvZEtpbmQgfSBmcm9tIFwiQGJ1ZmJ1aWxkL3Byb3RvYnVmXCI7XG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbmltcG9ydCB7IGNvZGVGcm9tSHR0cFN0YXR1cyB9IGZyb20gXCIuL2h0dHAtc3RhdHVzLmpzXCI7XG5pbXBvcnQgeyBDb25uZWN0RXJyb3IgfSBmcm9tIFwiLi4vY29ubmVjdC1lcnJvci5qc1wiO1xuaW1wb3J0IHsgcGFyc2VDb250ZW50VHlwZSB9IGZyb20gXCIuL2NvbnRlbnQtdHlwZS5qc1wiO1xuaW1wb3J0IHsgaGVhZGVyQ29udGVudFR5cGUsIGhlYWRlclN0cmVhbUVuY29kaW5nLCBoZWFkZXJVbmFyeUVuY29kaW5nLCB9IGZyb20gXCIuL2hlYWRlcnMuanNcIjtcbi8qKlxuICogVmFsaWRhdGVzIHJlc3BvbnNlIHN0YXR1cyBhbmQgaGVhZGVyIGZvciB0aGUgQ29ubmVjdCBwcm90b2NvbC5cbiAqIFRocm93cyBhIENvbm5lY3RFcnJvciBpZiB0aGUgaGVhZGVyIGluZGljYXRlcyBhbiBlcnJvciwgb3IgaWZcbiAqIHRoZSBjb250ZW50IHR5cGUgaXMgdW5leHBlY3RlZCwgd2l0aCB0aGUgZm9sbG93aW5nIGV4Y2VwdGlvbjpcbiAqIEZvciB1bmFyeSBSUENzIHdpdGggYW4gSFRUUCBlcnJvciBzdGF0dXMsIHRoaXMgcmV0dXJucyBhbiBlcnJvclxuICogZGVyaXZlZCBmcm9tIHRoZSBIVFRQIHN0YXR1cyBpbnN0ZWFkIG9mIHRocm93aW5nIGl0LCBnaXZpbmcgYW5cbiAqIGltcGxlbWVudGF0aW9uIGEgY2hhbmNlIHRvIHBhcnNlIGEgQ29ubmVjdCBlcnJvciBmcm9tIHRoZSB3aXJlLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVSZXNwb25zZShtZXRob2RLaW5kLCB1c2VCaW5hcnlGb3JtYXQsIHN0YXR1cywgaGVhZGVycykge1xuICAgIGNvbnN0IG1pbWVUeXBlID0gaGVhZGVycy5nZXQoaGVhZGVyQ29udGVudFR5cGUpO1xuICAgIGNvbnN0IHBhcnNlZFR5cGUgPSBwYXJzZUNvbnRlbnRUeXBlKG1pbWVUeXBlKTtcbiAgICBpZiAoc3RhdHVzICE9PSAyMDApIHtcbiAgICAgICAgY29uc3QgZXJyb3JGcm9tU3RhdHVzID0gbmV3IENvbm5lY3RFcnJvcihgSFRUUCAke3N0YXR1c31gLCBjb2RlRnJvbUh0dHBTdGF0dXMoc3RhdHVzKSwgaGVhZGVycyk7XG4gICAgICAgIC8vIElmIHBhcnNlZFR5cGUgaXMgZGVmaW5lZCBhbmQgaXQgaXMgbm90IGJpbmFyeSwgdGhlbiB0aGlzIGlzIGEgdW5hcnkgSlNPTiByZXNwb25zZVxuICAgICAgICBpZiAobWV0aG9kS2luZCA9PSBNZXRob2RLaW5kLlVuYXJ5ICYmIHBhcnNlZFR5cGUgJiYgIXBhcnNlZFR5cGUuYmluYXJ5KSB7XG4gICAgICAgICAgICByZXR1cm4geyBpc1VuYXJ5RXJyb3I6IHRydWUsIHVuYXJ5RXJyb3I6IGVycm9yRnJvbVN0YXR1cyB9O1xuICAgICAgICB9XG4gICAgICAgIHRocm93IGVycm9yRnJvbVN0YXR1cztcbiAgICB9XG4gICAgY29uc3QgYWxsb3dlZENvbnRlbnRUeXBlID0ge1xuICAgICAgICBiaW5hcnk6IHVzZUJpbmFyeUZvcm1hdCxcbiAgICAgICAgc3RyZWFtOiBtZXRob2RLaW5kICE9PSBNZXRob2RLaW5kLlVuYXJ5LFxuICAgIH07XG4gICAgaWYgKChwYXJzZWRUeXBlID09PSBudWxsIHx8IHBhcnNlZFR5cGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHBhcnNlZFR5cGUuYmluYXJ5KSAhPT0gYWxsb3dlZENvbnRlbnRUeXBlLmJpbmFyeSB8fFxuICAgICAgICBwYXJzZWRUeXBlLnN0cmVhbSAhPT0gYWxsb3dlZENvbnRlbnRUeXBlLnN0cmVhbSkge1xuICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKGB1bnN1cHBvcnRlZCBjb250ZW50IHR5cGUgJHttaW1lVHlwZX1gLCBwYXJzZWRUeXBlID09PSB1bmRlZmluZWQgPyBDb2RlLlVua25vd24gOiBDb2RlLkludGVybmFsLCBoZWFkZXJzKTtcbiAgICB9XG4gICAgcmV0dXJuIHsgaXNVbmFyeUVycm9yOiBmYWxzZSB9O1xufVxuLyoqXG4gKiBWYWxpZGF0ZXMgcmVzcG9uc2Ugc3RhdHVzIGFuZCBoZWFkZXIgZm9yIHRoZSBDb25uZWN0IHByb3RvY29sLlxuICogVGhpcyBmdW5jdGlvbiBpcyBpZGVudGljYWwgdG8gdmFsaWRhdGVSZXNwb25zZSgpLCBidXQgYWxzbyB2ZXJpZmllc1xuICogdGhhdCBhIGdpdmVuIGVuY29kaW5nIGhlYWRlciBpcyBhY2NlcHRhYmxlLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZVJlc3BvbnNlV2l0aENvbXByZXNzaW9uKG1ldGhvZEtpbmQsIGFjY2VwdENvbXByZXNzaW9uLCB1c2VCaW5hcnlGb3JtYXQsIHN0YXR1cywgaGVhZGVycykge1xuICAgIGxldCBjb21wcmVzc2lvbjtcbiAgICBjb25zdCBlbmNvZGluZyA9IGhlYWRlcnMuZ2V0KG1ldGhvZEtpbmQgPT0gTWV0aG9kS2luZC5VbmFyeSA/IGhlYWRlclVuYXJ5RW5jb2RpbmcgOiBoZWFkZXJTdHJlYW1FbmNvZGluZyk7XG4gICAgaWYgKGVuY29kaW5nICE9IG51bGwgJiYgZW5jb2RpbmcudG9Mb3dlckNhc2UoKSAhPT0gXCJpZGVudGl0eVwiKSB7XG4gICAgICAgIGNvbXByZXNzaW9uID0gYWNjZXB0Q29tcHJlc3Npb24uZmluZCgoYykgPT4gYy5uYW1lID09PSBlbmNvZGluZyk7XG4gICAgICAgIGlmICghY29tcHJlc3Npb24pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IoYHVuc3VwcG9ydGVkIHJlc3BvbnNlIGVuY29kaW5nIFwiJHtlbmNvZGluZ31cImAsIENvZGUuSW50ZXJuYWwsIGhlYWRlcnMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHsgY29tcHJlc3Npb24gfSwgdmFsaWRhdGVSZXNwb25zZShtZXRob2RLaW5kLCB1c2VCaW5hcnlGb3JtYXQsIHN0YXR1cywgaGVhZGVycykpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/validate-response.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   protocolVersion: () => (/* binding */ protocolVersion),\n/* harmony export */   requireProtocolVersionHeader: () => (/* binding */ requireProtocolVersionHeader),\n/* harmony export */   requireProtocolVersionParam: () => (/* binding */ requireProtocolVersionParam)\n/* harmony export */ });\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/headers.js\");\n/* harmony import */ var _query_params_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./query-params.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/query-params.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * The only know value for the header Connect-Protocol-Version.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst protocolVersion = \"1\";\n/**\n * Requires the Connect-Protocol-Version header to be present with the expected\n * value. Raises a ConnectError with Code.InvalidArgument otherwise.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requireProtocolVersionHeader(requestHeader) {\n    const v = requestHeader.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerProtocolVersion);\n    if (v === null) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`missing required header: set ${_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerProtocolVersion} to \"${protocolVersion}\"`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.InvalidArgument);\n    }\n    else if (v !== protocolVersion) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`${_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerProtocolVersion} must be \"${protocolVersion}\": got \"${v}\"`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.InvalidArgument);\n    }\n}\n/**\n * Requires the connect query parameter to be present with the expected value.\n * Raises a ConnectError with Code.InvalidArgument otherwise.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requireProtocolVersionParam(queryParams) {\n    const v = queryParams.get(_query_params_js__WEBPACK_IMPORTED_MODULE_3__.paramConnectVersion);\n    if (v === null) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`missing required parameter: set ${_query_params_js__WEBPACK_IMPORTED_MODULE_3__.paramConnectVersion} to \"v${protocolVersion}\"`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.InvalidArgument);\n    }\n    else if (v !== `v${protocolVersion}`) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`${_query_params_js__WEBPACK_IMPORTED_MODULE_3__.paramConnectVersion} must be \"v${protocolVersion}\": got \"${v}\"`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.InvalidArgument);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1jb25uZWN0L3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3FEO0FBQ0c7QUFDTDtBQUNqQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGdDQUFnQyw4REFBcUI7QUFDckQ7QUFDQSxrQkFBa0IsMkRBQVksaUNBQWlDLDhEQUFxQixFQUFFLE1BQU0sZ0JBQWdCLElBQUksMENBQUk7QUFDcEg7QUFDQTtBQUNBLGtCQUFrQiwyREFBWSxJQUFJLDhEQUFxQixFQUFFLFdBQVcsZ0JBQWdCLFVBQVUsRUFBRSxJQUFJLDBDQUFJO0FBQ3hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDhCQUE4QixpRUFBbUI7QUFDakQ7QUFDQSxrQkFBa0IsMkRBQVksb0NBQW9DLGlFQUFtQixFQUFFLE9BQU8sZ0JBQWdCLElBQUksMENBQUk7QUFDdEg7QUFDQSx1QkFBdUIsZ0JBQWdCO0FBQ3ZDLGtCQUFrQiwyREFBWSxJQUFJLGlFQUFtQixFQUFFLFlBQVksZ0JBQWdCLFVBQVUsRUFBRSxJQUFJLDBDQUFJO0FBQ3ZHO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sLWNvbm5lY3RcXHZlcnNpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IGhlYWRlclByb3RvY29sVmVyc2lvbiB9IGZyb20gXCIuL2hlYWRlcnMuanNcIjtcbmltcG9ydCB7IHBhcmFtQ29ubmVjdFZlcnNpb24gfSBmcm9tIFwiLi9xdWVyeS1wYXJhbXMuanNcIjtcbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuLi9jb25uZWN0LWVycm9yLmpzXCI7XG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbi8qKlxuICogVGhlIG9ubHkga25vdyB2YWx1ZSBmb3IgdGhlIGhlYWRlciBDb25uZWN0LVByb3RvY29sLVZlcnNpb24uXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBwcm90b2NvbFZlcnNpb24gPSBcIjFcIjtcbi8qKlxuICogUmVxdWlyZXMgdGhlIENvbm5lY3QtUHJvdG9jb2wtVmVyc2lvbiBoZWFkZXIgdG8gYmUgcHJlc2VudCB3aXRoIHRoZSBleHBlY3RlZFxuICogdmFsdWUuIFJhaXNlcyBhIENvbm5lY3RFcnJvciB3aXRoIENvZGUuSW52YWxpZEFyZ3VtZW50IG90aGVyd2lzZS5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlcXVpcmVQcm90b2NvbFZlcnNpb25IZWFkZXIocmVxdWVzdEhlYWRlcikge1xuICAgIGNvbnN0IHYgPSByZXF1ZXN0SGVhZGVyLmdldChoZWFkZXJQcm90b2NvbFZlcnNpb24pO1xuICAgIGlmICh2ID09PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IoYG1pc3NpbmcgcmVxdWlyZWQgaGVhZGVyOiBzZXQgJHtoZWFkZXJQcm90b2NvbFZlcnNpb259IHRvIFwiJHtwcm90b2NvbFZlcnNpb259XCJgLCBDb2RlLkludmFsaWRBcmd1bWVudCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHYgIT09IHByb3RvY29sVmVyc2lvbikge1xuICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKGAke2hlYWRlclByb3RvY29sVmVyc2lvbn0gbXVzdCBiZSBcIiR7cHJvdG9jb2xWZXJzaW9ufVwiOiBnb3QgXCIke3Z9XCJgLCBDb2RlLkludmFsaWRBcmd1bWVudCk7XG4gICAgfVxufVxuLyoqXG4gKiBSZXF1aXJlcyB0aGUgY29ubmVjdCBxdWVyeSBwYXJhbWV0ZXIgdG8gYmUgcHJlc2VudCB3aXRoIHRoZSBleHBlY3RlZCB2YWx1ZS5cbiAqIFJhaXNlcyBhIENvbm5lY3RFcnJvciB3aXRoIENvZGUuSW52YWxpZEFyZ3VtZW50IG90aGVyd2lzZS5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlcXVpcmVQcm90b2NvbFZlcnNpb25QYXJhbShxdWVyeVBhcmFtcykge1xuICAgIGNvbnN0IHYgPSBxdWVyeVBhcmFtcy5nZXQocGFyYW1Db25uZWN0VmVyc2lvbik7XG4gICAgaWYgKHYgPT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgbWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXI6IHNldCAke3BhcmFtQ29ubmVjdFZlcnNpb259IHRvIFwidiR7cHJvdG9jb2xWZXJzaW9ufVwiYCwgQ29kZS5JbnZhbGlkQXJndW1lbnQpO1xuICAgIH1cbiAgICBlbHNlIGlmICh2ICE9PSBgdiR7cHJvdG9jb2xWZXJzaW9ufWApIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgJHtwYXJhbUNvbm5lY3RWZXJzaW9ufSBtdXN0IGJlIFwidiR7cHJvdG9jb2xWZXJzaW9ufVwiOiBnb3QgXCIke3Z9XCJgLCBDb2RlLkludmFsaWRBcmd1bWVudCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/version.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/content-type.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/content-type.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTypeJson: () => (/* binding */ contentTypeJson),\n/* harmony export */   contentTypeProto: () => (/* binding */ contentTypeProto),\n/* harmony export */   contentTypeRegExp: () => (/* binding */ contentTypeRegExp),\n/* harmony export */   parseContentType: () => (/* binding */ parseContentType)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Regular Expression that matches any valid gRPC-web Content-Type header value.\n * Note that this includes application/grpc-web-text with the additional base64\n * encoding.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst contentTypeRegExp = /^application\\/grpc-web(-text)?(?:\\+(?:(json)(?:; ?charset=utf-?8)?|proto))?$/i;\nconst contentTypeProto = \"application/grpc-web+proto\";\nconst contentTypeJson = \"application/grpc-web+json\";\n/**\n * Parse a gRPC-web Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseContentType(contentType) {\n    const match = contentType === null || contentType === void 0 ? void 0 : contentType.match(contentTypeRegExp);\n    if (!match) {\n        return undefined;\n    }\n    const text = !!match[1];\n    const binary = !match[2];\n    return { text, binary };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi9jb250ZW50LXR5cGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0RUFBNEU7QUFDNUU7QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYiIsInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxhdHNcXG5vZGVfbW9kdWxlc1xcQGNvbm5lY3RycGNcXGNvbm5lY3RcXGRpc3RcXGVzbVxccHJvdG9jb2wtZ3JwYy13ZWJcXGNvbnRlbnQtdHlwZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBSZWd1bGFyIEV4cHJlc3Npb24gdGhhdCBtYXRjaGVzIGFueSB2YWxpZCBnUlBDLXdlYiBDb250ZW50LVR5cGUgaGVhZGVyIHZhbHVlLlxuICogTm90ZSB0aGF0IHRoaXMgaW5jbHVkZXMgYXBwbGljYXRpb24vZ3JwYy13ZWItdGV4dCB3aXRoIHRoZSBhZGRpdGlvbmFsIGJhc2U2NFxuICogZW5jb2RpbmcuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZVJlZ0V4cCA9IC9eYXBwbGljYXRpb25cXC9ncnBjLXdlYigtdGV4dCk/KD86XFwrKD86KGpzb24pKD86OyA/Y2hhcnNldD11dGYtPzgpP3xwcm90bykpPyQvaTtcbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZVByb3RvID0gXCJhcHBsaWNhdGlvbi9ncnBjLXdlYitwcm90b1wiO1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlSnNvbiA9IFwiYXBwbGljYXRpb24vZ3JwYy13ZWIranNvblwiO1xuLyoqXG4gKiBQYXJzZSBhIGdSUEMtd2ViIENvbnRlbnQtVHlwZSBoZWFkZXIgdmFsdWUuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNvbnRlbnRUeXBlKGNvbnRlbnRUeXBlKSB7XG4gICAgY29uc3QgbWF0Y2ggPSBjb250ZW50VHlwZSA9PT0gbnVsbCB8fCBjb250ZW50VHlwZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29udGVudFR5cGUubWF0Y2goY29udGVudFR5cGVSZWdFeHApO1xuICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgY29uc3QgdGV4dCA9ICEhbWF0Y2hbMV07XG4gICAgY29uc3QgYmluYXJ5ID0gIW1hdGNoWzJdO1xuICAgIHJldHVybiB7IHRleHQsIGJpbmFyeSB9O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/content-type.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/handler-factory.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/handler-factory.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHandlerFactory: () => (/* binding */ createHandlerFactory)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _implementation_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../implementation.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/implementation.js\");\n/* harmony import */ var _trailer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./trailer.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/trailer.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./content-type.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/content-type.js\");\n/* harmony import */ var _protocol_grpc_parse_timeout_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../protocol-grpc/parse-timeout.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/parse-timeout.js\");\n/* harmony import */ var _protocol_grpc_trailer_status_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../protocol-grpc/trailer-status.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../protocol/async-iterable.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _protocol_compression_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../protocol/compression.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\");\n/* harmony import */ var _protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../protocol/content-type-matcher.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js\");\n/* harmony import */ var _protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../protocol/create-method-url.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../protocol/invoke-implementation.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js\");\n/* harmony import */ var _protocol_serialization_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocol/serialization.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol/universal-handler.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js\");\n/* harmony import */ var _protocol_universal_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../protocol/universal.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst protocolName = \"grpc-web\";\nconst methodPost = \"POST\";\n/**\n * Create a factory that creates gRPC-web handlers.\n */\nfunction createHandlerFactory(options) {\n    const opt = (0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.validateUniversalHandlerOptions)(options);\n    const trailerSerialization = (0,_trailer_js__WEBPACK_IMPORTED_MODULE_1__.createTrailerSerialization)();\n    function fact(spec) {\n        const h = createHandler(opt, trailerSerialization, spec);\n        return Object.assign(h, {\n            protocolNames: [protocolName],\n            allowedMethods: [methodPost],\n            supportedContentType: (0,_protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeMatcher)(_content_type_js__WEBPACK_IMPORTED_MODULE_3__.contentTypeRegExp),\n            requestPath: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_4__.createMethodUrl)(\"/\", spec.service, spec.method),\n            service: spec.service,\n            method: spec.method,\n        });\n    }\n    fact.protocolName = protocolName;\n    return fact;\n}\nfunction createHandler(opt, trailerSerialization, spec) {\n    const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_5__.createMethodSerializationLookup)(spec.method, opt.binaryOptions, opt.jsonOptions, opt);\n    return async function handle(req) {\n        (0,_protocol_universal_js__WEBPACK_IMPORTED_MODULE_6__.assertByteStreamRequest)(req);\n        const type = (0,_content_type_js__WEBPACK_IMPORTED_MODULE_3__.parseContentType)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerContentType));\n        if (type == undefined || type.text) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_6__.uResponseUnsupportedMediaType;\n        }\n        if (req.method !== methodPost) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_6__.uResponseMethodNotAllowed;\n        }\n        const timeout = (0,_protocol_grpc_parse_timeout_js__WEBPACK_IMPORTED_MODULE_8__.parseTimeout)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerTimeout), opt.maxTimeoutMs);\n        const context = (0,_implementation_js__WEBPACK_IMPORTED_MODULE_9__.createHandlerContext)(Object.assign(Object.assign({}, spec), { requestMethod: req.method, protocolName, timeoutMs: timeout.timeoutMs, shutdownSignal: opt.shutdownSignal, requestSignal: req.signal, requestHeader: req.header, url: req.url, responseHeader: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerContentType]: type.binary ? _content_type_js__WEBPACK_IMPORTED_MODULE_3__.contentTypeProto : _content_type_js__WEBPACK_IMPORTED_MODULE_3__.contentTypeJson,\n            }, responseTrailer: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerGrpcStatus]: _protocol_grpc_trailer_status_js__WEBPACK_IMPORTED_MODULE_10__.grpcStatusOk,\n            }, contextValues: req.contextValues }));\n        const compression = (0,_protocol_compression_js__WEBPACK_IMPORTED_MODULE_11__.compressionNegotiate)(opt.acceptCompression, req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerEncoding), req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerAcceptEncoding), _headers_js__WEBPACK_IMPORTED_MODULE_7__.headerAcceptEncoding);\n        if (compression.response) {\n            context.responseHeader.set(_headers_js__WEBPACK_IMPORTED_MODULE_7__.headerEncoding, compression.response.name);\n        }\n        // We split the pipeline into two parts: The request iterator, and the\n        // response iterator. We do this because the request iterator is responsible\n        // for parsing the request body, and we don't want write errors of the response\n        // iterator to affect the request iterator.\n        const inputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.pipe)(req.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformPrepend)(() => {\n            // raise compression error to serialize it as a trailer status\n            if (compression.error)\n                throw compression.error;\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error)\n                throw timeout.error;\n            return undefined;\n        }), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformDecompressEnvelope)(compression.request, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformParseEnvelope)(serialization.getI(type.binary), _trailer_js__WEBPACK_IMPORTED_MODULE_1__.trailerFlag));\n        const it = (0,_protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_13__.transformInvokeImplementation)(spec, context, opt.interceptors)(inputIt)[Symbol.asyncIterator]();\n        const outputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.pipe)(\n        // We wrap the iterator in an async iterator to ensure that the\n        // abort signal is aborted when the iterator is done.\n        {\n            [Symbol.asyncIterator]() {\n                return {\n                    next: () => it.next(),\n                    throw: (e) => {\n                        var _a, _b;\n                        context.abort(e);\n                        return (_b = (_a = it.throw) === null || _a === void 0 ? void 0 : _a.call(it, e)) !== null && _b !== void 0 ? _b : Promise.reject({ done: true });\n                    },\n                    return: (v) => {\n                        var _a, _b;\n                        context.abort();\n                        return ((_b = (_a = it.return) === null || _a === void 0 ? void 0 : _a.call(it, v)) !== null && _b !== void 0 ? _b : Promise.resolve({ done: true, value: v }));\n                    },\n                };\n            },\n        }, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformSerializeEnvelope)(serialization.getO(type.binary)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformCatchFinally)((e) => {\n            context.abort();\n            if (e instanceof _connect_error_js__WEBPACK_IMPORTED_MODULE_14__.ConnectError) {\n                (0,_protocol_grpc_trailer_status_js__WEBPACK_IMPORTED_MODULE_10__.setTrailerStatus)(context.responseTrailer, e);\n            }\n            else if (e !== undefined) {\n                (0,_protocol_grpc_trailer_status_js__WEBPACK_IMPORTED_MODULE_10__.setTrailerStatus)(context.responseTrailer, new _connect_error_js__WEBPACK_IMPORTED_MODULE_14__.ConnectError(\"internal error\", _code_js__WEBPACK_IMPORTED_MODULE_15__.Code.Internal, undefined, undefined, e));\n            }\n            return {\n                flags: _trailer_js__WEBPACK_IMPORTED_MODULE_1__.trailerFlag,\n                data: trailerSerialization.serialize(context.responseTrailer),\n            };\n        }), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformCompressEnvelope)(compression.response, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.transformJoinEnvelopes)(), { propagateDownStreamError: true });\n        return Object.assign(Object.assign({}, _protocol_universal_js__WEBPACK_IMPORTED_MODULE_6__.uResponseOk), { \n            // We wait for the first response body bytes before resolving, so that\n            // implementations have a chance to add headers before an adapter commits\n            // them to the wire.\n            body: await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_12__.untilFirst)(outputIt), header: context.responseHeader });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi9oYW5kbGVyLWZhY3RvcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNtRDtBQUNqQjtBQUMwQjtBQUNXO0FBQ2tEO0FBQ2I7QUFDM0M7QUFDb0I7QUFDa0w7QUFDck07QUFDTztBQUNOO0FBQ2tCO0FBQ047QUFDSTtBQUN3RDtBQUMzSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxnQkFBZ0IsK0ZBQStCO0FBQy9DLGlDQUFpQyx1RUFBMEI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxxRkFBa0IsQ0FBQywrREFBaUI7QUFDdEUseUJBQXlCLCtFQUFlO0FBQ3hDO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiwyRkFBK0I7QUFDekQ7QUFDQSxRQUFRLCtFQUF1QjtBQUMvQixxQkFBcUIsa0VBQWdCLGdCQUFnQiwwREFBaUI7QUFDdEU7QUFDQSxtQkFBbUIsaUZBQTZCO0FBQ2hEO0FBQ0E7QUFDQSxtQkFBbUIsNkVBQXlCO0FBQzVDO0FBQ0Esd0JBQXdCLDZFQUFZLGdCQUFnQixzREFBYTtBQUNqRSx3QkFBd0Isd0VBQW9CLCtCQUErQixXQUFXO0FBQ3RGLGlCQUFpQiwwREFBaUIsaUJBQWlCLDhEQUFnQixHQUFHLDZEQUFlO0FBQ3JGLGFBQWE7QUFDYixpQkFBaUIseURBQWdCLEdBQUcsMkVBQVk7QUFDaEQsYUFBYSxvQ0FBb0M7QUFDakQsNEJBQTRCLCtFQUFvQix1Q0FBdUMsdURBQWMsa0JBQWtCLDZEQUFvQixHQUFHLDZEQUFvQjtBQUNsSztBQUNBLHVDQUF1Qyx1REFBYztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGtFQUFJLFdBQVcsOEVBQWdCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxHQUFHLG9GQUFzQixvQkFBb0IseUZBQTJCLHlDQUF5QyxvRkFBc0Isa0NBQWtDLG9EQUFXO0FBQzdMLG1CQUFtQixrR0FBNkI7QUFDaEQseUJBQXlCLGtFQUFJO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRKQUE0SixZQUFZO0FBQ3hLLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSwrSkFBK0osc0JBQXNCO0FBQ3JMLHFCQUFxQjtBQUNyQjtBQUNBLGFBQWE7QUFDYixTQUFTLEVBQUUsd0ZBQTBCLG1DQUFtQyxtRkFBcUI7QUFDN0Y7QUFDQSw2QkFBNkIsNERBQVk7QUFDekMsZ0JBQWdCLG1GQUFnQjtBQUNoQztBQUNBO0FBQ0EsZ0JBQWdCLG1GQUFnQiw4QkFBOEIsNERBQVksbUJBQW1CLDJDQUFJO0FBQ2pHO0FBQ0E7QUFDQSx1QkFBdUIsb0RBQVc7QUFDbEM7QUFDQTtBQUNBLFNBQVMsR0FBRyx1RkFBeUIsOENBQThDLG9GQUFzQixNQUFNLGdDQUFnQztBQUMvSSw2Q0FBNkMsRUFBRSwrREFBVztBQUMxRDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isd0VBQVUsNENBQTRDO0FBQzlFO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sLWdycGMtd2ViXFxoYW5kbGVyLWZhY3RvcnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuLi9jb25uZWN0LWVycm9yLmpzXCI7XG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbmltcG9ydCB7IGNyZWF0ZUhhbmRsZXJDb250ZXh0IH0gZnJvbSBcIi4uL2ltcGxlbWVudGF0aW9uLmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVUcmFpbGVyU2VyaWFsaXphdGlvbiwgdHJhaWxlckZsYWcgfSBmcm9tIFwiLi90cmFpbGVyLmpzXCI7XG5pbXBvcnQgeyBoZWFkZXJBY2NlcHRFbmNvZGluZywgaGVhZGVyQ29udGVudFR5cGUsIGhlYWRlckVuY29kaW5nLCBoZWFkZXJHcnBjU3RhdHVzLCBoZWFkZXJUaW1lb3V0LCB9IGZyb20gXCIuL2hlYWRlcnMuanNcIjtcbmltcG9ydCB7IGNvbnRlbnRUeXBlSnNvbiwgY29udGVudFR5cGVQcm90bywgY29udGVudFR5cGVSZWdFeHAsIHBhcnNlQ29udGVudFR5cGUsIH0gZnJvbSBcIi4vY29udGVudC10eXBlLmpzXCI7XG5pbXBvcnQgeyBwYXJzZVRpbWVvdXQgfSBmcm9tIFwiLi4vcHJvdG9jb2wtZ3JwYy9wYXJzZS10aW1lb3V0LmpzXCI7XG5pbXBvcnQgeyBncnBjU3RhdHVzT2ssIHNldFRyYWlsZXJTdGF0dXMsIH0gZnJvbSBcIi4uL3Byb3RvY29sLWdycGMvdHJhaWxlci1zdGF0dXMuanNcIjtcbmltcG9ydCB7IHBpcGUsIHRyYW5zZm9ybVByZXBlbmQsIHRyYW5zZm9ybVNwbGl0RW52ZWxvcGUsIHRyYW5zZm9ybURlY29tcHJlc3NFbnZlbG9wZSwgdHJhbnNmb3JtUGFyc2VFbnZlbG9wZSwgdHJhbnNmb3JtU2VyaWFsaXplRW52ZWxvcGUsIHRyYW5zZm9ybUNhdGNoRmluYWxseSwgdHJhbnNmb3JtQ29tcHJlc3NFbnZlbG9wZSwgdHJhbnNmb3JtSm9pbkVudmVsb3BlcywgdW50aWxGaXJzdCwgfSBmcm9tIFwiLi4vcHJvdG9jb2wvYXN5bmMtaXRlcmFibGUuanNcIjtcbmltcG9ydCB7IGNvbXByZXNzaW9uTmVnb3RpYXRlIH0gZnJvbSBcIi4uL3Byb3RvY29sL2NvbXByZXNzaW9uLmpzXCI7XG5pbXBvcnQgeyBjb250ZW50VHlwZU1hdGNoZXIgfSBmcm9tIFwiLi4vcHJvdG9jb2wvY29udGVudC10eXBlLW1hdGNoZXIuanNcIjtcbmltcG9ydCB7IGNyZWF0ZU1ldGhvZFVybCB9IGZyb20gXCIuLi9wcm90b2NvbC9jcmVhdGUtbWV0aG9kLXVybC5qc1wiO1xuaW1wb3J0IHsgdHJhbnNmb3JtSW52b2tlSW1wbGVtZW50YXRpb24gfSBmcm9tIFwiLi4vcHJvdG9jb2wvaW52b2tlLWltcGxlbWVudGF0aW9uLmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVNZXRob2RTZXJpYWxpemF0aW9uTG9va3VwIH0gZnJvbSBcIi4uL3Byb3RvY29sL3NlcmlhbGl6YXRpb24uanNcIjtcbmltcG9ydCB7IHZhbGlkYXRlVW5pdmVyc2FsSGFuZGxlck9wdGlvbnMgfSBmcm9tIFwiLi4vcHJvdG9jb2wvdW5pdmVyc2FsLWhhbmRsZXIuanNcIjtcbmltcG9ydCB7IGFzc2VydEJ5dGVTdHJlYW1SZXF1ZXN0LCB1UmVzcG9uc2VVbnN1cHBvcnRlZE1lZGlhVHlwZSwgdVJlc3BvbnNlTWV0aG9kTm90QWxsb3dlZCwgdVJlc3BvbnNlT2ssIH0gZnJvbSBcIi4uL3Byb3RvY29sL3VuaXZlcnNhbC5qc1wiO1xuY29uc3QgcHJvdG9jb2xOYW1lID0gXCJncnBjLXdlYlwiO1xuY29uc3QgbWV0aG9kUG9zdCA9IFwiUE9TVFwiO1xuLyoqXG4gKiBDcmVhdGUgYSBmYWN0b3J5IHRoYXQgY3JlYXRlcyBnUlBDLXdlYiBoYW5kbGVycy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUhhbmRsZXJGYWN0b3J5KG9wdGlvbnMpIHtcbiAgICBjb25zdCBvcHQgPSB2YWxpZGF0ZVVuaXZlcnNhbEhhbmRsZXJPcHRpb25zKG9wdGlvbnMpO1xuICAgIGNvbnN0IHRyYWlsZXJTZXJpYWxpemF0aW9uID0gY3JlYXRlVHJhaWxlclNlcmlhbGl6YXRpb24oKTtcbiAgICBmdW5jdGlvbiBmYWN0KHNwZWMpIHtcbiAgICAgICAgY29uc3QgaCA9IGNyZWF0ZUhhbmRsZXIob3B0LCB0cmFpbGVyU2VyaWFsaXphdGlvbiwgc3BlYyk7XG4gICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKGgsIHtcbiAgICAgICAgICAgIHByb3RvY29sTmFtZXM6IFtwcm90b2NvbE5hbWVdLFxuICAgICAgICAgICAgYWxsb3dlZE1ldGhvZHM6IFttZXRob2RQb3N0XSxcbiAgICAgICAgICAgIHN1cHBvcnRlZENvbnRlbnRUeXBlOiBjb250ZW50VHlwZU1hdGNoZXIoY29udGVudFR5cGVSZWdFeHApLFxuICAgICAgICAgICAgcmVxdWVzdFBhdGg6IGNyZWF0ZU1ldGhvZFVybChcIi9cIiwgc3BlYy5zZXJ2aWNlLCBzcGVjLm1ldGhvZCksXG4gICAgICAgICAgICBzZXJ2aWNlOiBzcGVjLnNlcnZpY2UsXG4gICAgICAgICAgICBtZXRob2Q6IHNwZWMubWV0aG9kLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZmFjdC5wcm90b2NvbE5hbWUgPSBwcm90b2NvbE5hbWU7XG4gICAgcmV0dXJuIGZhY3Q7XG59XG5mdW5jdGlvbiBjcmVhdGVIYW5kbGVyKG9wdCwgdHJhaWxlclNlcmlhbGl6YXRpb24sIHNwZWMpIHtcbiAgICBjb25zdCBzZXJpYWxpemF0aW9uID0gY3JlYXRlTWV0aG9kU2VyaWFsaXphdGlvbkxvb2t1cChzcGVjLm1ldGhvZCwgb3B0LmJpbmFyeU9wdGlvbnMsIG9wdC5qc29uT3B0aW9ucywgb3B0KTtcbiAgICByZXR1cm4gYXN5bmMgZnVuY3Rpb24gaGFuZGxlKHJlcSkge1xuICAgICAgICBhc3NlcnRCeXRlU3RyZWFtUmVxdWVzdChyZXEpO1xuICAgICAgICBjb25zdCB0eXBlID0gcGFyc2VDb250ZW50VHlwZShyZXEuaGVhZGVyLmdldChoZWFkZXJDb250ZW50VHlwZSkpO1xuICAgICAgICBpZiAodHlwZSA9PSB1bmRlZmluZWQgfHwgdHlwZS50ZXh0KSB7XG4gICAgICAgICAgICByZXR1cm4gdVJlc3BvbnNlVW5zdXBwb3J0ZWRNZWRpYVR5cGU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlcS5tZXRob2QgIT09IG1ldGhvZFBvc3QpIHtcbiAgICAgICAgICAgIHJldHVybiB1UmVzcG9uc2VNZXRob2ROb3RBbGxvd2VkO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHRpbWVvdXQgPSBwYXJzZVRpbWVvdXQocmVxLmhlYWRlci5nZXQoaGVhZGVyVGltZW91dCksIG9wdC5tYXhUaW1lb3V0TXMpO1xuICAgICAgICBjb25zdCBjb250ZXh0ID0gY3JlYXRlSGFuZGxlckNvbnRleHQoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBzcGVjKSwgeyByZXF1ZXN0TWV0aG9kOiByZXEubWV0aG9kLCBwcm90b2NvbE5hbWUsIHRpbWVvdXRNczogdGltZW91dC50aW1lb3V0TXMsIHNodXRkb3duU2lnbmFsOiBvcHQuc2h1dGRvd25TaWduYWwsIHJlcXVlc3RTaWduYWw6IHJlcS5zaWduYWwsIHJlcXVlc3RIZWFkZXI6IHJlcS5oZWFkZXIsIHVybDogcmVxLnVybCwgcmVzcG9uc2VIZWFkZXI6IHtcbiAgICAgICAgICAgICAgICBbaGVhZGVyQ29udGVudFR5cGVdOiB0eXBlLmJpbmFyeSA/IGNvbnRlbnRUeXBlUHJvdG8gOiBjb250ZW50VHlwZUpzb24sXG4gICAgICAgICAgICB9LCByZXNwb25zZVRyYWlsZXI6IHtcbiAgICAgICAgICAgICAgICBbaGVhZGVyR3JwY1N0YXR1c106IGdycGNTdGF0dXNPayxcbiAgICAgICAgICAgIH0sIGNvbnRleHRWYWx1ZXM6IHJlcS5jb250ZXh0VmFsdWVzIH0pKTtcbiAgICAgICAgY29uc3QgY29tcHJlc3Npb24gPSBjb21wcmVzc2lvbk5lZ290aWF0ZShvcHQuYWNjZXB0Q29tcHJlc3Npb24sIHJlcS5oZWFkZXIuZ2V0KGhlYWRlckVuY29kaW5nKSwgcmVxLmhlYWRlci5nZXQoaGVhZGVyQWNjZXB0RW5jb2RpbmcpLCBoZWFkZXJBY2NlcHRFbmNvZGluZyk7XG4gICAgICAgIGlmIChjb21wcmVzc2lvbi5yZXNwb25zZSkge1xuICAgICAgICAgICAgY29udGV4dC5yZXNwb25zZUhlYWRlci5zZXQoaGVhZGVyRW5jb2RpbmcsIGNvbXByZXNzaW9uLnJlc3BvbnNlLm5hbWUpO1xuICAgICAgICB9XG4gICAgICAgIC8vIFdlIHNwbGl0IHRoZSBwaXBlbGluZSBpbnRvIHR3byBwYXJ0czogVGhlIHJlcXVlc3QgaXRlcmF0b3IsIGFuZCB0aGVcbiAgICAgICAgLy8gcmVzcG9uc2UgaXRlcmF0b3IuIFdlIGRvIHRoaXMgYmVjYXVzZSB0aGUgcmVxdWVzdCBpdGVyYXRvciBpcyByZXNwb25zaWJsZVxuICAgICAgICAvLyBmb3IgcGFyc2luZyB0aGUgcmVxdWVzdCBib2R5LCBhbmQgd2UgZG9uJ3Qgd2FudCB3cml0ZSBlcnJvcnMgb2YgdGhlIHJlc3BvbnNlXG4gICAgICAgIC8vIGl0ZXJhdG9yIHRvIGFmZmVjdCB0aGUgcmVxdWVzdCBpdGVyYXRvci5cbiAgICAgICAgY29uc3QgaW5wdXRJdCA9IHBpcGUocmVxLmJvZHksIHRyYW5zZm9ybVByZXBlbmQoKCkgPT4ge1xuICAgICAgICAgICAgLy8gcmFpc2UgY29tcHJlc3Npb24gZXJyb3IgdG8gc2VyaWFsaXplIGl0IGFzIGEgdHJhaWxlciBzdGF0dXNcbiAgICAgICAgICAgIGlmIChjb21wcmVzc2lvbi5lcnJvcilcbiAgICAgICAgICAgICAgICB0aHJvdyBjb21wcmVzc2lvbi5lcnJvcjtcbiAgICAgICAgICAgIC8vIHJhaXNlIHRpbWVvdXQgcGFyc2luZyBlcnJvciB0byBzZXJpYWxpemUgaXQgYXMgYSB0cmFpbGVyIHN0YXR1c1xuICAgICAgICAgICAgaWYgKHRpbWVvdXQuZXJyb3IpXG4gICAgICAgICAgICAgICAgdGhyb3cgdGltZW91dC5lcnJvcjtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH0pLCB0cmFuc2Zvcm1TcGxpdEVudmVsb3BlKG9wdC5yZWFkTWF4Qnl0ZXMpLCB0cmFuc2Zvcm1EZWNvbXByZXNzRW52ZWxvcGUoY29tcHJlc3Npb24ucmVxdWVzdCwgb3B0LnJlYWRNYXhCeXRlcyksIHRyYW5zZm9ybVBhcnNlRW52ZWxvcGUoc2VyaWFsaXphdGlvbi5nZXRJKHR5cGUuYmluYXJ5KSwgdHJhaWxlckZsYWcpKTtcbiAgICAgICAgY29uc3QgaXQgPSB0cmFuc2Zvcm1JbnZva2VJbXBsZW1lbnRhdGlvbihzcGVjLCBjb250ZXh0LCBvcHQuaW50ZXJjZXB0b3JzKShpbnB1dEl0KVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTtcbiAgICAgICAgY29uc3Qgb3V0cHV0SXQgPSBwaXBlKFxuICAgICAgICAvLyBXZSB3cmFwIHRoZSBpdGVyYXRvciBpbiBhbiBhc3luYyBpdGVyYXRvciB0byBlbnN1cmUgdGhhdCB0aGVcbiAgICAgICAgLy8gYWJvcnQgc2lnbmFsIGlzIGFib3J0ZWQgd2hlbiB0aGUgaXRlcmF0b3IgaXMgZG9uZS5cbiAgICAgICAge1xuICAgICAgICAgICAgW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBuZXh0OiAoKSA9PiBpdC5uZXh0KCksXG4gICAgICAgICAgICAgICAgICAgIHRocm93OiAoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQuYWJvcnQoZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKF9iID0gKF9hID0gaXQudGhyb3cpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKGl0LCBlKSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogUHJvbWlzZS5yZWplY3QoeyBkb25lOiB0cnVlIH0pO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICByZXR1cm46ICh2KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGV4dC5hYm9ydCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICgoX2IgPSAoX2EgPSBpdC5yZXR1cm4pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKGl0LCB2KSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogUHJvbWlzZS5yZXNvbHZlKHsgZG9uZTogdHJ1ZSwgdmFsdWU6IHYgfSkpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9LFxuICAgICAgICB9LCB0cmFuc2Zvcm1TZXJpYWxpemVFbnZlbG9wZShzZXJpYWxpemF0aW9uLmdldE8odHlwZS5iaW5hcnkpKSwgdHJhbnNmb3JtQ2F0Y2hGaW5hbGx5KChlKSA9PiB7XG4gICAgICAgICAgICBjb250ZXh0LmFib3J0KCk7XG4gICAgICAgICAgICBpZiAoZSBpbnN0YW5jZW9mIENvbm5lY3RFcnJvcikge1xuICAgICAgICAgICAgICAgIHNldFRyYWlsZXJTdGF0dXMoY29udGV4dC5yZXNwb25zZVRyYWlsZXIsIGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgc2V0VHJhaWxlclN0YXR1cyhjb250ZXh0LnJlc3BvbnNlVHJhaWxlciwgbmV3IENvbm5lY3RFcnJvcihcImludGVybmFsIGVycm9yXCIsIENvZGUuSW50ZXJuYWwsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBlKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGZsYWdzOiB0cmFpbGVyRmxhZyxcbiAgICAgICAgICAgICAgICBkYXRhOiB0cmFpbGVyU2VyaWFsaXphdGlvbi5zZXJpYWxpemUoY29udGV4dC5yZXNwb25zZVRyYWlsZXIpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSksIHRyYW5zZm9ybUNvbXByZXNzRW52ZWxvcGUoY29tcHJlc3Npb24ucmVzcG9uc2UsIG9wdC5jb21wcmVzc01pbkJ5dGVzKSwgdHJhbnNmb3JtSm9pbkVudmVsb3BlcygpLCB7IHByb3BhZ2F0ZURvd25TdHJlYW1FcnJvcjogdHJ1ZSB9KTtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdVJlc3BvbnNlT2spLCB7IFxuICAgICAgICAgICAgLy8gV2Ugd2FpdCBmb3IgdGhlIGZpcnN0IHJlc3BvbnNlIGJvZHkgYnl0ZXMgYmVmb3JlIHJlc29sdmluZywgc28gdGhhdFxuICAgICAgICAgICAgLy8gaW1wbGVtZW50YXRpb25zIGhhdmUgYSBjaGFuY2UgdG8gYWRkIGhlYWRlcnMgYmVmb3JlIGFuIGFkYXB0ZXIgY29tbWl0c1xuICAgICAgICAgICAgLy8gdGhlbSB0byB0aGUgd2lyZS5cbiAgICAgICAgICAgIGJvZHk6IGF3YWl0IHVudGlsRmlyc3Qob3V0cHV0SXQpLCBoZWFkZXI6IGNvbnRleHQucmVzcG9uc2VIZWFkZXIgfSk7XG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/handler-factory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerAcceptEncoding: () => (/* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerAcceptEncoding),\n/* harmony export */   headerContentType: () => (/* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerContentType),\n/* harmony export */   headerEncoding: () => (/* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerEncoding),\n/* harmony export */   headerGrpcMessage: () => (/* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcMessage),\n/* harmony export */   headerGrpcStatus: () => (/* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcStatus),\n/* harmony export */   headerStatusDetailsBin: () => (/* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStatusDetailsBin),\n/* harmony export */   headerTimeout: () => (/* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerTimeout),\n/* harmony export */   headerUserAgent: () => (/* reexport safe */ _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUserAgent),\n/* harmony export */   headerXGrpcWeb: () => (/* binding */ headerXGrpcWeb),\n/* harmony export */   headerXUserAgent: () => (/* binding */ headerXUserAgent)\n/* harmony export */ });\n/* harmony import */ var _protocol_grpc_headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol-grpc/headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @private Internal code, does not follow semantic versioning.\n */\n\n/**\n * gRPC-web does not use the standard header User-Agent.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst headerXUserAgent = \"X-User-Agent\";\n/**\n * The canonical grpc/grpc-web JavaScript implementation sets\n * this request header with value \"1\".\n * Some servers may rely on the header to identify gRPC-web\n * requests. For example the proxy by improbable:\n * https://github.com/improbable-eng/grpc-web/blob/53aaf4cdc0fede7103c1b06f0cfc560c003a5c41/go/grpcweb/wrapper.go#L231\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst headerXGrpcWeb = \"X-Grpc-Web\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi9oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDb007QUFDcE07QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08iLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sLWdycGMtd2ViXFxoZWFkZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgeyBoZWFkZXJDb250ZW50VHlwZSwgaGVhZGVyRW5jb2RpbmcsIGhlYWRlckFjY2VwdEVuY29kaW5nLCBoZWFkZXJUaW1lb3V0LCBoZWFkZXJHcnBjU3RhdHVzLCBoZWFkZXJHcnBjTWVzc2FnZSwgaGVhZGVyU3RhdHVzRGV0YWlsc0JpbiwgaGVhZGVyVXNlckFnZW50LCB9IGZyb20gXCIuLi9wcm90b2NvbC1ncnBjL2hlYWRlcnMuanNcIjtcbi8qKlxuICogZ1JQQy13ZWIgZG9lcyBub3QgdXNlIHRoZSBzdGFuZGFyZCBoZWFkZXIgVXNlci1BZ2VudC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IGhlYWRlclhVc2VyQWdlbnQgPSBcIlgtVXNlci1BZ2VudFwiO1xuLyoqXG4gKiBUaGUgY2Fub25pY2FsIGdycGMvZ3JwYy13ZWIgSmF2YVNjcmlwdCBpbXBsZW1lbnRhdGlvbiBzZXRzXG4gKiB0aGlzIHJlcXVlc3QgaGVhZGVyIHdpdGggdmFsdWUgXCIxXCIuXG4gKiBTb21lIHNlcnZlcnMgbWF5IHJlbHkgb24gdGhlIGhlYWRlciB0byBpZGVudGlmeSBnUlBDLXdlYlxuICogcmVxdWVzdHMuIEZvciBleGFtcGxlIHRoZSBwcm94eSBieSBpbXByb2JhYmxlOlxuICogaHR0cHM6Ly9naXRodWIuY29tL2ltcHJvYmFibGUtZW5nL2dycGMtd2ViL2Jsb2IvNTNhYWY0Y2RjMGZlZGU3MTAzYzFiMDZmMGNmYzU2MGMwMDNhNWM0MS9nby9ncnBjd2ViL3dyYXBwZXIuZ28jTDIzMVxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgaGVhZGVyWEdycGNXZWIgPSBcIlgtR3JwYy1XZWJcIjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/request-header.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/request-header.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   requestHeader: () => (/* binding */ requestHeader),\n/* harmony export */   requestHeaderWithCompression: () => (/* binding */ requestHeaderWithCompression)\n/* harmony export */ });\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./content-type.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/content-type.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Creates headers for a gRPC-web request.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders, setUserAgent) {\n    const result = new Headers(userProvidedHeaders !== null && userProvidedHeaders !== void 0 ? userProvidedHeaders : {});\n    // Note that we do not support the grpc-web-text format.\n    // https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-WEB.md#protocol-differences-vs-grpc-over-http2\n    result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerContentType, useBinaryFormat ? _content_type_js__WEBPACK_IMPORTED_MODULE_1__.contentTypeProto : _content_type_js__WEBPACK_IMPORTED_MODULE_1__.contentTypeJson);\n    result.set(_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerXGrpcWeb, \"1\");\n    // Note that we do not strictly comply with gRPC user agents.\n    // We use \"connect-es/1.2.3\" where gRPC would use \"grpc-es/1.2.3\".\n    // See https://github.com/grpc/grpc/blob/c462bb8d485fc1434ecfae438823ca8d14cf3154/doc/PROTOCOL-HTTP2.md#user-agents\n    result.set(_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerXUserAgent, \"connect-es/1.6.1\");\n    if (setUserAgent) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUserAgent, \"connect-es/1.6.1\");\n    }\n    if (timeoutMs !== undefined) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerTimeout, `${timeoutMs}m`);\n    }\n    return result;\n}\n/**\n * Creates headers for a gRPC-web request with compression.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeaderWithCompression(useBinaryFormat, timeoutMs, userProvidedHeaders, acceptCompression, sendCompression, setUserAgent) {\n    const result = requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders, setUserAgent);\n    if (sendCompression != null) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerEncoding, sendCompression.name);\n    }\n    if (acceptCompression.length > 0) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerAcceptEncoding, acceptCompression.map((c) => c.name).join(\",\"));\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi9yZXF1ZXN0LWhlYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzBKO0FBQ3BGO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLHdIQUF3SDtBQUN4SDtBQUNBO0FBQ0EsZUFBZSwwREFBaUIsb0JBQW9CLDhEQUFnQixHQUFHLDZEQUFlO0FBQ3RGLGVBQWUsdURBQWM7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsZUFBZSx5REFBZ0I7QUFDL0I7QUFDQSxtQkFBbUIsd0RBQWU7QUFDbEM7QUFDQTtBQUNBLG1CQUFtQixzREFBYSxLQUFLLFVBQVU7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG1CQUFtQix1REFBYztBQUNqQztBQUNBO0FBQ0EsbUJBQW1CLDZEQUFvQjtBQUN2QztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sLWdycGMtd2ViXFxyZXF1ZXN0LWhlYWRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgaGVhZGVyQWNjZXB0RW5jb2RpbmcsIGhlYWRlckNvbnRlbnRUeXBlLCBoZWFkZXJFbmNvZGluZywgaGVhZGVyVGltZW91dCwgaGVhZGVyWEdycGNXZWIsIGhlYWRlclVzZXJBZ2VudCwgaGVhZGVyWFVzZXJBZ2VudCwgfSBmcm9tIFwiLi9oZWFkZXJzLmpzXCI7XG5pbXBvcnQgeyBjb250ZW50VHlwZUpzb24sIGNvbnRlbnRUeXBlUHJvdG8gfSBmcm9tIFwiLi9jb250ZW50LXR5cGUuanNcIjtcbi8qKlxuICogQ3JlYXRlcyBoZWFkZXJzIGZvciBhIGdSUEMtd2ViIHJlcXVlc3QuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXF1ZXN0SGVhZGVyKHVzZUJpbmFyeUZvcm1hdCwgdGltZW91dE1zLCB1c2VyUHJvdmlkZWRIZWFkZXJzLCBzZXRVc2VyQWdlbnQpIHtcbiAgICBjb25zdCByZXN1bHQgPSBuZXcgSGVhZGVycyh1c2VyUHJvdmlkZWRIZWFkZXJzICE9PSBudWxsICYmIHVzZXJQcm92aWRlZEhlYWRlcnMgIT09IHZvaWQgMCA/IHVzZXJQcm92aWRlZEhlYWRlcnMgOiB7fSk7XG4gICAgLy8gTm90ZSB0aGF0IHdlIGRvIG5vdCBzdXBwb3J0IHRoZSBncnBjLXdlYi10ZXh0IGZvcm1hdC5cbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZ3JwYy9ncnBjL2Jsb2IvbWFzdGVyL2RvYy9QUk9UT0NPTC1XRUIubWQjcHJvdG9jb2wtZGlmZmVyZW5jZXMtdnMtZ3JwYy1vdmVyLWh0dHAyXG4gICAgcmVzdWx0LnNldChoZWFkZXJDb250ZW50VHlwZSwgdXNlQmluYXJ5Rm9ybWF0ID8gY29udGVudFR5cGVQcm90byA6IGNvbnRlbnRUeXBlSnNvbik7XG4gICAgcmVzdWx0LnNldChoZWFkZXJYR3JwY1dlYiwgXCIxXCIpO1xuICAgIC8vIE5vdGUgdGhhdCB3ZSBkbyBub3Qgc3RyaWN0bHkgY29tcGx5IHdpdGggZ1JQQyB1c2VyIGFnZW50cy5cbiAgICAvLyBXZSB1c2UgXCJjb25uZWN0LWVzLzEuMi4zXCIgd2hlcmUgZ1JQQyB3b3VsZCB1c2UgXCJncnBjLWVzLzEuMi4zXCIuXG4gICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ncnBjL2dycGMvYmxvYi9jNDYyYmI4ZDQ4NWZjMTQzNGVjZmFlNDM4ODIzY2E4ZDE0Y2YzMTU0L2RvYy9QUk9UT0NPTC1IVFRQMi5tZCN1c2VyLWFnZW50c1xuICAgIHJlc3VsdC5zZXQoaGVhZGVyWFVzZXJBZ2VudCwgXCJjb25uZWN0LWVzLzEuNi4xXCIpO1xuICAgIGlmIChzZXRVc2VyQWdlbnQpIHtcbiAgICAgICAgcmVzdWx0LnNldChoZWFkZXJVc2VyQWdlbnQsIFwiY29ubmVjdC1lcy8xLjYuMVwiKTtcbiAgICB9XG4gICAgaWYgKHRpbWVvdXRNcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJlc3VsdC5zZXQoaGVhZGVyVGltZW91dCwgYCR7dGltZW91dE1zfW1gKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogQ3JlYXRlcyBoZWFkZXJzIGZvciBhIGdSUEMtd2ViIHJlcXVlc3Qgd2l0aCBjb21wcmVzc2lvbi5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlcXVlc3RIZWFkZXJXaXRoQ29tcHJlc3Npb24odXNlQmluYXJ5Rm9ybWF0LCB0aW1lb3V0TXMsIHVzZXJQcm92aWRlZEhlYWRlcnMsIGFjY2VwdENvbXByZXNzaW9uLCBzZW5kQ29tcHJlc3Npb24sIHNldFVzZXJBZ2VudCkge1xuICAgIGNvbnN0IHJlc3VsdCA9IHJlcXVlc3RIZWFkZXIodXNlQmluYXJ5Rm9ybWF0LCB0aW1lb3V0TXMsIHVzZXJQcm92aWRlZEhlYWRlcnMsIHNldFVzZXJBZ2VudCk7XG4gICAgaWYgKHNlbmRDb21wcmVzc2lvbiAhPSBudWxsKSB7XG4gICAgICAgIHJlc3VsdC5zZXQoaGVhZGVyRW5jb2RpbmcsIHNlbmRDb21wcmVzc2lvbi5uYW1lKTtcbiAgICB9XG4gICAgaWYgKGFjY2VwdENvbXByZXNzaW9uLmxlbmd0aCA+IDApIHtcbiAgICAgICAgcmVzdWx0LnNldChoZWFkZXJBY2NlcHRFbmNvZGluZywgYWNjZXB0Q29tcHJlc3Npb24ubWFwKChjKSA9PiBjLm5hbWUpLmpvaW4oXCIsXCIpKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/request-header.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/trailer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/trailer.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTrailerSerialization: () => (/* binding */ createTrailerSerialization),\n/* harmony export */   trailerFlag: () => (/* binding */ trailerFlag),\n/* harmony export */   trailerParse: () => (/* binding */ trailerParse),\n/* harmony export */   trailerSerialize: () => (/* binding */ trailerSerialize)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * trailerFlag indicates that the data in a EnvelopedMessage\n * is a set of trailers of the gRPC-web protocol.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst trailerFlag = 0b10000000;\n/**\n * Parse a gRPC-web trailer, a set of header fields separated by CRLF.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction trailerParse(data) {\n    const headers = new Headers();\n    const lines = new TextDecoder().decode(data).split(\"\\r\\n\");\n    for (const line of lines) {\n        if (line === \"\") {\n            continue;\n        }\n        const i = line.indexOf(\":\");\n        if (i > 0) {\n            const name = line.substring(0, i).trim();\n            const value = line.substring(i + 1).trim();\n            headers.append(name, value);\n        }\n    }\n    return headers;\n}\n/**\n * Serialize a Headers object as a gRPC-web trailer.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction trailerSerialize(trailer) {\n    const lines = [];\n    trailer.forEach((value, key) => {\n        lines.push(`${key}: ${value}\\r\\n`);\n    });\n    return new TextEncoder().encode(lines.join(\"\"));\n}\n/**\n * Create a Serialization object that serializes a gRPC-web trailer, a Headers\n * object that is serialized as a set of header fields, separated by CRLF.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createTrailerSerialization() {\n    return {\n        serialize: trailerSerialize,\n        parse: trailerParse,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi90cmFpbGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLHNCQUFzQixJQUFJLElBQUksTUFBTTtBQUNwQyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxhdHNcXG5vZGVfbW9kdWxlc1xcQGNvbm5lY3RycGNcXGNvbm5lY3RcXGRpc3RcXGVzbVxccHJvdG9jb2wtZ3JwYy13ZWJcXHRyYWlsZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogdHJhaWxlckZsYWcgaW5kaWNhdGVzIHRoYXQgdGhlIGRhdGEgaW4gYSBFbnZlbG9wZWRNZXNzYWdlXG4gKiBpcyBhIHNldCBvZiB0cmFpbGVycyBvZiB0aGUgZ1JQQy13ZWIgcHJvdG9jb2wuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCB0cmFpbGVyRmxhZyA9IDBiMTAwMDAwMDA7XG4vKipcbiAqIFBhcnNlIGEgZ1JQQy13ZWIgdHJhaWxlciwgYSBzZXQgb2YgaGVhZGVyIGZpZWxkcyBzZXBhcmF0ZWQgYnkgQ1JMRi5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRyYWlsZXJQYXJzZShkYXRhKSB7XG4gICAgY29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XG4gICAgY29uc3QgbGluZXMgPSBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoZGF0YSkuc3BsaXQoXCJcXHJcXG5cIik7XG4gICAgZm9yIChjb25zdCBsaW5lIG9mIGxpbmVzKSB7XG4gICAgICAgIGlmIChsaW5lID09PSBcIlwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpID0gbGluZS5pbmRleE9mKFwiOlwiKTtcbiAgICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgICAgICBjb25zdCBuYW1lID0gbGluZS5zdWJzdHJpbmcoMCwgaSkudHJpbSgpO1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBsaW5lLnN1YnN0cmluZyhpICsgMSkudHJpbSgpO1xuICAgICAgICAgICAgaGVhZGVycy5hcHBlbmQobmFtZSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBoZWFkZXJzO1xufVxuLyoqXG4gKiBTZXJpYWxpemUgYSBIZWFkZXJzIG9iamVjdCBhcyBhIGdSUEMtd2ViIHRyYWlsZXIuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0cmFpbGVyU2VyaWFsaXplKHRyYWlsZXIpIHtcbiAgICBjb25zdCBsaW5lcyA9IFtdO1xuICAgIHRyYWlsZXIuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICBsaW5lcy5wdXNoKGAke2tleX06ICR7dmFsdWV9XFxyXFxuYCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShsaW5lcy5qb2luKFwiXCIpKTtcbn1cbi8qKlxuICogQ3JlYXRlIGEgU2VyaWFsaXphdGlvbiBvYmplY3QgdGhhdCBzZXJpYWxpemVzIGEgZ1JQQy13ZWIgdHJhaWxlciwgYSBIZWFkZXJzXG4gKiBvYmplY3QgdGhhdCBpcyBzZXJpYWxpemVkIGFzIGEgc2V0IG9mIGhlYWRlciBmaWVsZHMsIHNlcGFyYXRlZCBieSBDUkxGLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlVHJhaWxlclNlcmlhbGl6YXRpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2VyaWFsaXplOiB0cmFpbGVyU2VyaWFsaXplLFxuICAgICAgICBwYXJzZTogdHJhaWxlclBhcnNlLFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/trailer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/transport.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/transport.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTransport: () => (/* binding */ createTransport)\n/* harmony export */ });\n/* harmony import */ var _protocol_grpc_validate_trailer_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../protocol-grpc/validate-trailer.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-trailer.js\");\n/* harmony import */ var _request_header_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request-header.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/request-header.js\");\n/* harmony import */ var _validate_response_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validate-response.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/validate-response.js\");\n/* harmony import */ var _trailer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./trailer.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/trailer.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocol/async-iterable.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../protocol/create-method-url.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protocol/run-call.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js\");\n/* harmony import */ var _protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol/serialization.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _context_values_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../context-values.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/context-values.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a Transport for the gRPC-web protocol.\n */\nfunction createTransport(opt) {\n    return {\n        async unary(service, method, signal, timeoutMs, header, message, contextValues) {\n            const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? opt.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return await (0,_protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__.runUnaryCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: false,\n                    service,\n                    method,\n                    url: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0,_request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeaderWithCompression)(opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression, true),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_4__.createContextValues)(),\n                    message,\n                },\n                next: async (req) => {\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.pipe)((0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.createAsyncIterable)([req.message]), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformJoinEnvelopes)(), {\n                            propagateDownStreamError: true,\n                        }),\n                    });\n                    const { compression, headerError } = (0,_validate_response_js__WEBPACK_IMPORTED_MODULE_6__.validateResponseWithCompression)(opt.acceptCompression, uRes.status, uRes.header);\n                    const { trailer, message } = await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.pipeTo)(uRes.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat), _trailer_js__WEBPACK_IMPORTED_MODULE_7__.trailerFlag, (0,_trailer_js__WEBPACK_IMPORTED_MODULE_7__.createTrailerSerialization)()), async (iterable) => {\n                        var _a, e_1, _b, _c;\n                        let message;\n                        let trailer;\n                        try {\n                            for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = await iterable_1.next(), _a = iterable_1_1.done, !_a; _d = true) {\n                                _c = iterable_1_1.value;\n                                _d = false;\n                                const env = _c;\n                                if (env.end) {\n                                    if (trailer !== undefined) {\n                                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_8__.ConnectError(\"protocol error: received extra trailer\", _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.Unimplemented);\n                                    }\n                                    trailer = env.value;\n                                }\n                                else {\n                                    if (message !== undefined) {\n                                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_8__.ConnectError(\"protocol error: received extra output message for unary method\", _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.Unimplemented);\n                                    }\n                                    message = env.value;\n                                }\n                            }\n                        }\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                        finally {\n                            try {\n                                if (!_d && !_a && (_b = iterable_1.return)) await _b.call(iterable_1);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                        }\n                        return { trailer, message };\n                    }, {\n                        propagateDownStreamError: false,\n                    });\n                    if (trailer === undefined) {\n                        if (headerError != undefined) {\n                            throw headerError;\n                        }\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_8__.ConnectError(\"protocol error: missing trailer\", uRes.header.has(_headers_js__WEBPACK_IMPORTED_MODULE_10__.headerGrpcStatus)\n                            ? _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.Unimplemented\n                            : _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.Unknown);\n                    }\n                    (0,_protocol_grpc_validate_trailer_js__WEBPACK_IMPORTED_MODULE_11__.validateTrailer)(trailer, uRes.header);\n                    if (message === undefined) {\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_8__.ConnectError(\"protocol error: missing output message for unary method\", trailer.has(_headers_js__WEBPACK_IMPORTED_MODULE_10__.headerGrpcStatus) ? _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.Unimplemented : _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.Unknown);\n                    }\n                    return {\n                        stream: false,\n                        service,\n                        method,\n                        header: uRes.header,\n                        message,\n                        trailer,\n                    };\n                },\n            });\n        },\n        async stream(service, method, signal, timeoutMs, header, input, contextValues) {\n            const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? opt.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return (0,_protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__.runStreamingCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: true,\n                    service,\n                    method,\n                    url: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0,_request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeaderWithCompression)(opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression, true),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_4__.createContextValues)(),\n                    message: input,\n                },\n                next: async (req) => {\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.pipe)(req.message, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformJoinEnvelopes)(), { propagateDownStreamError: true }),\n                    });\n                    const { compression, foundStatus, headerError } = (0,_validate_response_js__WEBPACK_IMPORTED_MODULE_6__.validateResponseWithCompression)(opt.acceptCompression, uRes.status, uRes.header);\n                    if (headerError) {\n                        throw headerError;\n                    }\n                    const res = Object.assign(Object.assign({}, req), { header: uRes.header, trailer: new Headers(), message: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.pipe)(uRes.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat), _trailer_js__WEBPACK_IMPORTED_MODULE_7__.trailerFlag, (0,_trailer_js__WEBPACK_IMPORTED_MODULE_7__.createTrailerSerialization)()), function (iterable) {\n                            return __asyncGenerator(this, arguments, function* () {\n                                var _a, e_2, _b, _c;\n                                if (foundStatus) {\n                                    // A grpc-status: 0 response header was present. This is a \"trailers-only\"\n                                    // response (a response without a body and no trailers).\n                                    //\n                                    // The spec seems to disallow a trailers-only response for status 0 - we are\n                                    // lenient and only verify that the body is empty.\n                                    //\n                                    // > [...] Trailers-Only is permitted for calls that produce an immediate error.\n                                    // See https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md\n                                    const r = yield __await(iterable[Symbol.asyncIterator]().next());\n                                    if (r.done !== true) {\n                                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_8__.ConnectError(\"protocol error: extra data for trailers-only\", _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.InvalidArgument);\n                                    }\n                                    return yield __await(void 0);\n                                }\n                                let trailerReceived = false;\n                                try {\n                                    for (var _d = true, iterable_2 = __asyncValues(iterable), iterable_2_1; iterable_2_1 = yield __await(iterable_2.next()), _a = iterable_2_1.done, !_a; _d = true) {\n                                        _c = iterable_2_1.value;\n                                        _d = false;\n                                        const chunk = _c;\n                                        if (chunk.end) {\n                                            if (trailerReceived) {\n                                                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_8__.ConnectError(\"protocol error: received extra trailer\", _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.InvalidArgument);\n                                            }\n                                            trailerReceived = true;\n                                            (0,_protocol_grpc_validate_trailer_js__WEBPACK_IMPORTED_MODULE_11__.validateTrailer)(chunk.value, uRes.header);\n                                            chunk.value.forEach((value, key) => res.trailer.set(key, value));\n                                            continue;\n                                        }\n                                        if (trailerReceived) {\n                                            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_8__.ConnectError(\"protocol error: received extra message after trailer\", _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.InvalidArgument);\n                                        }\n                                        yield yield __await(chunk.value);\n                                    }\n                                }\n                                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                                finally {\n                                    try {\n                                        if (!_d && !_a && (_b = iterable_2.return)) yield __await(_b.call(iterable_2));\n                                    }\n                                    finally { if (e_2) throw e_2.error; }\n                                }\n                                if (!trailerReceived) {\n                                    throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_8__.ConnectError(\"protocol error: missing trailer\", _code_js__WEBPACK_IMPORTED_MODULE_9__.Code.Internal);\n                                }\n                            });\n                        }, { propagateDownStreamError: true }) });\n                    return res;\n                },\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/transport.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/validate-response.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/validate-response.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateResponse: () => (/* binding */ validateResponse),\n/* harmony export */   validateResponseWithCompression: () => (/* binding */ validateResponseWithCompression)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n/* harmony import */ var _protocol_grpc_http_status_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../protocol-grpc/http-status.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/http-status.js\");\n/* harmony import */ var _protocol_grpc_trailer_status_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protocol-grpc/trailer-status.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n/**\n * Validates response status and header for the gRPC-web protocol.\n *\n * Throws a ConnectError if the header contains an error status,\n * or if the HTTP status indicates an error.\n *\n * Returns an object that indicates whether a gRPC status was found\n * in the response header. In this case, clients can not expect a\n * trailer.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateResponse(status, headers) {\n    var _a;\n    // For compatibility with the `grpc-web` package, we treat all HTTP status\n    // codes in the 200 range as valid, not just HTTP 200.\n    if (status >= 200 && status < 300) {\n        return {\n            foundStatus: headers.has(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcStatus),\n            headerError: (0,_protocol_grpc_trailer_status_js__WEBPACK_IMPORTED_MODULE_1__.findTrailerError)(headers),\n        };\n    }\n    throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(decodeURIComponent((_a = headers.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcMessage)) !== null && _a !== void 0 ? _a : `HTTP ${status}`), (0,_protocol_grpc_http_status_js__WEBPACK_IMPORTED_MODULE_3__.codeFromHttpStatus)(status), headers);\n}\n/**\n * Validates response status and header for the gRPC-web protocol.\n * This function is identical to validateResponse(), but also verifies\n * that a given encoding header is acceptable.\n *\n * Returns an object with the response compression, and a boolean\n * indicating whether a gRPC status was found in the response header\n * (in this case, clients can not expect a trailer).\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateResponseWithCompression(acceptCompression, status, headers) {\n    const { foundStatus, headerError } = validateResponse(status, headers);\n    let compression;\n    const encoding = headers.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerEncoding);\n    if (encoding !== null && encoding.toLowerCase() !== \"identity\") {\n        compression = acceptCompression.find((c) => c.name === encoding);\n        if (!compression) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(`unsupported response encoding \"${encoding}\"`, _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Internal, headers);\n        }\n    }\n    return {\n        foundStatus,\n        compression,\n        headerError,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjLXdlYi92YWxpZGF0ZS1yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDbUQ7QUFDakI7QUFDa0Q7QUFDZjtBQUNDO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyx5REFBZ0I7QUFDckQseUJBQXlCLGtGQUFnQjtBQUN6QztBQUNBO0FBQ0EsY0FBYywyREFBWSxzQ0FBc0MsMERBQWlCLDRDQUE0QyxPQUFPLElBQUksaUZBQWtCO0FBQzFKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSwyQkFBMkI7QUFDdkM7QUFDQSxpQ0FBaUMsdURBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDJEQUFZLG1DQUFtQyxTQUFTLElBQUksMENBQUk7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxhdHNcXG5vZGVfbW9kdWxlc1xcQGNvbm5lY3RycGNcXGNvbm5lY3RcXGRpc3RcXGVzbVxccHJvdG9jb2wtZ3JwYy13ZWJcXHZhbGlkYXRlLXJlc3BvbnNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBDb25uZWN0RXJyb3IgfSBmcm9tIFwiLi4vY29ubmVjdC1lcnJvci5qc1wiO1xuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuLi9jb2RlLmpzXCI7XG5pbXBvcnQgeyBoZWFkZXJFbmNvZGluZywgaGVhZGVyR3JwY01lc3NhZ2UsIGhlYWRlckdycGNTdGF0dXMsIH0gZnJvbSBcIi4vaGVhZGVycy5qc1wiO1xuaW1wb3J0IHsgY29kZUZyb21IdHRwU3RhdHVzIH0gZnJvbSBcIi4uL3Byb3RvY29sLWdycGMvaHR0cC1zdGF0dXMuanNcIjtcbmltcG9ydCB7IGZpbmRUcmFpbGVyRXJyb3IgfSBmcm9tIFwiLi4vcHJvdG9jb2wtZ3JwYy90cmFpbGVyLXN0YXR1cy5qc1wiO1xuLyoqXG4gKiBWYWxpZGF0ZXMgcmVzcG9uc2Ugc3RhdHVzIGFuZCBoZWFkZXIgZm9yIHRoZSBnUlBDLXdlYiBwcm90b2NvbC5cbiAqXG4gKiBUaHJvd3MgYSBDb25uZWN0RXJyb3IgaWYgdGhlIGhlYWRlciBjb250YWlucyBhbiBlcnJvciBzdGF0dXMsXG4gKiBvciBpZiB0aGUgSFRUUCBzdGF0dXMgaW5kaWNhdGVzIGFuIGVycm9yLlxuICpcbiAqIFJldHVybnMgYW4gb2JqZWN0IHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgYSBnUlBDIHN0YXR1cyB3YXMgZm91bmRcbiAqIGluIHRoZSByZXNwb25zZSBoZWFkZXIuIEluIHRoaXMgY2FzZSwgY2xpZW50cyBjYW4gbm90IGV4cGVjdCBhXG4gKiB0cmFpbGVyLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVSZXNwb25zZShzdGF0dXMsIGhlYWRlcnMpIHtcbiAgICB2YXIgX2E7XG4gICAgLy8gRm9yIGNvbXBhdGliaWxpdHkgd2l0aCB0aGUgYGdycGMtd2ViYCBwYWNrYWdlLCB3ZSB0cmVhdCBhbGwgSFRUUCBzdGF0dXNcbiAgICAvLyBjb2RlcyBpbiB0aGUgMjAwIHJhbmdlIGFzIHZhbGlkLCBub3QganVzdCBIVFRQIDIwMC5cbiAgICBpZiAoc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDApIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGZvdW5kU3RhdHVzOiBoZWFkZXJzLmhhcyhoZWFkZXJHcnBjU3RhdHVzKSxcbiAgICAgICAgICAgIGhlYWRlckVycm9yOiBmaW5kVHJhaWxlckVycm9yKGhlYWRlcnMpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKGRlY29kZVVSSUNvbXBvbmVudCgoX2EgPSBoZWFkZXJzLmdldChoZWFkZXJHcnBjTWVzc2FnZSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGBIVFRQICR7c3RhdHVzfWApLCBjb2RlRnJvbUh0dHBTdGF0dXMoc3RhdHVzKSwgaGVhZGVycyk7XG59XG4vKipcbiAqIFZhbGlkYXRlcyByZXNwb25zZSBzdGF0dXMgYW5kIGhlYWRlciBmb3IgdGhlIGdSUEMtd2ViIHByb3RvY29sLlxuICogVGhpcyBmdW5jdGlvbiBpcyBpZGVudGljYWwgdG8gdmFsaWRhdGVSZXNwb25zZSgpLCBidXQgYWxzbyB2ZXJpZmllc1xuICogdGhhdCBhIGdpdmVuIGVuY29kaW5nIGhlYWRlciBpcyBhY2NlcHRhYmxlLlxuICpcbiAqIFJldHVybnMgYW4gb2JqZWN0IHdpdGggdGhlIHJlc3BvbnNlIGNvbXByZXNzaW9uLCBhbmQgYSBib29sZWFuXG4gKiBpbmRpY2F0aW5nIHdoZXRoZXIgYSBnUlBDIHN0YXR1cyB3YXMgZm91bmQgaW4gdGhlIHJlc3BvbnNlIGhlYWRlclxuICogKGluIHRoaXMgY2FzZSwgY2xpZW50cyBjYW4gbm90IGV4cGVjdCBhIHRyYWlsZXIpLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVSZXNwb25zZVdpdGhDb21wcmVzc2lvbihhY2NlcHRDb21wcmVzc2lvbiwgc3RhdHVzLCBoZWFkZXJzKSB7XG4gICAgY29uc3QgeyBmb3VuZFN0YXR1cywgaGVhZGVyRXJyb3IgfSA9IHZhbGlkYXRlUmVzcG9uc2Uoc3RhdHVzLCBoZWFkZXJzKTtcbiAgICBsZXQgY29tcHJlc3Npb247XG4gICAgY29uc3QgZW5jb2RpbmcgPSBoZWFkZXJzLmdldChoZWFkZXJFbmNvZGluZyk7XG4gICAgaWYgKGVuY29kaW5nICE9PSBudWxsICYmIGVuY29kaW5nLnRvTG93ZXJDYXNlKCkgIT09IFwiaWRlbnRpdHlcIikge1xuICAgICAgICBjb21wcmVzc2lvbiA9IGFjY2VwdENvbXByZXNzaW9uLmZpbmQoKGMpID0+IGMubmFtZSA9PT0gZW5jb2RpbmcpO1xuICAgICAgICBpZiAoIWNvbXByZXNzaW9uKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKGB1bnN1cHBvcnRlZCByZXNwb25zZSBlbmNvZGluZyBcIiR7ZW5jb2Rpbmd9XCJgLCBDb2RlLkludGVybmFsLCBoZWFkZXJzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBmb3VuZFN0YXR1cyxcbiAgICAgICAgY29tcHJlc3Npb24sXG4gICAgICAgIGhlYWRlckVycm9yLFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/validate-response.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTypeJson: () => (/* binding */ contentTypeJson),\n/* harmony export */   contentTypeProto: () => (/* binding */ contentTypeProto),\n/* harmony export */   contentTypeRegExp: () => (/* binding */ contentTypeRegExp),\n/* harmony export */   parseContentType: () => (/* binding */ parseContentType)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Regular Expression that matches any valid gRPC Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst contentTypeRegExp = /^application\\/grpc(?:\\+(?:(json)(?:; ?charset=utf-?8)?|proto))?$/i;\nconst contentTypeProto = \"application/grpc+proto\";\nconst contentTypeJson = \"application/grpc+json\";\n/**\n * Parse a gRPC Content-Type header.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseContentType(contentType) {\n    const match = contentType === null || contentType === void 0 ? void 0 : contentType.match(contentTypeRegExp);\n    if (!match) {\n        return undefined;\n    }\n    const binary = !match[1];\n    return { binary };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL2NvbnRlbnQtdHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0VBQWdFO0FBQ2hFO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiIiwic291cmNlcyI6WyJEOlxccHJvamVjdHNcXGF0c1xcbm9kZV9tb2R1bGVzXFxAY29ubmVjdHJwY1xcY29ubmVjdFxcZGlzdFxcZXNtXFxwcm90b2NvbC1ncnBjXFxjb250ZW50LXR5cGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogUmVndWxhciBFeHByZXNzaW9uIHRoYXQgbWF0Y2hlcyBhbnkgdmFsaWQgZ1JQQyBDb250ZW50LVR5cGUgaGVhZGVyIHZhbHVlLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgY29udGVudFR5cGVSZWdFeHAgPSAvXmFwcGxpY2F0aW9uXFwvZ3JwYyg/OlxcKyg/Oihqc29uKSg/OjsgP2NoYXJzZXQ9dXRmLT84KT98cHJvdG8pKT8kL2k7XG5leHBvcnQgY29uc3QgY29udGVudFR5cGVQcm90byA9IFwiYXBwbGljYXRpb24vZ3JwYytwcm90b1wiO1xuZXhwb3J0IGNvbnN0IGNvbnRlbnRUeXBlSnNvbiA9IFwiYXBwbGljYXRpb24vZ3JwYytqc29uXCI7XG4vKipcbiAqIFBhcnNlIGEgZ1JQQyBDb250ZW50LVR5cGUgaGVhZGVyLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDb250ZW50VHlwZShjb250ZW50VHlwZSkge1xuICAgIGNvbnN0IG1hdGNoID0gY29udGVudFR5cGUgPT09IG51bGwgfHwgY29udGVudFR5cGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbnRlbnRUeXBlLm1hdGNoKGNvbnRlbnRUeXBlUmVnRXhwKTtcbiAgICBpZiAoIW1hdGNoKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGNvbnN0IGJpbmFyeSA9ICFtYXRjaFsxXTtcbiAgICByZXR1cm4geyBiaW5hcnkgfTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/gen/status_pb.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/gen/status_pb.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Status: () => (/* binding */ Status)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\");\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/any_pb.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * The `Status` type defines a logical error model that is suitable for different\n * programming environments, including REST APIs and RPC APIs. It is used by\n * [gRPC](https://github.com/grpc). The error model is designed to be:\n *\n * - Simple to use and understand for most users\n * - Flexible enough to meet unexpected needs\n *\n * # Overview\n *\n * The `Status` message contains three pieces of data: error code, error message,\n * and error details. The error code should be an enum value of\n * [google.rpc.Code][google.rpc.Code], but it may accept additional error codes if needed.  The\n * error message should be a developer-facing English message that helps\n * developers *understand* and *resolve* the error. If a localized user-facing\n * error message is needed, put the localized message in the error details or\n * localize it in the client. The optional error details may contain arbitrary\n * information about the error. There is a predefined set of error detail types\n * in the package `google.rpc` which can be used for common error conditions.\n *\n * # Language mapping\n *\n * The `Status` message is the logical representation of the error model, but it\n * is not necessarily the actual wire format. When the `Status` message is\n * exposed in different client libraries and different wire protocols, it can be\n * mapped differently. For example, it will likely be mapped to some exceptions\n * in Java, but more likely mapped to some error codes in C.\n *\n * # Other uses\n *\n * The error model and the `Status` message can be used in a variety of\n * environments, either with or without APIs, to provide a\n * consistent developer experience across different environments.\n *\n * Example uses of this error model include:\n *\n * - Partial errors. If a service needs to return partial errors to the client,\n *     it may embed the `Status` in the normal response to indicate the partial\n *     errors.\n *\n * - Workflow errors. A typical workflow has multiple steps. Each step may\n *     have a `Status` message for error reporting purpose.\n *\n * - Batch operations. If a client uses batch request and batch response, the\n *     `Status` message should be used directly inside batch response, one for\n *     each error sub-response.\n *\n * - Asynchronous operations. If an API call embeds asynchronous operation\n *     results in its response, the status of those operations should be\n *     represented directly using the `Status` message.\n *\n * - Logging. If some API errors are stored in logs, the message `Status` could\n *     be used directly after any stripping needed for security/privacy reasons.\n *\n * @generated from message google.rpc.Status\n */\nclass Status extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].\n         *\n         * @generated from field: int32 code = 1;\n         */\n        this.code = 0;\n        /**\n         * A developer-facing error message, which should be in English. Any\n         * user-facing error message should be localized and sent in the\n         * [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.\n         *\n         * @generated from field: string message = 2;\n         */\n        this.message = \"\";\n        /**\n         * A list of messages that carry the error details.  There will be a\n         * common set of message types for APIs to use.\n         *\n         * @generated from field: repeated google.protobuf.Any details = 3;\n         */\n        this.details = [];\n        _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Status().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Status().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Status().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.proto3.util.equals(Status, a, b);\n    }\n}\nStatus.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.proto3;\nStatus.typeName = \"google.rpc.Status\";\nStatus.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"code\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"message\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"details\", kind: \"message\", T: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.Any, repeated: true },\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/gen/status_pb.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/handler-factory.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/handler-factory.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHandlerFactory: () => (/* binding */ createHandlerFactory)\n/* harmony export */ });\n/* harmony import */ var _implementation_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../implementation.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/implementation.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./content-type.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n/* harmony import */ var _trailer_status_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./trailer-status.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\");\n/* harmony import */ var _parse_timeout_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./parse-timeout.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/parse-timeout.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../protocol/async-iterable.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _protocol_compression_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../protocol/compression.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\");\n/* harmony import */ var _protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protocol/content-type-matcher.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js\");\n/* harmony import */ var _protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../protocol/create-method-url.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../protocol/invoke-implementation.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js\");\n/* harmony import */ var _protocol_serialization_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../protocol/serialization.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol/universal-handler.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js\");\n/* harmony import */ var _protocol_universal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocol/universal.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst protocolName = \"grpc\";\nconst methodPost = \"POST\";\n/**\n * Create a factory that creates gRPC handlers.\n */\nfunction createHandlerFactory(options) {\n    const opt = (0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.validateUniversalHandlerOptions)(options);\n    function fact(spec) {\n        const h = createHandler(opt, spec);\n        return Object.assign(h, {\n            protocolNames: [protocolName],\n            allowedMethods: [methodPost],\n            supportedContentType: (0,_protocol_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_1__.contentTypeMatcher)(_content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeRegExp),\n            requestPath: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_3__.createMethodUrl)(\"/\", spec.service, spec.method),\n            service: spec.service,\n            method: spec.method,\n        });\n    }\n    fact.protocolName = protocolName;\n    return fact;\n}\nfunction createHandler(opt, spec) {\n    const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_4__.createMethodSerializationLookup)(spec.method, opt.binaryOptions, opt.jsonOptions, opt);\n    return async function handle(req) {\n        (0,_protocol_universal_js__WEBPACK_IMPORTED_MODULE_5__.assertByteStreamRequest)(req);\n        const type = (0,_content_type_js__WEBPACK_IMPORTED_MODULE_2__.parseContentType)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerContentType));\n        if (type == undefined) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_5__.uResponseUnsupportedMediaType;\n        }\n        if (req.method !== methodPost) {\n            return _protocol_universal_js__WEBPACK_IMPORTED_MODULE_5__.uResponseMethodNotAllowed;\n        }\n        const timeout = (0,_parse_timeout_js__WEBPACK_IMPORTED_MODULE_7__.parseTimeout)(req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerTimeout), opt.maxTimeoutMs);\n        const context = (0,_implementation_js__WEBPACK_IMPORTED_MODULE_8__.createHandlerContext)(Object.assign(Object.assign({}, spec), { requestMethod: req.method, protocolName, timeoutMs: timeout.timeoutMs, shutdownSignal: opt.shutdownSignal, requestSignal: req.signal, requestHeader: req.header, url: req.url, responseHeader: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerContentType]: type.binary ? _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeProto : _content_type_js__WEBPACK_IMPORTED_MODULE_2__.contentTypeJson,\n            }, responseTrailer: {\n                [_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerGrpcStatus]: _trailer_status_js__WEBPACK_IMPORTED_MODULE_9__.grpcStatusOk,\n            }, contextValues: req.contextValues }));\n        const compression = (0,_protocol_compression_js__WEBPACK_IMPORTED_MODULE_10__.compressionNegotiate)(opt.acceptCompression, req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerEncoding), req.header.get(_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerAcceptEncoding), _headers_js__WEBPACK_IMPORTED_MODULE_6__.headerAcceptEncoding);\n        if (compression.response) {\n            context.responseHeader.set(_headers_js__WEBPACK_IMPORTED_MODULE_6__.headerEncoding, compression.response.name);\n        }\n        // We split the pipeline into two parts: The request iterator, and the\n        // response iterator. We do this because the request iterator is responsible\n        // for parsing the request body, and we don't want write errors of the response\n        // iterator to affect the request iterator.\n        const inputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.pipe)(req.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformPrepend)(() => {\n            // raise compression error to serialize it as a trailer status\n            if (compression.error)\n                throw compression.error;\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error)\n                throw timeout.error;\n            return undefined;\n        }), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformDecompressEnvelope)(compression.request, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformParseEnvelope)(serialization.getI(type.binary)));\n        const it = (0,_protocol_invoke_implementation_js__WEBPACK_IMPORTED_MODULE_12__.transformInvokeImplementation)(spec, context, opt.interceptors)(inputIt)[Symbol.asyncIterator]();\n        const outputIt = (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.pipe)(\n        // We wrap the iterator in an async iterator to ensure that the\n        // abort signal is aborted when the iterator is done.\n        {\n            [Symbol.asyncIterator]() {\n                return {\n                    next: () => it.next(),\n                    throw: (e) => {\n                        var _a, _b;\n                        context.abort(e);\n                        return (_b = (_a = it.throw) === null || _a === void 0 ? void 0 : _a.call(it, e)) !== null && _b !== void 0 ? _b : Promise.reject({ done: true });\n                    },\n                    return: (v) => {\n                        var _a, _b;\n                        context.abort();\n                        return ((_b = (_a = it.return) === null || _a === void 0 ? void 0 : _a.call(it, v)) !== null && _b !== void 0 ? _b : Promise.resolve({ done: true, value: v }));\n                    },\n                };\n            },\n        }, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformSerializeEnvelope)(serialization.getO(type.binary)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformCompressEnvelope)(compression.response, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformJoinEnvelopes)(), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.transformCatchFinally)((e) => {\n            context.abort();\n            if (e instanceof _connect_error_js__WEBPACK_IMPORTED_MODULE_13__.ConnectError) {\n                (0,_trailer_status_js__WEBPACK_IMPORTED_MODULE_9__.setTrailerStatus)(context.responseTrailer, e);\n            }\n            else if (e !== undefined) {\n                (0,_trailer_status_js__WEBPACK_IMPORTED_MODULE_9__.setTrailerStatus)(context.responseTrailer, new _connect_error_js__WEBPACK_IMPORTED_MODULE_13__.ConnectError(\"internal error\", _code_js__WEBPACK_IMPORTED_MODULE_14__.Code.Internal, undefined, undefined, e));\n            }\n        }), { propagateDownStreamError: true });\n        return Object.assign(Object.assign({}, _protocol_universal_js__WEBPACK_IMPORTED_MODULE_5__.uResponseOk), { \n            // We wait for the first response body bytes before resolving, so that\n            // implementations have a chance to add headers before an adapter commits\n            // them to the wire.\n            body: await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_11__.untilFirst)(outputIt), header: context.responseHeader, trailer: context.responseTrailer });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/handler-factory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerAcceptEncoding: () => (/* binding */ headerAcceptEncoding),\n/* harmony export */   headerContentType: () => (/* binding */ headerContentType),\n/* harmony export */   headerEncoding: () => (/* binding */ headerEncoding),\n/* harmony export */   headerGrpcMessage: () => (/* binding */ headerGrpcMessage),\n/* harmony export */   headerGrpcStatus: () => (/* binding */ headerGrpcStatus),\n/* harmony export */   headerMessageType: () => (/* binding */ headerMessageType),\n/* harmony export */   headerStatusDetailsBin: () => (/* binding */ headerStatusDetailsBin),\n/* harmony export */   headerTimeout: () => (/* binding */ headerTimeout),\n/* harmony export */   headerUserAgent: () => (/* binding */ headerUserAgent)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nconst headerContentType = \"Content-Type\";\nconst headerEncoding = \"Grpc-Encoding\";\nconst headerAcceptEncoding = \"Grpc-Accept-Encoding\";\nconst headerTimeout = \"Grpc-Timeout\";\nconst headerGrpcStatus = \"Grpc-Status\";\nconst headerGrpcMessage = \"Grpc-Message\";\nconst headerStatusDetailsBin = \"Grpc-Status-Details-Bin\";\nconst headerMessageType = \"Grpc-Message-Type\";\nconst headerUserAgent = \"User-Agent\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL2hlYWRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sLWdycGNcXGhlYWRlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBoZWFkZXJDb250ZW50VHlwZSA9IFwiQ29udGVudC1UeXBlXCI7XG5leHBvcnQgY29uc3QgaGVhZGVyRW5jb2RpbmcgPSBcIkdycGMtRW5jb2RpbmdcIjtcbmV4cG9ydCBjb25zdCBoZWFkZXJBY2NlcHRFbmNvZGluZyA9IFwiR3JwYy1BY2NlcHQtRW5jb2RpbmdcIjtcbmV4cG9ydCBjb25zdCBoZWFkZXJUaW1lb3V0ID0gXCJHcnBjLVRpbWVvdXRcIjtcbmV4cG9ydCBjb25zdCBoZWFkZXJHcnBjU3RhdHVzID0gXCJHcnBjLVN0YXR1c1wiO1xuZXhwb3J0IGNvbnN0IGhlYWRlckdycGNNZXNzYWdlID0gXCJHcnBjLU1lc3NhZ2VcIjtcbmV4cG9ydCBjb25zdCBoZWFkZXJTdGF0dXNEZXRhaWxzQmluID0gXCJHcnBjLVN0YXR1cy1EZXRhaWxzLUJpblwiO1xuZXhwb3J0IGNvbnN0IGhlYWRlck1lc3NhZ2VUeXBlID0gXCJHcnBjLU1lc3NhZ2UtVHlwZVwiO1xuZXhwb3J0IGNvbnN0IGhlYWRlclVzZXJBZ2VudCA9IFwiVXNlci1BZ2VudFwiO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/http-status.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/http-status.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codeFromHttpStatus: () => (/* binding */ codeFromHttpStatus)\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Determine the gRPC-web error code for the given HTTP status code.\n * See https://github.com/grpc/grpc/blob/master/doc/http-grpc-status-mapping.md.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeFromHttpStatus(httpStatus) {\n    switch (httpStatus) {\n        case 400: // Bad Request\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Internal;\n        case 401: // Unauthorized\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unauthenticated;\n        case 403: // Forbidden\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.PermissionDenied;\n        case 404: // Not Found\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unimplemented;\n        case 429: // Too Many Requests\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        case 502: // Bad Gateway\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        case 503: // Service Unavailable\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        case 504: // Gateway Timeout\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unavailable;\n        default:\n            // 200 is UNKNOWN because there should be a grpc-status in case of truly OK response.\n            return _code_js__WEBPACK_IMPORTED_MODULE_0__.Code.Unknown;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL2h0dHAtc3RhdHVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsbUJBQW1CLDBDQUFJO0FBQ3ZCO0FBQ0EsbUJBQW1CLDBDQUFJO0FBQ3ZCO0FBQ0EsbUJBQW1CLDBDQUFJO0FBQ3ZCO0FBQ0EsbUJBQW1CLDBDQUFJO0FBQ3ZCO0FBQ0EsbUJBQW1CLDBDQUFJO0FBQ3ZCO0FBQ0EsbUJBQW1CLDBDQUFJO0FBQ3ZCO0FBQ0EsbUJBQW1CLDBDQUFJO0FBQ3ZCO0FBQ0EsbUJBQW1CLDBDQUFJO0FBQ3ZCO0FBQ0E7QUFDQSxtQkFBbUIsMENBQUk7QUFDdkI7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxhdHNcXG5vZGVfbW9kdWxlc1xcQGNvbm5lY3RycGNcXGNvbm5lY3RcXGRpc3RcXGVzbVxccHJvdG9jb2wtZ3JwY1xcaHR0cC1zdGF0dXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi4vY29kZS5qc1wiO1xuLyoqXG4gKiBEZXRlcm1pbmUgdGhlIGdSUEMtd2ViIGVycm9yIGNvZGUgZm9yIHRoZSBnaXZlbiBIVFRQIHN0YXR1cyBjb2RlLlxuICogU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ncnBjL2dycGMvYmxvYi9tYXN0ZXIvZG9jL2h0dHAtZ3JwYy1zdGF0dXMtbWFwcGluZy5tZC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvZGVGcm9tSHR0cFN0YXR1cyhodHRwU3RhdHVzKSB7XG4gICAgc3dpdGNoIChodHRwU3RhdHVzKSB7XG4gICAgICAgIGNhc2UgNDAwOiAvLyBCYWQgUmVxdWVzdFxuICAgICAgICAgICAgcmV0dXJuIENvZGUuSW50ZXJuYWw7XG4gICAgICAgIGNhc2UgNDAxOiAvLyBVbmF1dGhvcml6ZWRcbiAgICAgICAgICAgIHJldHVybiBDb2RlLlVuYXV0aGVudGljYXRlZDtcbiAgICAgICAgY2FzZSA0MDM6IC8vIEZvcmJpZGRlblxuICAgICAgICAgICAgcmV0dXJuIENvZGUuUGVybWlzc2lvbkRlbmllZDtcbiAgICAgICAgY2FzZSA0MDQ6IC8vIE5vdCBGb3VuZFxuICAgICAgICAgICAgcmV0dXJuIENvZGUuVW5pbXBsZW1lbnRlZDtcbiAgICAgICAgY2FzZSA0Mjk6IC8vIFRvbyBNYW55IFJlcXVlc3RzXG4gICAgICAgICAgICByZXR1cm4gQ29kZS5VbmF2YWlsYWJsZTtcbiAgICAgICAgY2FzZSA1MDI6IC8vIEJhZCBHYXRld2F5XG4gICAgICAgICAgICByZXR1cm4gQ29kZS5VbmF2YWlsYWJsZTtcbiAgICAgICAgY2FzZSA1MDM6IC8vIFNlcnZpY2UgVW5hdmFpbGFibGVcbiAgICAgICAgICAgIHJldHVybiBDb2RlLlVuYXZhaWxhYmxlO1xuICAgICAgICBjYXNlIDUwNDogLy8gR2F0ZXdheSBUaW1lb3V0XG4gICAgICAgICAgICByZXR1cm4gQ29kZS5VbmF2YWlsYWJsZTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIC8vIDIwMCBpcyBVTktOT1dOIGJlY2F1c2UgdGhlcmUgc2hvdWxkIGJlIGEgZ3JwYy1zdGF0dXMgaW4gY2FzZSBvZiB0cnVseSBPSyByZXNwb25zZS5cbiAgICAgICAgICAgIHJldHVybiBDb2RlLlVua25vd247XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/http-status.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/parse-timeout.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/parse-timeout.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseTimeout: () => (/* binding */ parseTimeout)\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Parse a gRPC Timeout (Deadline) header.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseTimeout(value, maxTimeoutMs) {\n    if (value === null) {\n        return {};\n    }\n    const results = /^(\\d{1,8})([HMSmun])$/.exec(value);\n    if (results === null) {\n        return {\n            error: new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`protocol error: invalid grpc timeout value: ${value}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument),\n        };\n    }\n    const unitToMultiplicand = {\n        H: 60 * 60 * 1000, // hour\n        M: 60 * 1000, // minute\n        S: 1000, // second\n        m: 1, // millisecond\n        u: 0.001, // microsecond\n        n: 0.000001, // nanosecond\n    };\n    const timeoutMs = unitToMultiplicand[results[2]] *\n        parseInt(results[1]);\n    if (timeoutMs > maxTimeoutMs) {\n        return {\n            timeoutMs: timeoutMs,\n            error: new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`timeout ${timeoutMs}ms must be <= ${maxTimeoutMs}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument),\n        };\n    }\n    return {\n        timeoutMs,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL3BhcnNlLXRpbWVvdXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDa0M7QUFDaUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLElBQUk7QUFDOUI7QUFDQTtBQUNBLHVCQUF1QiwyREFBWSxnREFBZ0QsTUFBTSxHQUFHLDBDQUFJO0FBQ2hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwyREFBWSxZQUFZLFVBQVUsZ0JBQWdCLGFBQWEsR0FBRywwQ0FBSTtBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sLWdycGNcXHBhcnNlLXRpbWVvdXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi4vY29kZS5qc1wiO1xuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4uL2Nvbm5lY3QtZXJyb3IuanNcIjtcbi8qKlxuICogUGFyc2UgYSBnUlBDIFRpbWVvdXQgKERlYWRsaW5lKSBoZWFkZXIuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVRpbWVvdXQodmFsdWUsIG1heFRpbWVvdXRNcykge1xuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdHMgPSAvXihcXGR7MSw4fSkoW0hNU211bl0pJC8uZXhlYyh2YWx1ZSk7XG4gICAgaWYgKHJlc3VsdHMgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGVycm9yOiBuZXcgQ29ubmVjdEVycm9yKGBwcm90b2NvbCBlcnJvcjogaW52YWxpZCBncnBjIHRpbWVvdXQgdmFsdWU6ICR7dmFsdWV9YCwgQ29kZS5JbnZhbGlkQXJndW1lbnQpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb25zdCB1bml0VG9NdWx0aXBsaWNhbmQgPSB7XG4gICAgICAgIEg6IDYwICogNjAgKiAxMDAwLCAvLyBob3VyXG4gICAgICAgIE06IDYwICogMTAwMCwgLy8gbWludXRlXG4gICAgICAgIFM6IDEwMDAsIC8vIHNlY29uZFxuICAgICAgICBtOiAxLCAvLyBtaWxsaXNlY29uZFxuICAgICAgICB1OiAwLjAwMSwgLy8gbWljcm9zZWNvbmRcbiAgICAgICAgbjogMC4wMDAwMDEsIC8vIG5hbm9zZWNvbmRcbiAgICB9O1xuICAgIGNvbnN0IHRpbWVvdXRNcyA9IHVuaXRUb011bHRpcGxpY2FuZFtyZXN1bHRzWzJdXSAqXG4gICAgICAgIHBhcnNlSW50KHJlc3VsdHNbMV0pO1xuICAgIGlmICh0aW1lb3V0TXMgPiBtYXhUaW1lb3V0TXMpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRpbWVvdXRNczogdGltZW91dE1zLFxuICAgICAgICAgICAgZXJyb3I6IG5ldyBDb25uZWN0RXJyb3IoYHRpbWVvdXQgJHt0aW1lb3V0TXN9bXMgbXVzdCBiZSA8PSAke21heFRpbWVvdXRNc31gLCBDb2RlLkludmFsaWRBcmd1bWVudCksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHRpbWVvdXRNcyxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/parse-timeout.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/request-header.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/request-header.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   requestHeader: () => (/* binding */ requestHeader),\n/* harmony export */   requestHeaderWithCompression: () => (/* binding */ requestHeaderWithCompression)\n/* harmony export */ });\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./content-type.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Creates headers for a gRPC request.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders) {\n    const result = new Headers(userProvidedHeaders !== null && userProvidedHeaders !== void 0 ? userProvidedHeaders : {});\n    result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerContentType, useBinaryFormat ? _content_type_js__WEBPACK_IMPORTED_MODULE_1__.contentTypeProto : _content_type_js__WEBPACK_IMPORTED_MODULE_1__.contentTypeJson);\n    // Note that we do not strictly comply with gRPC user agents.\n    // We use \"connect-es/1.2.3\" where gRPC would use \"grpc-es/1.2.3\".\n    // See https://github.com/grpc/grpc/blob/c462bb8d485fc1434ecfae438823ca8d14cf3154/doc/PROTOCOL-HTTP2.md#user-agents\n    result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerUserAgent, \"connect-es/1.6.1\");\n    if (timeoutMs !== undefined) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerTimeout, `${timeoutMs}m`);\n    }\n    // The gRPC-HTTP2 specification requires this - it flushes out proxies that\n    // don't support HTTP trailers.\n    result.set(\"Te\", \"trailers\");\n    return result;\n}\n/**\n * Creates headers for a gRPC request with compression.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeaderWithCompression(useBinaryFormat, timeoutMs, userProvidedHeaders, acceptCompression, sendCompression) {\n    const result = requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders);\n    if (sendCompression != null) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerEncoding, sendCompression.name);\n    }\n    if (acceptCompression.length > 0) {\n        result.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerAcceptEncoding, acceptCompression.map((c) => c.name).join(\",\"));\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL3JlcXVlc3QtaGVhZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN3SDtBQUNsRDtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCx3SEFBd0g7QUFDeEgsZUFBZSwwREFBaUIsb0JBQW9CLDhEQUFnQixHQUFHLDZEQUFlO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBLGVBQWUsd0RBQWU7QUFDOUI7QUFDQSxtQkFBbUIsc0RBQWEsS0FBSyxVQUFVO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxtQkFBbUIsdURBQWM7QUFDakM7QUFDQTtBQUNBLG1CQUFtQiw2REFBb0I7QUFDdkM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxccHJvamVjdHNcXGF0c1xcbm9kZV9tb2R1bGVzXFxAY29ubmVjdHJwY1xcY29ubmVjdFxcZGlzdFxcZXNtXFxwcm90b2NvbC1ncnBjXFxyZXF1ZXN0LWhlYWRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgaGVhZGVyQWNjZXB0RW5jb2RpbmcsIGhlYWRlckNvbnRlbnRUeXBlLCBoZWFkZXJFbmNvZGluZywgaGVhZGVyVGltZW91dCwgaGVhZGVyVXNlckFnZW50LCB9IGZyb20gXCIuL2hlYWRlcnMuanNcIjtcbmltcG9ydCB7IGNvbnRlbnRUeXBlSnNvbiwgY29udGVudFR5cGVQcm90byB9IGZyb20gXCIuL2NvbnRlbnQtdHlwZS5qc1wiO1xuLyoqXG4gKiBDcmVhdGVzIGhlYWRlcnMgZm9yIGEgZ1JQQyByZXF1ZXN0LlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVxdWVzdEhlYWRlcih1c2VCaW5hcnlGb3JtYXQsIHRpbWVvdXRNcywgdXNlclByb3ZpZGVkSGVhZGVycykge1xuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBIZWFkZXJzKHVzZXJQcm92aWRlZEhlYWRlcnMgIT09IG51bGwgJiYgdXNlclByb3ZpZGVkSGVhZGVycyAhPT0gdm9pZCAwID8gdXNlclByb3ZpZGVkSGVhZGVycyA6IHt9KTtcbiAgICByZXN1bHQuc2V0KGhlYWRlckNvbnRlbnRUeXBlLCB1c2VCaW5hcnlGb3JtYXQgPyBjb250ZW50VHlwZVByb3RvIDogY29udGVudFR5cGVKc29uKTtcbiAgICAvLyBOb3RlIHRoYXQgd2UgZG8gbm90IHN0cmljdGx5IGNvbXBseSB3aXRoIGdSUEMgdXNlciBhZ2VudHMuXG4gICAgLy8gV2UgdXNlIFwiY29ubmVjdC1lcy8xLjIuM1wiIHdoZXJlIGdSUEMgd291bGQgdXNlIFwiZ3JwYy1lcy8xLjIuM1wiLlxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZ3JwYy9ncnBjL2Jsb2IvYzQ2MmJiOGQ0ODVmYzE0MzRlY2ZhZTQzODgyM2NhOGQxNGNmMzE1NC9kb2MvUFJPVE9DT0wtSFRUUDIubWQjdXNlci1hZ2VudHNcbiAgICByZXN1bHQuc2V0KGhlYWRlclVzZXJBZ2VudCwgXCJjb25uZWN0LWVzLzEuNi4xXCIpO1xuICAgIGlmICh0aW1lb3V0TXMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXN1bHQuc2V0KGhlYWRlclRpbWVvdXQsIGAke3RpbWVvdXRNc31tYCk7XG4gICAgfVxuICAgIC8vIFRoZSBnUlBDLUhUVFAyIHNwZWNpZmljYXRpb24gcmVxdWlyZXMgdGhpcyAtIGl0IGZsdXNoZXMgb3V0IHByb3hpZXMgdGhhdFxuICAgIC8vIGRvbid0IHN1cHBvcnQgSFRUUCB0cmFpbGVycy5cbiAgICByZXN1bHQuc2V0KFwiVGVcIiwgXCJ0cmFpbGVyc1wiKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBDcmVhdGVzIGhlYWRlcnMgZm9yIGEgZ1JQQyByZXF1ZXN0IHdpdGggY29tcHJlc3Npb24uXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXF1ZXN0SGVhZGVyV2l0aENvbXByZXNzaW9uKHVzZUJpbmFyeUZvcm1hdCwgdGltZW91dE1zLCB1c2VyUHJvdmlkZWRIZWFkZXJzLCBhY2NlcHRDb21wcmVzc2lvbiwgc2VuZENvbXByZXNzaW9uKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gcmVxdWVzdEhlYWRlcih1c2VCaW5hcnlGb3JtYXQsIHRpbWVvdXRNcywgdXNlclByb3ZpZGVkSGVhZGVycyk7XG4gICAgaWYgKHNlbmRDb21wcmVzc2lvbiAhPSBudWxsKSB7XG4gICAgICAgIHJlc3VsdC5zZXQoaGVhZGVyRW5jb2RpbmcsIHNlbmRDb21wcmVzc2lvbi5uYW1lKTtcbiAgICB9XG4gICAgaWYgKGFjY2VwdENvbXByZXNzaW9uLmxlbmd0aCA+IDApIHtcbiAgICAgICAgcmVzdWx0LnNldChoZWFkZXJBY2NlcHRFbmNvZGluZywgYWNjZXB0Q29tcHJlc3Npb24ubWFwKChjKSA9PiBjLm5hbWUpLmpvaW4oXCIsXCIpKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/request-header.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   findTrailerError: () => (/* binding */ findTrailerError),\n/* harmony export */   grpcStatusOk: () => (/* binding */ grpcStatusOk),\n/* harmony export */   setTrailerStatus: () => (/* binding */ setTrailerStatus)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/any_pb.js\");\n/* harmony import */ var _gen_status_pb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gen/status_pb.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/gen/status_pb.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _http_headers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../http-headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/http-headers.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n/**\n * The value of the Grpc-Status header or trailer in case of success.\n * Used by the gRPC and gRPC-web protocols.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst grpcStatusOk = \"0\";\n/**\n * Sets the fields \"grpc-status\" and \"grpc-message\" in the given\n * Headers object.\n * If an error is given and contains error details, the function\n * will also set the field \"grpc-status-details-bin\" with an encoded\n * google.rpc.Status message including the error details.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction setTrailerStatus(target, error) {\n    if (error) {\n        target.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcStatus, error.code.toString(10));\n        target.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcMessage, encodeURIComponent(error.rawMessage));\n        if (error.details.length > 0) {\n            const status = new _gen_status_pb_js__WEBPACK_IMPORTED_MODULE_1__.Status({\n                code: error.code,\n                message: error.rawMessage,\n                details: error.details.map((value) => \"getType\" in value\n                    ? _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.Any.pack(value)\n                    : new _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.Any({\n                        typeUrl: `type.googleapis.com/${value.type}`,\n                        value: value.value,\n                    })),\n            });\n            target.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStatusDetailsBin, (0,_http_headers_js__WEBPACK_IMPORTED_MODULE_3__.encodeBinaryHeader)(status));\n        }\n    }\n    else {\n        target.set(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcStatus, grpcStatusOk.toString());\n    }\n    return target;\n}\n/**\n * Find an error status in the given Headers object, which can be either\n * a trailer, or a header (as allowed for so-called trailers-only responses).\n * The field \"grpc-status-details-bin\" is inspected, and if not present,\n * the fields \"grpc-status\" and \"grpc-message\" are used.\n * Returns an error only if the gRPC status code is > 0.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction findTrailerError(headerOrTrailer) {\n    // TODO\n    // let code: Code;\n    // let message: string = \"\";\n    var _a;\n    // Prefer the protobuf-encoded data to the grpc-status header.\n    const statusBytes = headerOrTrailer.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerStatusDetailsBin);\n    if (statusBytes != null) {\n        const status = (0,_http_headers_js__WEBPACK_IMPORTED_MODULE_3__.decodeBinaryHeader)(statusBytes, _gen_status_pb_js__WEBPACK_IMPORTED_MODULE_1__.Status);\n        if (status.code == 0) {\n            return undefined;\n        }\n        const error = new _connect_error_js__WEBPACK_IMPORTED_MODULE_4__.ConnectError(status.message, status.code, headerOrTrailer);\n        error.details = status.details.map((any) => ({\n            type: any.typeUrl.substring(any.typeUrl.lastIndexOf(\"/\") + 1),\n            value: any.value,\n        }));\n        return error;\n    }\n    const grpcStatus = headerOrTrailer.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcStatus);\n    if (grpcStatus != null) {\n        if (grpcStatus === grpcStatusOk) {\n            return undefined;\n        }\n        const code = parseInt(grpcStatus, 10);\n        if (code in _code_js__WEBPACK_IMPORTED_MODULE_5__.Code) {\n            return new _connect_error_js__WEBPACK_IMPORTED_MODULE_4__.ConnectError(decodeURIComponent((_a = headerOrTrailer.get(_headers_js__WEBPACK_IMPORTED_MODULE_0__.headerGrpcMessage)) !== null && _a !== void 0 ? _a : \"\"), code, headerOrTrailer);\n        }\n        return new _connect_error_js__WEBPACK_IMPORTED_MODULE_4__.ConnectError(`invalid grpc-status: ${grpcStatus}`, _code_js__WEBPACK_IMPORTED_MODULE_5__.Code.Internal, headerOrTrailer);\n    }\n    return undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL3RyYWlsZXItc3RhdHVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3lDO0FBQ0c7QUFDTztBQUN5QjtBQUMxQztBQUMwRDtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxtQkFBbUIseURBQWdCO0FBQ25DLG1CQUFtQiwwREFBaUI7QUFDcEM7QUFDQSwrQkFBK0IscURBQU07QUFDckM7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLG1EQUFHO0FBQ3pCLDBCQUEwQixtREFBRztBQUM3Qix3REFBd0QsV0FBVztBQUNuRTtBQUNBLHFCQUFxQjtBQUNyQixhQUFhO0FBQ2IsdUJBQXVCLCtEQUFzQixFQUFFLG9FQUFrQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIseURBQWdCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QywrREFBc0I7QUFDbEU7QUFDQSx1QkFBdUIsb0VBQWtCLGNBQWMscURBQU07QUFDN0Q7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJEQUFZO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsMkNBQTJDLHlEQUFnQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDBDQUFJO0FBQ3hCLHVCQUF1QiwyREFBWSw4Q0FBOEMsMERBQWlCO0FBQ2xHO0FBQ0EsbUJBQW1CLDJEQUFZLHlCQUF5QixXQUFXLEdBQUcsMENBQUk7QUFDMUU7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxccHJvamVjdHNcXGF0c1xcbm9kZV9tb2R1bGVzXFxAY29ubmVjdHJwY1xcY29ubmVjdFxcZGlzdFxcZXNtXFxwcm90b2NvbC1ncnBjXFx0cmFpbGVyLXN0YXR1cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgQW55IH0gZnJvbSBcIkBidWZidWlsZC9wcm90b2J1ZlwiO1xuaW1wb3J0IHsgU3RhdHVzIH0gZnJvbSBcIi4vZ2VuL3N0YXR1c19wYi5qc1wiO1xuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4uL2Nvbm5lY3QtZXJyb3IuanNcIjtcbmltcG9ydCB7IGRlY29kZUJpbmFyeUhlYWRlciwgZW5jb2RlQmluYXJ5SGVhZGVyIH0gZnJvbSBcIi4uL2h0dHAtaGVhZGVycy5qc1wiO1xuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuLi9jb2RlLmpzXCI7XG5pbXBvcnQgeyBoZWFkZXJHcnBjTWVzc2FnZSwgaGVhZGVyR3JwY1N0YXR1cywgaGVhZGVyU3RhdHVzRGV0YWlsc0JpbiwgfSBmcm9tIFwiLi9oZWFkZXJzLmpzXCI7XG4vKipcbiAqIFRoZSB2YWx1ZSBvZiB0aGUgR3JwYy1TdGF0dXMgaGVhZGVyIG9yIHRyYWlsZXIgaW4gY2FzZSBvZiBzdWNjZXNzLlxuICogVXNlZCBieSB0aGUgZ1JQQyBhbmQgZ1JQQy13ZWIgcHJvdG9jb2xzLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgZ3JwY1N0YXR1c09rID0gXCIwXCI7XG4vKipcbiAqIFNldHMgdGhlIGZpZWxkcyBcImdycGMtc3RhdHVzXCIgYW5kIFwiZ3JwYy1tZXNzYWdlXCIgaW4gdGhlIGdpdmVuXG4gKiBIZWFkZXJzIG9iamVjdC5cbiAqIElmIGFuIGVycm9yIGlzIGdpdmVuIGFuZCBjb250YWlucyBlcnJvciBkZXRhaWxzLCB0aGUgZnVuY3Rpb25cbiAqIHdpbGwgYWxzbyBzZXQgdGhlIGZpZWxkIFwiZ3JwYy1zdGF0dXMtZGV0YWlscy1iaW5cIiB3aXRoIGFuIGVuY29kZWRcbiAqIGdvb2dsZS5ycGMuU3RhdHVzIG1lc3NhZ2UgaW5jbHVkaW5nIHRoZSBlcnJvciBkZXRhaWxzLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0VHJhaWxlclN0YXR1cyh0YXJnZXQsIGVycm9yKSB7XG4gICAgaWYgKGVycm9yKSB7XG4gICAgICAgIHRhcmdldC5zZXQoaGVhZGVyR3JwY1N0YXR1cywgZXJyb3IuY29kZS50b1N0cmluZygxMCkpO1xuICAgICAgICB0YXJnZXQuc2V0KGhlYWRlckdycGNNZXNzYWdlLCBlbmNvZGVVUklDb21wb25lbnQoZXJyb3IucmF3TWVzc2FnZSkpO1xuICAgICAgICBpZiAoZXJyb3IuZGV0YWlscy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBjb25zdCBzdGF0dXMgPSBuZXcgU3RhdHVzKHtcbiAgICAgICAgICAgICAgICBjb2RlOiBlcnJvci5jb2RlLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGVycm9yLnJhd01lc3NhZ2UsXG4gICAgICAgICAgICAgICAgZGV0YWlsczogZXJyb3IuZGV0YWlscy5tYXAoKHZhbHVlKSA9PiBcImdldFR5cGVcIiBpbiB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICA/IEFueS5wYWNrKHZhbHVlKVxuICAgICAgICAgICAgICAgICAgICA6IG5ldyBBbnkoe1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZVVybDogYHR5cGUuZ29vZ2xlYXBpcy5jb20vJHt2YWx1ZS50eXBlfWAsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUudmFsdWUsXG4gICAgICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGFyZ2V0LnNldChoZWFkZXJTdGF0dXNEZXRhaWxzQmluLCBlbmNvZGVCaW5hcnlIZWFkZXIoc3RhdHVzKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRhcmdldC5zZXQoaGVhZGVyR3JwY1N0YXR1cywgZ3JwY1N0YXR1c09rLnRvU3RyaW5nKCkpO1xuICAgIH1cbiAgICByZXR1cm4gdGFyZ2V0O1xufVxuLyoqXG4gKiBGaW5kIGFuIGVycm9yIHN0YXR1cyBpbiB0aGUgZ2l2ZW4gSGVhZGVycyBvYmplY3QsIHdoaWNoIGNhbiBiZSBlaXRoZXJcbiAqIGEgdHJhaWxlciwgb3IgYSBoZWFkZXIgKGFzIGFsbG93ZWQgZm9yIHNvLWNhbGxlZCB0cmFpbGVycy1vbmx5IHJlc3BvbnNlcykuXG4gKiBUaGUgZmllbGQgXCJncnBjLXN0YXR1cy1kZXRhaWxzLWJpblwiIGlzIGluc3BlY3RlZCwgYW5kIGlmIG5vdCBwcmVzZW50LFxuICogdGhlIGZpZWxkcyBcImdycGMtc3RhdHVzXCIgYW5kIFwiZ3JwYy1tZXNzYWdlXCIgYXJlIHVzZWQuXG4gKiBSZXR1cm5zIGFuIGVycm9yIG9ubHkgaWYgdGhlIGdSUEMgc3RhdHVzIGNvZGUgaXMgPiAwLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZmluZFRyYWlsZXJFcnJvcihoZWFkZXJPclRyYWlsZXIpIHtcbiAgICAvLyBUT0RPXG4gICAgLy8gbGV0IGNvZGU6IENvZGU7XG4gICAgLy8gbGV0IG1lc3NhZ2U6IHN0cmluZyA9IFwiXCI7XG4gICAgdmFyIF9hO1xuICAgIC8vIFByZWZlciB0aGUgcHJvdG9idWYtZW5jb2RlZCBkYXRhIHRvIHRoZSBncnBjLXN0YXR1cyBoZWFkZXIuXG4gICAgY29uc3Qgc3RhdHVzQnl0ZXMgPSBoZWFkZXJPclRyYWlsZXIuZ2V0KGhlYWRlclN0YXR1c0RldGFpbHNCaW4pO1xuICAgIGlmIChzdGF0dXNCeXRlcyAhPSBudWxsKSB7XG4gICAgICAgIGNvbnN0IHN0YXR1cyA9IGRlY29kZUJpbmFyeUhlYWRlcihzdGF0dXNCeXRlcywgU3RhdHVzKTtcbiAgICAgICAgaWYgKHN0YXR1cy5jb2RlID09IDApIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgQ29ubmVjdEVycm9yKHN0YXR1cy5tZXNzYWdlLCBzdGF0dXMuY29kZSwgaGVhZGVyT3JUcmFpbGVyKTtcbiAgICAgICAgZXJyb3IuZGV0YWlscyA9IHN0YXR1cy5kZXRhaWxzLm1hcCgoYW55KSA9PiAoe1xuICAgICAgICAgICAgdHlwZTogYW55LnR5cGVVcmwuc3Vic3RyaW5nKGFueS50eXBlVXJsLmxhc3RJbmRleE9mKFwiL1wiKSArIDEpLFxuICAgICAgICAgICAgdmFsdWU6IGFueS52YWx1ZSxcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgfVxuICAgIGNvbnN0IGdycGNTdGF0dXMgPSBoZWFkZXJPclRyYWlsZXIuZ2V0KGhlYWRlckdycGNTdGF0dXMpO1xuICAgIGlmIChncnBjU3RhdHVzICE9IG51bGwpIHtcbiAgICAgICAgaWYgKGdycGNTdGF0dXMgPT09IGdycGNTdGF0dXNPaykge1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb2RlID0gcGFyc2VJbnQoZ3JwY1N0YXR1cywgMTApO1xuICAgICAgICBpZiAoY29kZSBpbiBDb2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IENvbm5lY3RFcnJvcihkZWNvZGVVUklDb21wb25lbnQoKF9hID0gaGVhZGVyT3JUcmFpbGVyLmdldChoZWFkZXJHcnBjTWVzc2FnZSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFwiXCIpLCBjb2RlLCBoZWFkZXJPclRyYWlsZXIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgQ29ubmVjdEVycm9yKGBpbnZhbGlkIGdycGMtc3RhdHVzOiAke2dycGNTdGF0dXN9YCwgQ29kZS5JbnRlcm5hbCwgaGVhZGVyT3JUcmFpbGVyKTtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/transport.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/transport.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTransport: () => (/* binding */ createTransport)\n/* harmony export */ });\n/* harmony import */ var _request_header_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request-header.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/request-header.js\");\n/* harmony import */ var _validate_response_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validate-response.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-response.js\");\n/* harmony import */ var _validate_trailer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./validate-trailer.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-trailer.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocol/async-iterable.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\");\n/* harmony import */ var _protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../protocol/create-method-url.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\");\n/* harmony import */ var _protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../protocol/run-call.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js\");\n/* harmony import */ var _protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../protocol/serialization.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\");\n/* harmony import */ var _context_values_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../context-values.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/context-values.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncDelegator = (undefined && undefined.__asyncDelegator) || function (o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n};\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a Transport for the gRPC protocol.\n */\nfunction createTransport(opt) {\n    return {\n        async unary(service, method, signal, timeoutMs, header, message, contextValues) {\n            const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? opt.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return await (0,_protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__.runUnaryCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: false,\n                    service,\n                    method,\n                    url: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0,_request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeaderWithCompression)(opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_4__.createContextValues)(),\n                    message,\n                },\n                next: async (req) => {\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.pipe)((0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.createAsyncIterable)([req.message]), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformJoinEnvelopes)(), {\n                            propagateDownStreamError: true,\n                        }),\n                    });\n                    const { compression, headerError } = (0,_validate_response_js__WEBPACK_IMPORTED_MODULE_6__.validateResponseWithCompression)(opt.acceptCompression, uRes.status, uRes.header);\n                    const message = await (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.pipeTo)(uRes.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat)), async (iterable) => {\n                        var _a, e_1, _b, _c;\n                        let message;\n                        try {\n                            for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = await iterable_1.next(), _a = iterable_1_1.done, !_a; _d = true) {\n                                _c = iterable_1_1.value;\n                                _d = false;\n                                const chunk = _c;\n                                if (message !== undefined) {\n                                    throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_7__.ConnectError(\"protocol error: received extra output message for unary method\", _code_js__WEBPACK_IMPORTED_MODULE_8__.Code.Unimplemented);\n                                }\n                                message = chunk;\n                            }\n                        }\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                        finally {\n                            try {\n                                if (!_d && !_a && (_b = iterable_1.return)) await _b.call(iterable_1);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                        }\n                        return message;\n                    }, { propagateDownStreamError: false });\n                    (0,_validate_trailer_js__WEBPACK_IMPORTED_MODULE_9__.validateTrailer)(uRes.trailer, uRes.header);\n                    if (message === undefined) {\n                        // Trailers only response\n                        if (headerError) {\n                            throw headerError;\n                        }\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_7__.ConnectError(\"protocol error: missing output message for unary method\", uRes.trailer.has(_headers_js__WEBPACK_IMPORTED_MODULE_10__.headerGrpcStatus)\n                            ? _code_js__WEBPACK_IMPORTED_MODULE_8__.Code.Unimplemented\n                            : _code_js__WEBPACK_IMPORTED_MODULE_8__.Code.Unknown);\n                    }\n                    if (headerError) {\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_7__.ConnectError(\"protocol error: received output message for unary method with error status\", _code_js__WEBPACK_IMPORTED_MODULE_8__.Code.Unknown);\n                    }\n                    return {\n                        stream: false,\n                        service,\n                        method,\n                        header: uRes.header,\n                        message,\n                        trailer: uRes.trailer,\n                    };\n                },\n            });\n        },\n        async stream(service, method, signal, timeoutMs, header, input, contextValues) {\n            const serialization = (0,_protocol_serialization_js__WEBPACK_IMPORTED_MODULE_0__.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            timeoutMs =\n                timeoutMs === undefined\n                    ? opt.defaultTimeoutMs\n                    : timeoutMs <= 0\n                        ? undefined\n                        : timeoutMs;\n            return (0,_protocol_run_call_js__WEBPACK_IMPORTED_MODULE_1__.runStreamingCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: true,\n                    service,\n                    method,\n                    url: (0,_protocol_create_method_url_js__WEBPACK_IMPORTED_MODULE_2__.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0,_request_header_js__WEBPACK_IMPORTED_MODULE_3__.requestHeaderWithCompression)(opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression),\n                    contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : (0,_context_values_js__WEBPACK_IMPORTED_MODULE_4__.createContextValues)(),\n                    message: input,\n                },\n                next: async (req) => {\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.pipe)(req.message, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformJoinEnvelopes)(), { propagateDownStreamError: true }),\n                    });\n                    const { compression, foundStatus, headerError } = (0,_validate_response_js__WEBPACK_IMPORTED_MODULE_6__.validateResponseWithCompression)(opt.acceptCompression, uRes.status, uRes.header);\n                    if (headerError) {\n                        throw headerError;\n                    }\n                    const res = Object.assign(Object.assign({}, req), { header: uRes.header, trailer: uRes.trailer, message: (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.pipe)(uRes.body, (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformSplitEnvelope)(opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0,_protocol_async_iterable_js__WEBPACK_IMPORTED_MODULE_5__.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat)), function (iterable) {\n                            return __asyncGenerator(this, arguments, function* () {\n                                yield __await(yield* __asyncDelegator(__asyncValues(iterable)));\n                                if (!foundStatus) {\n                                    (0,_validate_trailer_js__WEBPACK_IMPORTED_MODULE_9__.validateTrailer)(uRes.trailer, uRes.header);\n                                }\n                            });\n                        }, { propagateDownStreamError: true }) });\n                    return res;\n                },\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/transport.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-response.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-response.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateResponse: () => (/* binding */ validateResponse),\n/* harmony export */   validateResponseWithCompression: () => (/* binding */ validateResponseWithCompression)\n/* harmony export */ });\n/* harmony import */ var _http_status_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./http-status.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/http-status.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _trailer_status_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./trailer-status.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n/* harmony import */ var _content_type_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./content-type.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/content-type.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n/**\n * Validates response status and header for the gRPC protocol.\n * Throws a ConnectError if the header contains an error status,\n * or if the HTTP status indicates an error.\n *\n * Returns an object that indicates whether a gRPC status was found\n * in the response header. In this case, clients can not expect a\n * trailer.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateResponse(status, headers) {\n    if (status != 200) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`HTTP ${status}`, (0,_http_status_js__WEBPACK_IMPORTED_MODULE_1__.codeFromHttpStatus)(status), headers);\n    }\n    const mimeType = headers.get(_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerContentType);\n    const parsedType = (0,_content_type_js__WEBPACK_IMPORTED_MODULE_3__.parseContentType)(mimeType);\n    if (parsedType == undefined) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`unsupported content type ${mimeType}`, _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unknown);\n    }\n    return {\n        foundStatus: headers.has(_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerGrpcStatus),\n        headerError: (0,_trailer_status_js__WEBPACK_IMPORTED_MODULE_5__.findTrailerError)(headers),\n    };\n}\n/**\n * Validates response status and header for the gRPC protocol.\n * This function is identical to validateResponse(), but also verifies\n * that a given encoding header is acceptable.\n *\n * Returns an object with the response compression, and a boolean\n * indicating whether a gRPC status was found in the response header\n * (in this case, clients can not expect a trailer).\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateResponseWithCompression(acceptCompression, status, headers) {\n    const { foundStatus, headerError } = validateResponse(status, headers);\n    let compression;\n    const encoding = headers.get(_headers_js__WEBPACK_IMPORTED_MODULE_2__.headerEncoding);\n    if (encoding !== null && encoding.toLowerCase() !== \"identity\") {\n        compression = acceptCompression.find((c) => c.name === encoding);\n        if (!compression) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`unsupported response encoding \"${encoding}\"`, _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Internal, headers);\n        }\n    }\n    return {\n        foundStatus,\n        compression,\n        headerError,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL3ZhbGlkYXRlLXJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDc0Q7QUFDSDtBQUNJO0FBQ3JCO0FBQ2tEO0FBQy9CO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esa0JBQWtCLDJEQUFZLFNBQVMsT0FBTyxHQUFHLG1FQUFrQjtBQUNuRTtBQUNBLGlDQUFpQywwREFBaUI7QUFDbEQsdUJBQXVCLGtFQUFnQjtBQUN2QztBQUNBLGtCQUFrQiwyREFBWSw2QkFBNkIsU0FBUyxHQUFHLDBDQUFJO0FBQzNFO0FBQ0E7QUFDQSxpQ0FBaUMseURBQWdCO0FBQ2pELHFCQUFxQixvRUFBZ0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksMkJBQTJCO0FBQ3ZDO0FBQ0EsaUNBQWlDLHVEQUFjO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyREFBWSxtQ0FBbUMsU0FBUyxJQUFJLDBDQUFJO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sLWdycGNcXHZhbGlkYXRlLXJlc3BvbnNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBjb2RlRnJvbUh0dHBTdGF0dXMgfSBmcm9tIFwiLi9odHRwLXN0YXR1cy5qc1wiO1xuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4uL2Nvbm5lY3QtZXJyb3IuanNcIjtcbmltcG9ydCB7IGZpbmRUcmFpbGVyRXJyb3IgfSBmcm9tIFwiLi90cmFpbGVyLXN0YXR1cy5qc1wiO1xuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuLi9jb2RlLmpzXCI7XG5pbXBvcnQgeyBoZWFkZXJDb250ZW50VHlwZSwgaGVhZGVyRW5jb2RpbmcsIGhlYWRlckdycGNTdGF0dXMsIH0gZnJvbSBcIi4vaGVhZGVycy5qc1wiO1xuaW1wb3J0IHsgcGFyc2VDb250ZW50VHlwZSB9IGZyb20gXCIuL2NvbnRlbnQtdHlwZS5qc1wiO1xuLyoqXG4gKiBWYWxpZGF0ZXMgcmVzcG9uc2Ugc3RhdHVzIGFuZCBoZWFkZXIgZm9yIHRoZSBnUlBDIHByb3RvY29sLlxuICogVGhyb3dzIGEgQ29ubmVjdEVycm9yIGlmIHRoZSBoZWFkZXIgY29udGFpbnMgYW4gZXJyb3Igc3RhdHVzLFxuICogb3IgaWYgdGhlIEhUVFAgc3RhdHVzIGluZGljYXRlcyBhbiBlcnJvci5cbiAqXG4gKiBSZXR1cm5zIGFuIG9iamVjdCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIGEgZ1JQQyBzdGF0dXMgd2FzIGZvdW5kXG4gKiBpbiB0aGUgcmVzcG9uc2UgaGVhZGVyLiBJbiB0aGlzIGNhc2UsIGNsaWVudHMgY2FuIG5vdCBleHBlY3QgYVxuICogdHJhaWxlci5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlUmVzcG9uc2Uoc3RhdHVzLCBoZWFkZXJzKSB7XG4gICAgaWYgKHN0YXR1cyAhPSAyMDApIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgSFRUUCAke3N0YXR1c31gLCBjb2RlRnJvbUh0dHBTdGF0dXMoc3RhdHVzKSwgaGVhZGVycyk7XG4gICAgfVxuICAgIGNvbnN0IG1pbWVUeXBlID0gaGVhZGVycy5nZXQoaGVhZGVyQ29udGVudFR5cGUpO1xuICAgIGNvbnN0IHBhcnNlZFR5cGUgPSBwYXJzZUNvbnRlbnRUeXBlKG1pbWVUeXBlKTtcbiAgICBpZiAocGFyc2VkVHlwZSA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgdW5zdXBwb3J0ZWQgY29udGVudCB0eXBlICR7bWltZVR5cGV9YCwgQ29kZS5Vbmtub3duKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZm91bmRTdGF0dXM6IGhlYWRlcnMuaGFzKGhlYWRlckdycGNTdGF0dXMpLFxuICAgICAgICBoZWFkZXJFcnJvcjogZmluZFRyYWlsZXJFcnJvcihoZWFkZXJzKSxcbiAgICB9O1xufVxuLyoqXG4gKiBWYWxpZGF0ZXMgcmVzcG9uc2Ugc3RhdHVzIGFuZCBoZWFkZXIgZm9yIHRoZSBnUlBDIHByb3RvY29sLlxuICogVGhpcyBmdW5jdGlvbiBpcyBpZGVudGljYWwgdG8gdmFsaWRhdGVSZXNwb25zZSgpLCBidXQgYWxzbyB2ZXJpZmllc1xuICogdGhhdCBhIGdpdmVuIGVuY29kaW5nIGhlYWRlciBpcyBhY2NlcHRhYmxlLlxuICpcbiAqIFJldHVybnMgYW4gb2JqZWN0IHdpdGggdGhlIHJlc3BvbnNlIGNvbXByZXNzaW9uLCBhbmQgYSBib29sZWFuXG4gKiBpbmRpY2F0aW5nIHdoZXRoZXIgYSBnUlBDIHN0YXR1cyB3YXMgZm91bmQgaW4gdGhlIHJlc3BvbnNlIGhlYWRlclxuICogKGluIHRoaXMgY2FzZSwgY2xpZW50cyBjYW4gbm90IGV4cGVjdCBhIHRyYWlsZXIpLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVSZXNwb25zZVdpdGhDb21wcmVzc2lvbihhY2NlcHRDb21wcmVzc2lvbiwgc3RhdHVzLCBoZWFkZXJzKSB7XG4gICAgY29uc3QgeyBmb3VuZFN0YXR1cywgaGVhZGVyRXJyb3IgfSA9IHZhbGlkYXRlUmVzcG9uc2Uoc3RhdHVzLCBoZWFkZXJzKTtcbiAgICBsZXQgY29tcHJlc3Npb247XG4gICAgY29uc3QgZW5jb2RpbmcgPSBoZWFkZXJzLmdldChoZWFkZXJFbmNvZGluZyk7XG4gICAgaWYgKGVuY29kaW5nICE9PSBudWxsICYmIGVuY29kaW5nLnRvTG93ZXJDYXNlKCkgIT09IFwiaWRlbnRpdHlcIikge1xuICAgICAgICBjb21wcmVzc2lvbiA9IGFjY2VwdENvbXByZXNzaW9uLmZpbmQoKGMpID0+IGMubmFtZSA9PT0gZW5jb2RpbmcpO1xuICAgICAgICBpZiAoIWNvbXByZXNzaW9uKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKGB1bnN1cHBvcnRlZCByZXNwb25zZSBlbmNvZGluZyBcIiR7ZW5jb2Rpbmd9XCJgLCBDb2RlLkludGVybmFsLCBoZWFkZXJzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBmb3VuZFN0YXR1cyxcbiAgICAgICAgY29tcHJlc3Npb24sXG4gICAgICAgIGhlYWRlckVycm9yLFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-response.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-trailer.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-trailer.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateTrailer: () => (/* binding */ validateTrailer)\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./headers.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\");\n/* harmony import */ var _trailer_status_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./trailer-status.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * Validates a trailer for the gRPC and the gRPC-web protocol.\n *\n * If the trailer contains an error status, a ConnectError is\n * thrown. It will include trailer and header in the error's\n * \"metadata\" property.\n *\n * Throws a ConnectError with code \"internal\" if neither the trailer\n * nor the header contain the Grpc-Status field.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateTrailer(trailer, header) {\n    const err = (0,_trailer_status_js__WEBPACK_IMPORTED_MODULE_0__.findTrailerError)(trailer);\n    if (err) {\n        header.forEach((value, key) => {\n            err.metadata.append(key, value);\n        });\n        throw err;\n    }\n    if (!header.has(_headers_js__WEBPACK_IMPORTED_MODULE_1__.headerGrpcStatus) && !trailer.has(_headers_js__WEBPACK_IMPORTED_MODULE_1__.headerGrpcStatus)) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_2__.ConnectError(\"protocol error: missing status\", _code_js__WEBPACK_IMPORTED_MODULE_3__.Code.Internal);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC1ncnBjL3ZhbGlkYXRlLXRyYWlsZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNrQztBQUNpQjtBQUNIO0FBQ087QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxnQkFBZ0Isb0VBQWdCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esb0JBQW9CLHlEQUFnQixrQkFBa0IseURBQWdCO0FBQ3RFLGtCQUFrQiwyREFBWSxtQ0FBbUMsMENBQUk7QUFDckU7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxhdHNcXG5vZGVfbW9kdWxlc1xcQGNvbm5lY3RycGNcXGNvbm5lY3RcXGRpc3RcXGVzbVxccHJvdG9jb2wtZ3JwY1xcdmFsaWRhdGUtdHJhaWxlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuLi9jb2RlLmpzXCI7XG5pbXBvcnQgeyBDb25uZWN0RXJyb3IgfSBmcm9tIFwiLi4vY29ubmVjdC1lcnJvci5qc1wiO1xuaW1wb3J0IHsgaGVhZGVyR3JwY1N0YXR1cyB9IGZyb20gXCIuL2hlYWRlcnMuanNcIjtcbmltcG9ydCB7IGZpbmRUcmFpbGVyRXJyb3IgfSBmcm9tIFwiLi90cmFpbGVyLXN0YXR1cy5qc1wiO1xuLyoqXG4gKiBWYWxpZGF0ZXMgYSB0cmFpbGVyIGZvciB0aGUgZ1JQQyBhbmQgdGhlIGdSUEMtd2ViIHByb3RvY29sLlxuICpcbiAqIElmIHRoZSB0cmFpbGVyIGNvbnRhaW5zIGFuIGVycm9yIHN0YXR1cywgYSBDb25uZWN0RXJyb3IgaXNcbiAqIHRocm93bi4gSXQgd2lsbCBpbmNsdWRlIHRyYWlsZXIgYW5kIGhlYWRlciBpbiB0aGUgZXJyb3Inc1xuICogXCJtZXRhZGF0YVwiIHByb3BlcnR5LlxuICpcbiAqIFRocm93cyBhIENvbm5lY3RFcnJvciB3aXRoIGNvZGUgXCJpbnRlcm5hbFwiIGlmIG5laXRoZXIgdGhlIHRyYWlsZXJcbiAqIG5vciB0aGUgaGVhZGVyIGNvbnRhaW4gdGhlIEdycGMtU3RhdHVzIGZpZWxkLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVUcmFpbGVyKHRyYWlsZXIsIGhlYWRlcikge1xuICAgIGNvbnN0IGVyciA9IGZpbmRUcmFpbGVyRXJyb3IodHJhaWxlcik7XG4gICAgaWYgKGVycikge1xuICAgICAgICBoZWFkZXIuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICAgICAgZXJyLm1ldGFkYXRhLmFwcGVuZChrZXksIHZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRocm93IGVycjtcbiAgICB9XG4gICAgaWYgKCFoZWFkZXIuaGFzKGhlYWRlckdycGNTdGF0dXMpICYmICF0cmFpbGVyLmhhcyhoZWFkZXJHcnBjU3RhdHVzKSkge1xuICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKFwicHJvdG9jb2wgZXJyb3I6IG1pc3Npbmcgc3RhdHVzXCIsIENvZGUuSW50ZXJuYWwpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-trailer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAsyncIterable: () => (/* binding */ createAsyncIterable),\n/* harmony export */   createWritableIterable: () => (/* binding */ createWritableIterable),\n/* harmony export */   makeIterableAbortable: () => (/* binding */ makeIterableAbortable),\n/* harmony export */   pipe: () => (/* binding */ pipe),\n/* harmony export */   pipeTo: () => (/* binding */ pipeTo),\n/* harmony export */   readAllBytes: () => (/* binding */ readAllBytes),\n/* harmony export */   sinkAll: () => (/* binding */ sinkAll),\n/* harmony export */   sinkAllBytes: () => (/* binding */ sinkAllBytes),\n/* harmony export */   transformAppend: () => (/* binding */ transformAppend),\n/* harmony export */   transformCatch: () => (/* binding */ transformCatch),\n/* harmony export */   transformCatchFinally: () => (/* binding */ transformCatchFinally),\n/* harmony export */   transformCompressEnvelope: () => (/* binding */ transformCompressEnvelope),\n/* harmony export */   transformDecompressEnvelope: () => (/* binding */ transformDecompressEnvelope),\n/* harmony export */   transformJoinEnvelopes: () => (/* binding */ transformJoinEnvelopes),\n/* harmony export */   transformParseEnvelope: () => (/* binding */ transformParseEnvelope),\n/* harmony export */   transformPrepend: () => (/* binding */ transformPrepend),\n/* harmony export */   transformReadAllBytes: () => (/* binding */ transformReadAllBytes),\n/* harmony export */   transformSerializeEnvelope: () => (/* binding */ transformSerializeEnvelope),\n/* harmony export */   transformSplitEnvelope: () => (/* binding */ transformSplitEnvelope),\n/* harmony export */   untilFirst: () => (/* binding */ untilFirst)\n/* harmony export */ });\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./envelope.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/envelope.js\");\n/* harmony import */ var _limit_io_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./limit-io.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nvar __asyncDelegator = (undefined && undefined.__asyncDelegator) || function (o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n};\n\n\n\n\nfunction pipeTo(source, ...rest) {\n    const [transforms, sink, opt] = pickTransformsAndSink(rest);\n    let iterable = source;\n    let abortable;\n    if ((opt === null || opt === void 0 ? void 0 : opt.propagateDownStreamError) === true) {\n        iterable = abortable = makeIterableAbortable(iterable);\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    iterable = pipe(iterable, ...transforms, { propagateDownStreamError: false });\n    return sink(iterable).catch((reason) => {\n        if (abortable) {\n            return abortable.abort(reason).then(() => Promise.reject(reason));\n        }\n        return Promise.reject(reason);\n    });\n}\n// pick transforms, the sink, and options from the pipeTo() rest parameter\nfunction pickTransformsAndSink(rest) {\n    let opt;\n    if (typeof rest[rest.length - 1] != \"function\") {\n        opt = rest.pop();\n    }\n    const sink = rest.pop();\n    return [rest, sink, opt];\n}\n/**\n * Creates an AsyncIterableSink that concatenates all elements from the input.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction sinkAll() {\n    return async function (iterable) {\n        var _a, e_1, _b, _c;\n        const all = [];\n        try {\n            for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = await iterable_1.next(), _a = iterable_1_1.done, !_a; _d = true) {\n                _c = iterable_1_1.value;\n                _d = false;\n                const chunk = _c;\n                all.push(chunk);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_d && !_a && (_b = iterable_1.return)) await _b.call(iterable_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return all;\n    };\n}\n/**\n * Creates an AsyncIterableSink that concatenates all chunks from the input into\n * a single Uint8Array.\n *\n * The iterable raises an error if the more than readMaxBytes are read.\n *\n * An optional length hint can be provided to optimize allocation and validation.\n * If more or less bytes are present in the source that the length hint indicates,\n * and error is raised.\n * If the length hint is larger than readMaxBytes, an error is raised.\n * If the length hint is not a positive integer, it is ignored.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction sinkAllBytes(readMaxBytes, lengthHint) {\n    return async function (iterable) {\n        return await readAllBytes(iterable, readMaxBytes, lengthHint);\n    };\n}\nfunction pipe(source, ...rest) {\n    return __asyncGenerator(this, arguments, function* pipe_1() {\n        var _a;\n        const [transforms, opt] = pickTransforms(rest);\n        let abortable;\n        const sourceIt = source[Symbol.asyncIterator]();\n        const cachedSource = {\n            [Symbol.asyncIterator]() {\n                return sourceIt;\n            },\n        };\n        let iterable = cachedSource;\n        if ((opt === null || opt === void 0 ? void 0 : opt.propagateDownStreamError) === true) {\n            iterable = abortable = makeIterableAbortable(iterable);\n        }\n        for (const t of transforms) {\n            iterable = t(iterable);\n        }\n        const it = iterable[Symbol.asyncIterator]();\n        try {\n            for (;;) {\n                const r = yield __await(it.next());\n                if (r.done === true) {\n                    break;\n                }\n                if (!abortable) {\n                    yield yield __await(r.value);\n                    continue;\n                }\n                try {\n                    yield yield __await(r.value);\n                }\n                catch (e) {\n                    yield __await(abortable.abort(e)); // propagate downstream error to the source\n                    throw e;\n                }\n            }\n        }\n        finally {\n            if ((opt === null || opt === void 0 ? void 0 : opt.propagateDownStreamError) === true) {\n                // Call return on the source iterable to indicate\n                // that we will no longer consume it and it should\n                // cleanup any allocated resources.\n                (_a = sourceIt.return) === null || _a === void 0 ? void 0 : _a.call(sourceIt).catch(() => {\n                    // return returns a promise, which we don't care about.\n                    //\n                    // Uncaught promises are thrown at sometime/somewhere by the event loop,\n                    // this is to ensure error is caught and ignored.\n                });\n            }\n        }\n    });\n}\nfunction pickTransforms(rest) {\n    let opt;\n    if (typeof rest[rest.length - 1] != \"function\") {\n        opt = rest.pop();\n    }\n    return [rest, opt];\n}\n/**\n * Creates an AsyncIterableTransform that catches any error from the input, and\n * passes it to the given catchError function.\n *\n * The catchError function may return a final value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformCatch(catchError) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            // we deliberate avoid a for-await loop because we only want to catch upstream\n            // errors, not downstream errors (yield).\n            const it = iterable[Symbol.asyncIterator]();\n            for (;;) {\n                let r;\n                try {\n                    r = yield __await(it.next());\n                }\n                catch (e) {\n                    const caught = yield __await(catchError(e));\n                    if (caught !== undefined) {\n                        yield yield __await(caught);\n                    }\n                    break;\n                }\n                if (r.done === true) {\n                    break;\n                }\n                yield yield __await(r.value);\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that catches any error from the input, and\n * passes it to the given function. Unlike transformCatch(), the given function\n * is also called when no error is raised.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformCatchFinally(catchFinally) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            // we deliberate avoid a for-await loop because we only want to catch upstream\n            // errors, not downstream errors (yield).\n            let err;\n            const it = iterable[Symbol.asyncIterator]();\n            for (;;) {\n                let r;\n                try {\n                    r = yield __await(it.next());\n                }\n                catch (e) {\n                    err = e;\n                    break;\n                }\n                if (r.done === true) {\n                    break;\n                }\n                yield yield __await(r.value);\n            }\n            const caught = yield __await(catchFinally(err));\n            if (caught !== undefined) {\n                yield yield __await(caught);\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that appends a value.\n *\n * The element to append is provided by a function. If the function returns\n * undefined, no element is appended.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformAppend(provide) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_2, _b, _c;\n            try {\n                for (var _d = true, iterable_2 = __asyncValues(iterable), iterable_2_1; iterable_2_1 = yield __await(iterable_2.next()), _a = iterable_2_1.done, !_a; _d = true) {\n                    _c = iterable_2_1.value;\n                    _d = false;\n                    const chunk = _c;\n                    yield yield __await(chunk);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_2.return)) yield __await(_b.call(iterable_2));\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            const append = yield __await(provide());\n            if (append !== undefined) {\n                yield yield __await(append);\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that prepends an element.\n *\n * The element to prepend is provided by a function. If the function returns\n * undefined, no element is appended.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformPrepend(provide) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_3, _b, _c;\n            const prepend = yield __await(provide());\n            if (prepend !== undefined) {\n                yield yield __await(prepend);\n            }\n            try {\n                for (var _d = true, iterable_3 = __asyncValues(iterable), iterable_3_1; iterable_3_1 = yield __await(iterable_3.next()), _a = iterable_3_1.done, !_a; _d = true) {\n                    _c = iterable_3_1.value;\n                    _d = false;\n                    const chunk = _c;\n                    yield yield __await(chunk);\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_3.return)) yield __await(_b.call(iterable_3));\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that reads all bytes from the input, and\n * concatenates them to a single Uint8Array.\n *\n * The iterable raises an error if the more than readMaxBytes are read.\n *\n * An optional length hint can be provided to optimize allocation and validation.\n * If more or less bytes are present in the source that the length hint indicates,\n * and error is raised.\n * If the length hint is larger than readMaxBytes, an error is raised.\n * If the length hint is not a positive integer, it is ignored.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformReadAllBytes(readMaxBytes, lengthHint) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            yield yield __await(yield __await(readAllBytes(iterable, readMaxBytes, lengthHint)));\n        });\n    };\n}\nfunction transformSerializeEnvelope(serialization, endStreamFlag, endSerialization) {\n    if (endStreamFlag === undefined || endSerialization === undefined) {\n        return function (iterable) {\n            return __asyncGenerator(this, arguments, function* () {\n                var _a, e_4, _b, _c;\n                try {\n                    for (var _d = true, iterable_4 = __asyncValues(iterable), iterable_4_1; iterable_4_1 = yield __await(iterable_4.next()), _a = iterable_4_1.done, !_a; _d = true) {\n                        _c = iterable_4_1.value;\n                        _d = false;\n                        const chunk = _c;\n                        const data = serialization.serialize(chunk);\n                        yield yield __await({ flags: 0, data });\n                    }\n                }\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                finally {\n                    try {\n                        if (!_d && !_a && (_b = iterable_4.return)) yield __await(_b.call(iterable_4));\n                    }\n                    finally { if (e_4) throw e_4.error; }\n                }\n            });\n        };\n    }\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_5, _b, _c;\n            try {\n                for (var _d = true, iterable_5 = __asyncValues(iterable), iterable_5_1; iterable_5_1 = yield __await(iterable_5.next()), _a = iterable_5_1.done, !_a; _d = true) {\n                    _c = iterable_5_1.value;\n                    _d = false;\n                    const chunk = _c;\n                    let data;\n                    let flags = 0;\n                    if (chunk.end) {\n                        flags = flags | endStreamFlag;\n                        data = endSerialization.serialize(chunk.value);\n                    }\n                    else {\n                        data = serialization.serialize(chunk.value);\n                    }\n                    yield yield __await({ flags, data });\n                }\n            }\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_5.return)) yield __await(_b.call(iterable_5));\n                }\n                finally { if (e_5) throw e_5.error; }\n            }\n        });\n    };\n}\nfunction transformParseEnvelope(serialization, endStreamFlag, endSerialization) {\n    // code path always yields ParsedEnvelopedMessage<T, E>\n    if (endSerialization && endStreamFlag !== undefined) {\n        return function (iterable) {\n            return __asyncGenerator(this, arguments, function* () {\n                var _a, e_6, _b, _c;\n                try {\n                    for (var _d = true, iterable_6 = __asyncValues(iterable), iterable_6_1; iterable_6_1 = yield __await(iterable_6.next()), _a = iterable_6_1.done, !_a; _d = true) {\n                        _c = iterable_6_1.value;\n                        _d = false;\n                        const { flags, data } = _c;\n                        if ((flags & endStreamFlag) === endStreamFlag) {\n                            yield yield __await({ value: endSerialization.parse(data), end: true });\n                        }\n                        else {\n                            yield yield __await({ value: serialization.parse(data), end: false });\n                        }\n                    }\n                }\n                catch (e_6_1) { e_6 = { error: e_6_1 }; }\n                finally {\n                    try {\n                        if (!_d && !_a && (_b = iterable_6.return)) yield __await(_b.call(iterable_6));\n                    }\n                    finally { if (e_6) throw e_6.error; }\n                }\n            });\n        };\n    }\n    // code path always yields T\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_7, _b, _c;\n            try {\n                for (var _d = true, iterable_7 = __asyncValues(iterable), iterable_7_1; iterable_7_1 = yield __await(iterable_7.next()), _a = iterable_7_1.done, !_a; _d = true) {\n                    _c = iterable_7_1.value;\n                    _d = false;\n                    const { flags, data } = _c;\n                    if (endStreamFlag !== undefined &&\n                        (flags & endStreamFlag) === endStreamFlag) {\n                        if (endSerialization === null) {\n                            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"unexpected end flag\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument);\n                        }\n                        // skips end-of-stream envelope\n                        continue;\n                    }\n                    yield yield __await(serialization.parse(data));\n                }\n            }\n            catch (e_7_1) { e_7 = { error: e_7_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_7.return)) yield __await(_b.call(iterable_7));\n                }\n                finally { if (e_7) throw e_7.error; }\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that takes enveloped messages as a source,\n * and compresses them if they are larger than compressMinBytes.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformCompressEnvelope(compression, compressMinBytes) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_8, _b, _c;\n            try {\n                for (var _d = true, iterable_8 = __asyncValues(iterable), iterable_8_1; iterable_8_1 = yield __await(iterable_8.next()), _a = iterable_8_1.done, !_a; _d = true) {\n                    _c = iterable_8_1.value;\n                    _d = false;\n                    const env = _c;\n                    yield yield __await(yield __await((0,_envelope_js__WEBPACK_IMPORTED_MODULE_2__.envelopeCompress)(env, compression, compressMinBytes)));\n                }\n            }\n            catch (e_8_1) { e_8 = { error: e_8_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_8.return)) yield __await(_b.call(iterable_8));\n                }\n                finally { if (e_8) throw e_8.error; }\n            }\n        });\n    };\n}\n/**\n * Creates an AsyncIterableTransform that takes enveloped messages as a source,\n * and decompresses them using the given compression.\n *\n * The iterable raises an error if the decompressed payload of an enveloped\n * message is larger than readMaxBytes, or if no compression is provided.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformDecompressEnvelope(compression, readMaxBytes) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_9, _b, _c;\n            try {\n                for (var _d = true, iterable_9 = __asyncValues(iterable), iterable_9_1; iterable_9_1 = yield __await(iterable_9.next()), _a = iterable_9_1.done, !_a; _d = true) {\n                    _c = iterable_9_1.value;\n                    _d = false;\n                    const env = _c;\n                    yield yield __await(yield __await((0,_envelope_js__WEBPACK_IMPORTED_MODULE_2__.envelopeDecompress)(env, compression, readMaxBytes)));\n                }\n            }\n            catch (e_9_1) { e_9 = { error: e_9_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_9.return)) yield __await(_b.call(iterable_9));\n                }\n                finally { if (e_9) throw e_9.error; }\n            }\n        });\n    };\n}\n/**\n * Create an AsyncIterableTransform that takes enveloped messages as a source,\n * and joins them into a stream of raw bytes.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformJoinEnvelopes() {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_10, _b, _c;\n            try {\n                for (var _d = true, iterable_10 = __asyncValues(iterable), iterable_10_1; iterable_10_1 = yield __await(iterable_10.next()), _a = iterable_10_1.done, !_a; _d = true) {\n                    _c = iterable_10_1.value;\n                    _d = false;\n                    const { flags, data } = _c;\n                    yield yield __await((0,_envelope_js__WEBPACK_IMPORTED_MODULE_2__.encodeEnvelope)(flags, data));\n                }\n            }\n            catch (e_10_1) { e_10 = { error: e_10_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_10.return)) yield __await(_b.call(iterable_10));\n                }\n                finally { if (e_10) throw e_10.error; }\n            }\n        });\n    };\n}\n/**\n * Create an AsyncIterableTransform that takes raw bytes as a source, and splits\n * them into enveloped messages.\n *\n * The iterable raises an error\n * - if the payload of an enveloped message is larger than readMaxBytes,\n * - if the stream ended before an enveloped message fully arrived,\n * - or if the stream ended with extraneous data.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformSplitEnvelope(readMaxBytes) {\n    // append chunk to buffer, returning updated buffer\n    function append(buffer, chunk) {\n        const n = new Uint8Array(buffer.byteLength + chunk.byteLength);\n        n.set(buffer);\n        n.set(chunk, buffer.length);\n        return n;\n    }\n    // tuple 0: envelope, or undefined if incomplete\n    // tuple 1: remainder of the buffer\n    function shiftEnvelope(buffer, header) {\n        if (buffer.byteLength < 5 + header.length) {\n            return [undefined, buffer];\n        }\n        return [\n            { flags: header.flags, data: buffer.subarray(5, 5 + header.length) },\n            buffer.subarray(5 + header.length),\n        ];\n    }\n    // undefined: header is incomplete\n    function peekHeader(buffer) {\n        if (buffer.byteLength < 5) {\n            return undefined;\n        }\n        const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n        const length = view.getUint32(1); // 4 bytes message length\n        const flags = view.getUint8(0); // first byte is flags\n        return { length, flags };\n    }\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_11, _b, _c;\n            let buffer = new Uint8Array(0);\n            try {\n                for (var _d = true, iterable_11 = __asyncValues(iterable), iterable_11_1; iterable_11_1 = yield __await(iterable_11.next()), _a = iterable_11_1.done, !_a; _d = true) {\n                    _c = iterable_11_1.value;\n                    _d = false;\n                    const chunk = _c;\n                    buffer = append(buffer, chunk);\n                    for (;;) {\n                        const header = peekHeader(buffer);\n                        if (!header) {\n                            break;\n                        }\n                        (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_3__.assertReadMaxBytes)(readMaxBytes, header.length, true);\n                        let env;\n                        [env, buffer] = shiftEnvelope(buffer, header);\n                        if (!env) {\n                            break;\n                        }\n                        yield yield __await(env);\n                    }\n                }\n            }\n            catch (e_11_1) { e_11 = { error: e_11_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_11.return)) yield __await(_b.call(iterable_11));\n                }\n                finally { if (e_11) throw e_11.error; }\n            }\n            if (buffer.byteLength > 0) {\n                const header = peekHeader(buffer);\n                let message = \"protocol error: incomplete envelope\";\n                if (header) {\n                    message = `protocol error: promised ${header.length} bytes in enveloped message, got ${buffer.byteLength - 5} bytes`;\n                }\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(message, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument);\n            }\n        });\n    };\n}\n/**\n * Reads all bytes from the source, and concatenates them to a single Uint8Array.\n *\n * Raises an error if:\n * - more than readMaxBytes are read\n * - lengthHint is a positive integer, but larger than readMaxBytes\n * - lengthHint is a positive integer, and the source contains more or less bytes\n *   than promised\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function readAllBytes(iterable, readMaxBytes, lengthHint) {\n    var _a, e_12, _b, _c, _d, e_13, _e, _f;\n    const [ok, hint] = parseLengthHint(lengthHint);\n    if (ok) {\n        if (hint > readMaxBytes) {\n            (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_3__.assertReadMaxBytes)(readMaxBytes, hint, true);\n        }\n        const buffer = new Uint8Array(hint);\n        let offset = 0;\n        try {\n            for (var _g = true, iterable_12 = __asyncValues(iterable), iterable_12_1; iterable_12_1 = await iterable_12.next(), _a = iterable_12_1.done, !_a; _g = true) {\n                _c = iterable_12_1.value;\n                _g = false;\n                const chunk = _c;\n                if (offset + chunk.byteLength > hint) {\n                    throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`protocol error: promised ${hint} bytes, received ${offset + chunk.byteLength}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument);\n                }\n                buffer.set(chunk, offset);\n                offset += chunk.byteLength;\n            }\n        }\n        catch (e_12_1) { e_12 = { error: e_12_1 }; }\n        finally {\n            try {\n                if (!_g && !_a && (_b = iterable_12.return)) await _b.call(iterable_12);\n            }\n            finally { if (e_12) throw e_12.error; }\n        }\n        if (offset < hint) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`protocol error: promised ${hint} bytes, received ${offset}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.InvalidArgument);\n        }\n        return buffer;\n    }\n    const chunks = [];\n    let count = 0;\n    try {\n        for (var _h = true, iterable_13 = __asyncValues(iterable), iterable_13_1; iterable_13_1 = await iterable_13.next(), _d = iterable_13_1.done, !_d; _h = true) {\n            _f = iterable_13_1.value;\n            _h = false;\n            const chunk = _f;\n            count += chunk.byteLength;\n            (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_3__.assertReadMaxBytes)(readMaxBytes, count);\n            chunks.push(chunk);\n        }\n    }\n    catch (e_13_1) { e_13 = { error: e_13_1 }; }\n    finally {\n        try {\n            if (!_h && !_d && (_e = iterable_13.return)) await _e.call(iterable_13);\n        }\n        finally { if (e_13) throw e_13.error; }\n    }\n    const all = new Uint8Array(count);\n    let offset = 0;\n    for (let chunk = chunks.shift(); chunk; chunk = chunks.shift()) {\n        all.set(chunk, offset);\n        offset += chunk.byteLength;\n    }\n    return all;\n}\n// parse the lengthHint argument of readAllBytes()\nfunction parseLengthHint(lengthHint) {\n    if (lengthHint === undefined || lengthHint === null) {\n        return [false, 0];\n    }\n    const n = typeof lengthHint == \"string\" ? parseInt(lengthHint, 10) : lengthHint;\n    if (!Number.isSafeInteger(n) || n < 0) {\n        return [false, n];\n    }\n    return [true, n];\n}\n/**\n * Wait for the first element of an iterable without modifying the iterable.\n * This consumes the first element, but pushes it back on the stack.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function untilFirst(iterable) {\n    const it = iterable[Symbol.asyncIterator]();\n    let first = await it.next();\n    return {\n        [Symbol.asyncIterator]() {\n            const w = {\n                async next() {\n                    if (first !== null) {\n                        const n = first;\n                        first = null;\n                        return n;\n                    }\n                    return await it.next();\n                },\n            };\n            if (it.throw !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- can't handle mutated object sensibly\n                w.throw = (e) => it.throw(e);\n            }\n            if (it.return !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion,@typescript-eslint/no-explicit-any -- can't handle mutated object sensibly\n                w.return = (value) => it.return(value);\n            }\n            return w;\n        },\n    };\n}\n/**\n * Wrap the given iterable and return an iterable with an abort() method.\n *\n * This function exists purely for convenience. Where one would typically have\n * to access the iterator directly, advance through all elements, and call\n * AsyncIterator.throw() to notify the upstream iterable, this function allows\n * to use convenient for-await loops and still notify the upstream iterable:\n *\n * ```ts\n * const abortable = makeIterableAbortable(iterable);\n * for await (const ele of abortable) {\n *   await abortable.abort(\"ERR\");\n * }\n * ```\n * There are a couple of limitations of this function:\n * - the given async iterable must implement throw\n * - the async iterable cannot be re-use\n * - if source catches errors and yields values for them, they are ignored, and\n *   the source may still dangle\n *\n * There are four possible ways an async function* can handle yield errors:\n * 1. don't catch errors at all - Abortable.abort() will resolve \"rethrown\"\n * 2. catch errors and rethrow - Abortable.abort() will resolve \"rethrown\"\n * 3. catch errors and return - Abortable.abort() will resolve \"completed\"\n * 4. catch errors and yield a value - Abortable.abort() will resolve \"caught\"\n *\n * Note that catching errors and yielding a value is problematic, and it should\n * be documented that this may leave the source in a dangling state.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction makeIterableAbortable(iterable) {\n    const innerCandidate = iterable[Symbol.asyncIterator]();\n    if (innerCandidate.throw === undefined) {\n        throw new Error(\"AsyncIterable does not implement throw\");\n    }\n    const inner = innerCandidate;\n    let aborted;\n    let resultPromise;\n    let it = {\n        next() {\n            resultPromise = inner.next().finally(() => {\n                resultPromise = undefined;\n            });\n            return resultPromise;\n        },\n        throw(e) {\n            return inner.throw(e);\n        },\n    };\n    if (innerCandidate.return !== undefined) {\n        it = Object.assign(Object.assign({}, it), { return(value) {\n                return inner.return(value);\n            } });\n    }\n    let used = false;\n    return {\n        abort(reason) {\n            if (aborted) {\n                return aborted.state;\n            }\n            const f = () => {\n                return inner.throw(reason).then((r) => (r.done === true ? \"completed\" : \"caught\"), () => \"rethrown\");\n            };\n            if (resultPromise) {\n                aborted = { reason, state: resultPromise.then(f, f) };\n                return aborted.state;\n            }\n            aborted = { reason, state: f() };\n            return aborted.state;\n        },\n        [Symbol.asyncIterator]() {\n            if (used) {\n                throw new Error(\"AsyncIterable cannot be re-used\");\n            }\n            used = true;\n            return it;\n        },\n    };\n}\n/**\n * Create a new WritableIterable.\n */\nfunction createWritableIterable() {\n    // We start with two queues to capture the read and write attempts.\n    //\n    // The writes and reads each check of their counterpart is\n    // already available and either interact/add themselves to the queue.\n    const readQueue = [];\n    const writeQueue = [];\n    let err = undefined;\n    let nextResolve;\n    let nextReject;\n    let nextPromise = new Promise((resolve, reject) => {\n        nextResolve = resolve;\n        nextReject = reject;\n    });\n    let closed = false;\n    // drain the readQueue in case of error/writer is closed by sending a\n    // done result.\n    function drain() {\n        for (const next of readQueue.splice(0, readQueue.length)) {\n            next({ done: true, value: undefined });\n        }\n    }\n    return {\n        close() {\n            closed = true;\n            drain();\n        },\n        async write(payload) {\n            if (closed) {\n                throw err !== null && err !== void 0 ? err : new Error(\"cannot write, WritableIterable already closed\");\n            }\n            const read = readQueue.shift();\n            if (read === undefined) {\n                // We didn't find a pending read so we add the payload to the write queue.\n                writeQueue.push(payload);\n            }\n            else {\n                // We found a pending read so we respond with the payload.\n                read({ done: false, value: payload });\n                if (readQueue.length > 0) {\n                    // If there are more in the read queue we can mark the write as complete.\n                    // as the error reporting is not guaranteed to be sequential and therefore cannot\n                    // to linked to a specific write.\n                    return;\n                }\n            }\n            // We await the next call for as many times as there are items in the queue + 1\n            //\n            // If there are no items in the write queue that means write happened and we just have\n            // to wait for one more call likewise if we are the nth write in the queue we\n            // have to wait for n writes to complete and one more.\n            const limit = writeQueue.length + 1;\n            for (let i = 0; i < limit; i++) {\n                await nextPromise;\n            }\n        },\n        [Symbol.asyncIterator]() {\n            return {\n                next() {\n                    // Resolve the nextPromise to indicate\n                    // pending writes that a read attempt has been made\n                    // after their write.\n                    //\n                    // We also need to reset the promise for future writes.\n                    nextResolve();\n                    nextPromise = new Promise((resolve, reject) => {\n                        nextResolve = resolve;\n                        nextReject = reject;\n                    });\n                    const write = writeQueue.shift();\n                    if (write !== undefined) {\n                        // We found a pending write so response with the payload.\n                        return Promise.resolve({ done: false, value: write });\n                    }\n                    if (closed) {\n                        return Promise.resolve({ done: true, value: undefined });\n                    }\n                    // We return a promise immediately that is either resolved/rejected\n                    // as writes happen.\n                    let readResolve;\n                    const readPromise = new Promise((resolve) => (readResolve = resolve));\n                    readQueue.push(readResolve); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n                    return readPromise;\n                },\n                throw(throwErr) {\n                    err = throwErr;\n                    closed = true;\n                    writeQueue.splice(0, writeQueue.length);\n                    nextPromise.catch(() => {\n                        // To make sure that the nextPromise is always resolved.\n                    });\n                    // This will reject all pending writes.\n                    nextReject(err);\n                    drain();\n                    return Promise.resolve({ done: true, value: undefined });\n                },\n                return() {\n                    closed = true;\n                    writeQueue.splice(0, writeQueue.length);\n                    // Resolve once for the write awaiting confirmation.\n                    nextResolve();\n                    // Reject all future writes.\n                    nextPromise = Promise.reject(new Error(\"cannot write, consumer called return\"));\n                    nextPromise.catch(() => {\n                        // To make sure that the nextPromise is always resolved.\n                    });\n                    drain();\n                    return Promise.resolve({ done: true, value: undefined });\n                },\n            };\n        },\n    };\n}\n/**\n * Create an asynchronous iterable from an array.\n *\n * @private Internal code, does not follow semantic versioning.\n */\n// eslint-disable-next-line @typescript-eslint/require-await\nfunction createAsyncIterable(items) {\n    return __asyncGenerator(this, arguments, function* createAsyncIterable_1() {\n        yield __await(yield* __asyncDelegator(__asyncValues(items)));\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compressedFlag: () => (/* binding */ compressedFlag),\n/* harmony export */   compressionNegotiate: () => (/* binding */ compressionNegotiate)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * compressedFlag indicates that the data in a EnvelopedMessage is\n * compressed. It has the same meaning in the gRPC-Web, gRPC-HTTP2,\n * and Connect protocols.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst compressedFlag = 0b00000001;\n/**\n * Validates the request encoding and determines the accepted response encoding.\n *\n * Returns the request and response compression to use. If the client requested\n * an encoding that is not available, the returned object contains an error that\n * must be used for the response.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction compressionNegotiate(available, requested, // e.g. the value of the Grpc-Encoding header\naccepted, // e.g. the value of the Grpc-Accept-Encoding header\nheaderNameAcceptEncoding) {\n    let request = null;\n    let response = null;\n    let error = undefined;\n    if (requested !== null && requested !== \"identity\") {\n        const found = available.find((c) => c.name === requested);\n        if (found) {\n            request = found;\n        }\n        else {\n            // To comply with https://github.com/grpc/grpc/blob/master/doc/compression.md\n            // and the Connect protocol, we return code \"unimplemented\" and specify\n            // acceptable compression(s).\n            const acceptable = available.map((c) => c.name).join(\",\");\n            error = new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`unknown compression \"${requested}\": supported encodings are ${acceptable}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Unimplemented, {\n                [headerNameAcceptEncoding]: acceptable,\n            });\n        }\n    }\n    if (accepted === null || accepted === \"\") {\n        // Support asymmetric compression. This logic follows\n        // https://github.com/grpc/grpc/blob/master/doc/compression.md and common\n        // sense.\n        response = request;\n    }\n    else {\n        const acceptNames = accepted.split(\",\").map((n) => n.trim());\n        for (const name of acceptNames) {\n            const found = available.find((c) => c.name === name);\n            if (found) {\n                response = found;\n                break;\n            }\n        }\n    }\n    return { request, response, error };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9jb21wcmVzc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDbUQ7QUFDakI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDJEQUFZLHlCQUF5QixVQUFVLDZCQUE2QixXQUFXLEdBQUcsMENBQUk7QUFDdEg7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiIiwic291cmNlcyI6WyJEOlxccHJvamVjdHNcXGF0c1xcbm9kZV9tb2R1bGVzXFxAY29ubmVjdHJwY1xcY29ubmVjdFxcZGlzdFxcZXNtXFxwcm90b2NvbFxcY29tcHJlc3Npb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuLi9jb25uZWN0LWVycm9yLmpzXCI7XG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbi8qKlxuICogY29tcHJlc3NlZEZsYWcgaW5kaWNhdGVzIHRoYXQgdGhlIGRhdGEgaW4gYSBFbnZlbG9wZWRNZXNzYWdlIGlzXG4gKiBjb21wcmVzc2VkLiBJdCBoYXMgdGhlIHNhbWUgbWVhbmluZyBpbiB0aGUgZ1JQQy1XZWIsIGdSUEMtSFRUUDIsXG4gKiBhbmQgQ29ubmVjdCBwcm90b2NvbHMuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBjb25zdCBjb21wcmVzc2VkRmxhZyA9IDBiMDAwMDAwMDE7XG4vKipcbiAqIFZhbGlkYXRlcyB0aGUgcmVxdWVzdCBlbmNvZGluZyBhbmQgZGV0ZXJtaW5lcyB0aGUgYWNjZXB0ZWQgcmVzcG9uc2UgZW5jb2RpbmcuXG4gKlxuICogUmV0dXJucyB0aGUgcmVxdWVzdCBhbmQgcmVzcG9uc2UgY29tcHJlc3Npb24gdG8gdXNlLiBJZiB0aGUgY2xpZW50IHJlcXVlc3RlZFxuICogYW4gZW5jb2RpbmcgdGhhdCBpcyBub3QgYXZhaWxhYmxlLCB0aGUgcmV0dXJuZWQgb2JqZWN0IGNvbnRhaW5zIGFuIGVycm9yIHRoYXRcbiAqIG11c3QgYmUgdXNlZCBmb3IgdGhlIHJlc3BvbnNlLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tcHJlc3Npb25OZWdvdGlhdGUoYXZhaWxhYmxlLCByZXF1ZXN0ZWQsIC8vIGUuZy4gdGhlIHZhbHVlIG9mIHRoZSBHcnBjLUVuY29kaW5nIGhlYWRlclxuYWNjZXB0ZWQsIC8vIGUuZy4gdGhlIHZhbHVlIG9mIHRoZSBHcnBjLUFjY2VwdC1FbmNvZGluZyBoZWFkZXJcbmhlYWRlck5hbWVBY2NlcHRFbmNvZGluZykge1xuICAgIGxldCByZXF1ZXN0ID0gbnVsbDtcbiAgICBsZXQgcmVzcG9uc2UgPSBudWxsO1xuICAgIGxldCBlcnJvciA9IHVuZGVmaW5lZDtcbiAgICBpZiAocmVxdWVzdGVkICE9PSBudWxsICYmIHJlcXVlc3RlZCAhPT0gXCJpZGVudGl0eVwiKSB7XG4gICAgICAgIGNvbnN0IGZvdW5kID0gYXZhaWxhYmxlLmZpbmQoKGMpID0+IGMubmFtZSA9PT0gcmVxdWVzdGVkKTtcbiAgICAgICAgaWYgKGZvdW5kKSB7XG4gICAgICAgICAgICByZXF1ZXN0ID0gZm91bmQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBUbyBjb21wbHkgd2l0aCBodHRwczovL2dpdGh1Yi5jb20vZ3JwYy9ncnBjL2Jsb2IvbWFzdGVyL2RvYy9jb21wcmVzc2lvbi5tZFxuICAgICAgICAgICAgLy8gYW5kIHRoZSBDb25uZWN0IHByb3RvY29sLCB3ZSByZXR1cm4gY29kZSBcInVuaW1wbGVtZW50ZWRcIiBhbmQgc3BlY2lmeVxuICAgICAgICAgICAgLy8gYWNjZXB0YWJsZSBjb21wcmVzc2lvbihzKS5cbiAgICAgICAgICAgIGNvbnN0IGFjY2VwdGFibGUgPSBhdmFpbGFibGUubWFwKChjKSA9PiBjLm5hbWUpLmpvaW4oXCIsXCIpO1xuICAgICAgICAgICAgZXJyb3IgPSBuZXcgQ29ubmVjdEVycm9yKGB1bmtub3duIGNvbXByZXNzaW9uIFwiJHtyZXF1ZXN0ZWR9XCI6IHN1cHBvcnRlZCBlbmNvZGluZ3MgYXJlICR7YWNjZXB0YWJsZX1gLCBDb2RlLlVuaW1wbGVtZW50ZWQsIHtcbiAgICAgICAgICAgICAgICBbaGVhZGVyTmFtZUFjY2VwdEVuY29kaW5nXTogYWNjZXB0YWJsZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChhY2NlcHRlZCA9PT0gbnVsbCB8fCBhY2NlcHRlZCA9PT0gXCJcIikge1xuICAgICAgICAvLyBTdXBwb3J0IGFzeW1tZXRyaWMgY29tcHJlc3Npb24uIFRoaXMgbG9naWMgZm9sbG93c1xuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZ3JwYy9ncnBjL2Jsb2IvbWFzdGVyL2RvYy9jb21wcmVzc2lvbi5tZCBhbmQgY29tbW9uXG4gICAgICAgIC8vIHNlbnNlLlxuICAgICAgICByZXNwb25zZSA9IHJlcXVlc3Q7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBhY2NlcHROYW1lcyA9IGFjY2VwdGVkLnNwbGl0KFwiLFwiKS5tYXAoKG4pID0+IG4udHJpbSgpKTtcbiAgICAgICAgZm9yIChjb25zdCBuYW1lIG9mIGFjY2VwdE5hbWVzKSB7XG4gICAgICAgICAgICBjb25zdCBmb3VuZCA9IGF2YWlsYWJsZS5maW5kKChjKSA9PiBjLm5hbWUgPT09IG5hbWUpO1xuICAgICAgICAgICAgaWYgKGZvdW5kKSB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBmb3VuZDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyByZXF1ZXN0LCByZXNwb25zZSwgZXJyb3IgfTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentTypeMatcher: () => (/* binding */ contentTypeMatcher)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst contentTypeMatcherCacheSize = 1024;\n/**\n * Create a function that returns true if the given mime type is supported.\n * A mime type is supported when one of the regular expressions match.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction contentTypeMatcher(...supported) {\n    const cache = new Map();\n    const source = supported.reduce((previousValue, currentValue) => previousValue.concat(\"supported\" in currentValue ? currentValue.supported : currentValue), []);\n    function match(contentType) {\n        if (contentType === null || contentType.length == 0) {\n            return false;\n        }\n        const cached = cache.get(contentType);\n        if (cached !== undefined) {\n            return cached;\n        }\n        const ok = source.some((re) => re.test(contentType));\n        if (cache.size < contentTypeMatcherCacheSize) {\n            cache.set(contentType, ok);\n        }\n        return ok;\n    }\n    match.supported = source;\n    return match;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9jb250ZW50LXR5cGUtbWF0Y2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sXFxjb250ZW50LXR5cGUtbWF0Y2hlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuY29uc3QgY29udGVudFR5cGVNYXRjaGVyQ2FjaGVTaXplID0gMTAyNDtcbi8qKlxuICogQ3JlYXRlIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIHRydWUgaWYgdGhlIGdpdmVuIG1pbWUgdHlwZSBpcyBzdXBwb3J0ZWQuXG4gKiBBIG1pbWUgdHlwZSBpcyBzdXBwb3J0ZWQgd2hlbiBvbmUgb2YgdGhlIHJlZ3VsYXIgZXhwcmVzc2lvbnMgbWF0Y2guXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb250ZW50VHlwZU1hdGNoZXIoLi4uc3VwcG9ydGVkKSB7XG4gICAgY29uc3QgY2FjaGUgPSBuZXcgTWFwKCk7XG4gICAgY29uc3Qgc291cmNlID0gc3VwcG9ydGVkLnJlZHVjZSgocHJldmlvdXNWYWx1ZSwgY3VycmVudFZhbHVlKSA9PiBwcmV2aW91c1ZhbHVlLmNvbmNhdChcInN1cHBvcnRlZFwiIGluIGN1cnJlbnRWYWx1ZSA/IGN1cnJlbnRWYWx1ZS5zdXBwb3J0ZWQgOiBjdXJyZW50VmFsdWUpLCBbXSk7XG4gICAgZnVuY3Rpb24gbWF0Y2goY29udGVudFR5cGUpIHtcbiAgICAgICAgaWYgKGNvbnRlbnRUeXBlID09PSBudWxsIHx8IGNvbnRlbnRUeXBlLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY2FjaGVkID0gY2FjaGUuZ2V0KGNvbnRlbnRUeXBlKTtcbiAgICAgICAgaWYgKGNhY2hlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG9rID0gc291cmNlLnNvbWUoKHJlKSA9PiByZS50ZXN0KGNvbnRlbnRUeXBlKSk7XG4gICAgICAgIGlmIChjYWNoZS5zaXplIDwgY29udGVudFR5cGVNYXRjaGVyQ2FjaGVTaXplKSB7XG4gICAgICAgICAgICBjYWNoZS5zZXQoY29udGVudFR5cGUsIG9rKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb2s7XG4gICAgfVxuICAgIG1hdGNoLnN1cHBvcnRlZCA9IHNvdXJjZTtcbiAgICByZXR1cm4gbWF0Y2g7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMethodUrl: () => (/* binding */ createMethodUrl)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Create a URL for the given RPC. This simply adds the qualified\n * service name, a slash, and the method name to the path of the given\n * baseUrl.\n *\n * For example, the baseUri https://example.com and method \"Say\" from\n * the service example.ElizaService results in:\n * https://example.com/example.ElizaService/Say\n *\n * This format is used by the protocols Connect, gRPC and Twirp.\n *\n * Note that this function also accepts a protocol-relative baseUrl.\n * If given an empty string or \"/\" as a baseUrl, it returns just the\n * path.\n */\nfunction createMethodUrl(baseUrl, service, method) {\n    const s = typeof service == \"string\" ? service : service.typeName;\n    const m = typeof method == \"string\" ? method : method.name;\n    return baseUrl.toString().replace(/\\/?$/, `/${s}/${m}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9jcmVhdGUtbWV0aG9kLXVybC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxrREFBa0QsRUFBRSxHQUFHLEVBQUU7QUFDekQiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sXFxjcmVhdGUtbWV0aG9kLXVybC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBDcmVhdGUgYSBVUkwgZm9yIHRoZSBnaXZlbiBSUEMuIFRoaXMgc2ltcGx5IGFkZHMgdGhlIHF1YWxpZmllZFxuICogc2VydmljZSBuYW1lLCBhIHNsYXNoLCBhbmQgdGhlIG1ldGhvZCBuYW1lIHRvIHRoZSBwYXRoIG9mIHRoZSBnaXZlblxuICogYmFzZVVybC5cbiAqXG4gKiBGb3IgZXhhbXBsZSwgdGhlIGJhc2VVcmkgaHR0cHM6Ly9leGFtcGxlLmNvbSBhbmQgbWV0aG9kIFwiU2F5XCIgZnJvbVxuICogdGhlIHNlcnZpY2UgZXhhbXBsZS5FbGl6YVNlcnZpY2UgcmVzdWx0cyBpbjpcbiAqIGh0dHBzOi8vZXhhbXBsZS5jb20vZXhhbXBsZS5FbGl6YVNlcnZpY2UvU2F5XG4gKlxuICogVGhpcyBmb3JtYXQgaXMgdXNlZCBieSB0aGUgcHJvdG9jb2xzIENvbm5lY3QsIGdSUEMgYW5kIFR3aXJwLlxuICpcbiAqIE5vdGUgdGhhdCB0aGlzIGZ1bmN0aW9uIGFsc28gYWNjZXB0cyBhIHByb3RvY29sLXJlbGF0aXZlIGJhc2VVcmwuXG4gKiBJZiBnaXZlbiBhbiBlbXB0eSBzdHJpbmcgb3IgXCIvXCIgYXMgYSBiYXNlVXJsLCBpdCByZXR1cm5zIGp1c3QgdGhlXG4gKiBwYXRoLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTWV0aG9kVXJsKGJhc2VVcmwsIHNlcnZpY2UsIG1ldGhvZCkge1xuICAgIGNvbnN0IHMgPSB0eXBlb2Ygc2VydmljZSA9PSBcInN0cmluZ1wiID8gc2VydmljZSA6IHNlcnZpY2UudHlwZU5hbWU7XG4gICAgY29uc3QgbSA9IHR5cGVvZiBtZXRob2QgPT0gXCJzdHJpbmdcIiA/IG1ldGhvZCA6IG1ldGhvZC5uYW1lO1xuICAgIHJldHVybiBiYXNlVXJsLnRvU3RyaW5nKCkucmVwbGFjZSgvXFwvPyQvLCBgLyR7c30vJHttfWApO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/envelope.js":
/*!************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/envelope.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEnvelopeReadableStream: () => (/* binding */ createEnvelopeReadableStream),\n/* harmony export */   encodeEnvelope: () => (/* binding */ encodeEnvelope),\n/* harmony export */   encodeEnvelopes: () => (/* binding */ encodeEnvelopes),\n/* harmony export */   envelopeCompress: () => (/* binding */ envelopeCompress),\n/* harmony export */   envelopeDecompress: () => (/* binding */ envelopeDecompress)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _compression_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./compression.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/compression.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Create a WHATWG ReadableStream of enveloped messages from a ReadableStream\n * of bytes.\n *\n * Ideally, this would simply be a TransformStream, but ReadableStream.pipeThrough\n * does not have the necessary availability at this time.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createEnvelopeReadableStream(stream) {\n    let reader;\n    let buffer = new Uint8Array(0);\n    function append(chunk) {\n        const n = new Uint8Array(buffer.length + chunk.length);\n        n.set(buffer);\n        n.set(chunk, buffer.length);\n        buffer = n;\n    }\n    return new ReadableStream({\n        start() {\n            reader = stream.getReader();\n        },\n        async pull(controller) {\n            let header = undefined;\n            for (;;) {\n                if (header === undefined && buffer.byteLength >= 5) {\n                    let length = 0;\n                    for (let i = 1; i < 5; i++) {\n                        length = (length << 8) + buffer[i];\n                    }\n                    header = { flags: buffer[0], length };\n                }\n                if (header !== undefined && buffer.byteLength >= header.length + 5) {\n                    break;\n                }\n                const result = await reader.read();\n                if (result.done) {\n                    break;\n                }\n                append(result.value);\n            }\n            if (header === undefined) {\n                if (buffer.byteLength == 0) {\n                    controller.close();\n                    return;\n                }\n                controller.error(new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"premature end of stream\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.DataLoss));\n                return;\n            }\n            const data = buffer.subarray(5, 5 + header.length);\n            buffer = buffer.subarray(5 + header.length);\n            controller.enqueue({\n                flags: header.flags,\n                data,\n            });\n        },\n    });\n}\n/**\n * Compress an EnvelopedMessage.\n *\n * Raises Internal if an enveloped message is already compressed.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function envelopeCompress(envelope, compression, compressMinBytes) {\n    let { flags, data } = envelope;\n    if ((flags & _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag) === _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"invalid envelope, already compressed\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Internal);\n    }\n    if (compression && data.byteLength >= compressMinBytes) {\n        data = await compression.compress(data);\n        flags = flags | _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag;\n    }\n    return { data, flags };\n}\n/**\n * Decompress an EnvelopedMessage.\n *\n * Raises InvalidArgument if an envelope is compressed, but compression is null.\n *\n * Relies on the provided Compression to raise ResourceExhausted if the\n * *decompressed* message size is larger than readMaxBytes. If the envelope is\n * not compressed, readMaxBytes is not honored.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function envelopeDecompress(envelope, compression, readMaxBytes) {\n    let { flags, data } = envelope;\n    if ((flags & _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag) === _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag) {\n        if (!compression) {\n            throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"received compressed envelope, but do not know how to decompress\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Internal);\n        }\n        data = await compression.decompress(data, readMaxBytes);\n        flags = flags ^ _compression_js__WEBPACK_IMPORTED_MODULE_2__.compressedFlag;\n    }\n    return { data, flags };\n}\n/**\n * Encode a single enveloped message.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction encodeEnvelope(flags, data) {\n    const bytes = new Uint8Array(data.length + 5);\n    bytes.set(data, 5);\n    const v = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    v.setUint8(0, flags); // first byte is flags\n    v.setUint32(1, data.length); // 4 bytes message length\n    return bytes;\n}\n/**\n * Encode a set of enveloped messages.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction encodeEnvelopes(...envelopes) {\n    const len = envelopes.reduce((previousValue, currentValue) => previousValue + currentValue.data.length + 5, 0);\n    const bytes = new Uint8Array(len);\n    const v = new DataView(bytes.buffer);\n    let offset = 0;\n    for (const e of envelopes) {\n        v.setUint8(offset, e.flags); // first byte is flags\n        v.setUint32(offset + 1, e.data.length); // 4 bytes message length\n        bytes.set(e.data, offset + 5);\n        offset += e.data.length + 5;\n    }\n    return bytes;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/envelope.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   invokeUnaryImplementation: () => (/* binding */ invokeUnaryImplementation),\n/* harmony export */   transformInvokeImplementation: () => (/* binding */ transformInvokeImplementation)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normalize.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/normalize.js\");\n/* harmony import */ var _interceptor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../interceptor.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/interceptor.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __await = (undefined && undefined.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (undefined && undefined.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nvar __asyncValues = (undefined && undefined.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __asyncDelegator = (undefined && undefined.__asyncDelegator) || function (o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n};\n\n\n\n\n\n/**\n * Invoke a user-provided implementation of a unary RPC. Returns a normalized\n * output message.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function invokeUnaryImplementation(spec, context, input, interceptors) {\n    const anyFn = async (req) => {\n        return {\n            message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalize)(spec.method.O, await spec.impl(req.message, Object.assign(Object.assign({}, context), { service: req.service, method: req.method, requestHeader: req.header, values: req.contextValues, signal: req.signal }))),\n            stream: false,\n            service: req.service,\n            method: req.method,\n            header: context.responseHeader,\n            trailer: context.responseTrailer,\n        };\n    };\n    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_1__.applyInterceptors)(anyFn, interceptors);\n    const { message } = await next({\n        init: {\n            method: context.requestMethod,\n        },\n        message: input,\n        url: context.url,\n        signal: context.signal,\n        service: spec.service,\n        method: spec.method,\n        header: context.requestHeader,\n        contextValues: context.values,\n        stream: false,\n    });\n    return message;\n}\n/**\n * Return an AsyncIterableTransform that invokes a user-provided implementation,\n * giving it input from an asynchronous iterable, and returning its output as an\n * asynchronous iterable.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformInvokeImplementation(spec, context, interceptors) {\n    switch (spec.kind) {\n        case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.MethodKind.Unary:\n            return function unary(input) {\n                return __asyncGenerator(this, arguments, function* unary_1() {\n                    const inputIt = input[Symbol.asyncIterator]();\n                    const input1 = yield __await(inputIt.next());\n                    if (input1.done === true) {\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: missing input message for unary method\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n                    }\n                    const anyFn = async (req) => {\n                        return {\n                            message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalize)(spec.method.O, await spec.impl(req.message, Object.assign(Object.assign({}, context), { service: req.service, method: req.method, requestHeader: req.header, values: req.contextValues, signal: req.signal }))),\n                            stream: false,\n                            service: req.service,\n                            method: req.method,\n                            header: context.responseHeader,\n                            trailer: context.responseTrailer,\n                        };\n                    };\n                    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_1__.applyInterceptors)(anyFn, interceptors);\n                    const { message, header, trailer } = yield __await(next({\n                        init: {\n                            method: context.requestMethod,\n                        },\n                        message: input1.value,\n                        url: context.url,\n                        signal: context.signal,\n                        service: spec.service,\n                        method: spec.method,\n                        header: context.requestHeader,\n                        contextValues: context.values,\n                        stream: false,\n                    }));\n                    copyHeaders(header, context.responseHeader);\n                    copyHeaders(trailer, context.responseTrailer);\n                    yield yield __await(message);\n                    const input2 = yield __await(inputIt.next());\n                    if (input2.done !== true) {\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: received extra input message for unary method\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n                    }\n                });\n            };\n        case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.MethodKind.ServerStreaming: {\n            return function serverStreaming(input) {\n                return __asyncGenerator(this, arguments, function* serverStreaming_1() {\n                    const inputIt = input[Symbol.asyncIterator]();\n                    const input1 = yield __await(inputIt.next());\n                    if (input1.done === true) {\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: missing input message for server-streaming method\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n                    }\n                    const anyFn = async (req) => {\n                        return {\n                            message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalizeIterable)(spec.method.O, spec.impl(req.message, Object.assign(Object.assign({}, context), { service: req.service, method: req.method, requestHeader: req.header, values: req.contextValues, signal: req.signal }))),\n                            stream: true,\n                            service: req.service,\n                            method: req.method,\n                            header: context.responseHeader,\n                            trailer: context.responseTrailer,\n                        };\n                    };\n                    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_1__.applyInterceptors)(anyFn, interceptors);\n                    const { message, header, trailer } = yield __await(next({\n                        init: {\n                            method: context.requestMethod,\n                        },\n                        message: input1.value,\n                        url: context.url,\n                        signal: context.signal,\n                        service: spec.service,\n                        method: spec.method,\n                        header: context.requestHeader,\n                        contextValues: context.values,\n                        stream: false,\n                    }));\n                    copyHeaders(header, context.responseHeader);\n                    copyHeaders(trailer, context.responseTrailer);\n                    yield __await(yield* __asyncDelegator(__asyncValues(message)));\n                    const input2 = yield __await(inputIt.next());\n                    if (input2.done !== true) {\n                        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError(\"protocol error: received extra input message for server-streaming method\", _code_js__WEBPACK_IMPORTED_MODULE_4__.Code.Unimplemented);\n                    }\n                });\n            };\n        }\n        case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.MethodKind.ClientStreaming: {\n            return function clientStreaming(input) {\n                return __asyncGenerator(this, arguments, function* clientStreaming_1() {\n                    const anyFn = async (req) => {\n                        return {\n                            message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalize)(spec.method.O, await spec.impl(req.message, Object.assign(Object.assign({}, context), { service: req.service, method: req.method, requestHeader: req.header, values: req.contextValues, signal: req.signal }))),\n                            stream: false,\n                            service: req.service,\n                            method: req.method,\n                            header: context.responseHeader,\n                            trailer: context.responseTrailer,\n                        };\n                    };\n                    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_1__.applyInterceptors)(anyFn, interceptors);\n                    const { message, header, trailer } = yield __await(next({\n                        init: {\n                            method: context.requestMethod,\n                        },\n                        message: input,\n                        url: context.url,\n                        signal: context.signal,\n                        service: spec.service,\n                        method: spec.method,\n                        header: context.requestHeader,\n                        contextValues: context.values,\n                        stream: true,\n                    }));\n                    copyHeaders(header, context.responseHeader);\n                    copyHeaders(trailer, context.responseTrailer);\n                    yield yield __await(message);\n                });\n            };\n        }\n        case _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.MethodKind.BiDiStreaming:\n            return function biDiStreaming(input) {\n                return __asyncGenerator(this, arguments, function* biDiStreaming_1() {\n                    const anyFn = async (req) => {\n                        return {\n                            message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalizeIterable)(spec.method.O, spec.impl(req.message, Object.assign(Object.assign({}, context), { service: req.service, method: req.method, requestHeader: req.header, values: req.contextValues, signal: req.signal }))),\n                            stream: true,\n                            service: req.service,\n                            method: req.method,\n                            header: context.responseHeader,\n                            trailer: context.responseTrailer,\n                        };\n                    };\n                    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_1__.applyInterceptors)(anyFn, interceptors);\n                    const { message, header, trailer } = yield __await(next({\n                        init: {\n                            method: context.requestMethod,\n                        },\n                        message: input,\n                        url: context.url,\n                        signal: context.signal,\n                        service: spec.service,\n                        method: spec.method,\n                        header: context.requestHeader,\n                        contextValues: context.values,\n                        stream: true,\n                    }));\n                    copyHeaders(header, context.responseHeader);\n                    copyHeaders(trailer, context.responseTrailer);\n                    yield __await(yield* __asyncDelegator(__asyncValues(message)));\n                });\n            };\n    }\n}\nfunction copyHeaders(from, to) {\n    if (from === to) {\n        return;\n    }\n    to.forEach((_, key) => {\n        to.delete(key);\n    });\n    from.forEach((value, key) => {\n        to.set(key, value);\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/invoke-implementation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js":
/*!************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertReadMaxBytes: () => (/* binding */ assertReadMaxBytes),\n/* harmony export */   assertWriteMaxBytes: () => (/* binding */ assertWriteMaxBytes),\n/* harmony export */   validateReadWriteMaxBytes: () => (/* binding */ validateReadWriteMaxBytes)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * At most, allow ~4GiB to be received or sent per message.\n * zlib used by Node.js caps maxOutputLength at this value. It also happens to\n * be the maximum theoretical message size supported by protobuf-es.\n */\nconst maxReadMaxBytes = 0xffffffff;\nconst maxWriteMaxBytes = maxReadMaxBytes;\n/**\n * The default value for the compressMinBytes option. The CPU cost of compressing\n * very small messages usually isn't worth the small reduction in network I/O, so\n * the default value is 1 kibibyte.\n */\nconst defaultCompressMinBytes = 1024;\n/**\n * Asserts that the options writeMaxBytes, readMaxBytes, and compressMinBytes\n * are within sane limits, and returns default values where no value is\n * provided.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateReadWriteMaxBytes(readMaxBytes, writeMaxBytes, compressMinBytes) {\n    writeMaxBytes !== null && writeMaxBytes !== void 0 ? writeMaxBytes : (writeMaxBytes = maxWriteMaxBytes);\n    readMaxBytes !== null && readMaxBytes !== void 0 ? readMaxBytes : (readMaxBytes = maxReadMaxBytes);\n    compressMinBytes !== null && compressMinBytes !== void 0 ? compressMinBytes : (compressMinBytes = defaultCompressMinBytes);\n    if (writeMaxBytes < 1 || writeMaxBytes > maxWriteMaxBytes) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`writeMaxBytes ${writeMaxBytes} must be >= 1 and <= ${maxWriteMaxBytes}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Internal);\n    }\n    if (readMaxBytes < 1 || readMaxBytes > maxReadMaxBytes) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`readMaxBytes ${readMaxBytes} must be >= 1 and <= ${maxReadMaxBytes}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.Internal);\n    }\n    return {\n        readMaxBytes,\n        writeMaxBytes,\n        compressMinBytes,\n    };\n}\n/**\n * Raise an error ResourceExhausted if more than writeMaxByte are written.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction assertWriteMaxBytes(writeMaxBytes, bytesWritten) {\n    if (bytesWritten > writeMaxBytes) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(`message size ${bytesWritten} is larger than configured writeMaxBytes ${writeMaxBytes}`, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.ResourceExhausted);\n    }\n}\n/**\n * Raise an error ResourceExhausted if more than readMaxBytes are read.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction assertReadMaxBytes(readMaxBytes, bytesRead, totalSizeKnown = false) {\n    if (bytesRead > readMaxBytes) {\n        let message = `message size is larger than configured readMaxBytes ${readMaxBytes}`;\n        if (totalSizeKnown) {\n            message = `message size ${bytesRead} is larger than configured readMaxBytes ${readMaxBytes}`;\n        }\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(message, _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.ResourceExhausted);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9saW1pdC1pby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ21EO0FBQ2pCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDJEQUFZLGtCQUFrQixlQUFlLHNCQUFzQixpQkFBaUIsR0FBRywwQ0FBSTtBQUM3RztBQUNBO0FBQ0Esa0JBQWtCLDJEQUFZLGlCQUFpQixjQUFjLHNCQUFzQixnQkFBZ0IsR0FBRywwQ0FBSTtBQUMxRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esa0JBQWtCLDJEQUFZLGlCQUFpQixjQUFjLDBDQUEwQyxjQUFjLEdBQUcsMENBQUk7QUFDNUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsNkVBQTZFLGFBQWE7QUFDMUY7QUFDQSxzQ0FBc0MsV0FBVyx5Q0FBeUMsYUFBYTtBQUN2RztBQUNBLGtCQUFrQiwyREFBWSxVQUFVLDBDQUFJO0FBQzVDO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sXFxsaW1pdC1pby5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgQ29ubmVjdEVycm9yIH0gZnJvbSBcIi4uL2Nvbm5lY3QtZXJyb3IuanNcIjtcbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi4vY29kZS5qc1wiO1xuLyoqXG4gKiBBdCBtb3N0LCBhbGxvdyB+NEdpQiB0byBiZSByZWNlaXZlZCBvciBzZW50IHBlciBtZXNzYWdlLlxuICogemxpYiB1c2VkIGJ5IE5vZGUuanMgY2FwcyBtYXhPdXRwdXRMZW5ndGggYXQgdGhpcyB2YWx1ZS4gSXQgYWxzbyBoYXBwZW5zIHRvXG4gKiBiZSB0aGUgbWF4aW11bSB0aGVvcmV0aWNhbCBtZXNzYWdlIHNpemUgc3VwcG9ydGVkIGJ5IHByb3RvYnVmLWVzLlxuICovXG5jb25zdCBtYXhSZWFkTWF4Qnl0ZXMgPSAweGZmZmZmZmZmO1xuY29uc3QgbWF4V3JpdGVNYXhCeXRlcyA9IG1heFJlYWRNYXhCeXRlcztcbi8qKlxuICogVGhlIGRlZmF1bHQgdmFsdWUgZm9yIHRoZSBjb21wcmVzc01pbkJ5dGVzIG9wdGlvbi4gVGhlIENQVSBjb3N0IG9mIGNvbXByZXNzaW5nXG4gKiB2ZXJ5IHNtYWxsIG1lc3NhZ2VzIHVzdWFsbHkgaXNuJ3Qgd29ydGggdGhlIHNtYWxsIHJlZHVjdGlvbiBpbiBuZXR3b3JrIEkvTywgc29cbiAqIHRoZSBkZWZhdWx0IHZhbHVlIGlzIDEga2liaWJ5dGUuXG4gKi9cbmNvbnN0IGRlZmF1bHRDb21wcmVzc01pbkJ5dGVzID0gMTAyNDtcbi8qKlxuICogQXNzZXJ0cyB0aGF0IHRoZSBvcHRpb25zIHdyaXRlTWF4Qnl0ZXMsIHJlYWRNYXhCeXRlcywgYW5kIGNvbXByZXNzTWluQnl0ZXNcbiAqIGFyZSB3aXRoaW4gc2FuZSBsaW1pdHMsIGFuZCByZXR1cm5zIGRlZmF1bHQgdmFsdWVzIHdoZXJlIG5vIHZhbHVlIGlzXG4gKiBwcm92aWRlZC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlUmVhZFdyaXRlTWF4Qnl0ZXMocmVhZE1heEJ5dGVzLCB3cml0ZU1heEJ5dGVzLCBjb21wcmVzc01pbkJ5dGVzKSB7XG4gICAgd3JpdGVNYXhCeXRlcyAhPT0gbnVsbCAmJiB3cml0ZU1heEJ5dGVzICE9PSB2b2lkIDAgPyB3cml0ZU1heEJ5dGVzIDogKHdyaXRlTWF4Qnl0ZXMgPSBtYXhXcml0ZU1heEJ5dGVzKTtcbiAgICByZWFkTWF4Qnl0ZXMgIT09IG51bGwgJiYgcmVhZE1heEJ5dGVzICE9PSB2b2lkIDAgPyByZWFkTWF4Qnl0ZXMgOiAocmVhZE1heEJ5dGVzID0gbWF4UmVhZE1heEJ5dGVzKTtcbiAgICBjb21wcmVzc01pbkJ5dGVzICE9PSBudWxsICYmIGNvbXByZXNzTWluQnl0ZXMgIT09IHZvaWQgMCA/IGNvbXByZXNzTWluQnl0ZXMgOiAoY29tcHJlc3NNaW5CeXRlcyA9IGRlZmF1bHRDb21wcmVzc01pbkJ5dGVzKTtcbiAgICBpZiAod3JpdGVNYXhCeXRlcyA8IDEgfHwgd3JpdGVNYXhCeXRlcyA+IG1heFdyaXRlTWF4Qnl0ZXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgd3JpdGVNYXhCeXRlcyAke3dyaXRlTWF4Qnl0ZXN9IG11c3QgYmUgPj0gMSBhbmQgPD0gJHttYXhXcml0ZU1heEJ5dGVzfWAsIENvZGUuSW50ZXJuYWwpO1xuICAgIH1cbiAgICBpZiAocmVhZE1heEJ5dGVzIDwgMSB8fCByZWFkTWF4Qnl0ZXMgPiBtYXhSZWFkTWF4Qnl0ZXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgcmVhZE1heEJ5dGVzICR7cmVhZE1heEJ5dGVzfSBtdXN0IGJlID49IDEgYW5kIDw9ICR7bWF4UmVhZE1heEJ5dGVzfWAsIENvZGUuSW50ZXJuYWwpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICByZWFkTWF4Qnl0ZXMsXG4gICAgICAgIHdyaXRlTWF4Qnl0ZXMsXG4gICAgICAgIGNvbXByZXNzTWluQnl0ZXMsXG4gICAgfTtcbn1cbi8qKlxuICogUmFpc2UgYW4gZXJyb3IgUmVzb3VyY2VFeGhhdXN0ZWQgaWYgbW9yZSB0aGFuIHdyaXRlTWF4Qnl0ZSBhcmUgd3JpdHRlbi5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFdyaXRlTWF4Qnl0ZXMod3JpdGVNYXhCeXRlcywgYnl0ZXNXcml0dGVuKSB7XG4gICAgaWYgKGJ5dGVzV3JpdHRlbiA+IHdyaXRlTWF4Qnl0ZXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihgbWVzc2FnZSBzaXplICR7Ynl0ZXNXcml0dGVufSBpcyBsYXJnZXIgdGhhbiBjb25maWd1cmVkIHdyaXRlTWF4Qnl0ZXMgJHt3cml0ZU1heEJ5dGVzfWAsIENvZGUuUmVzb3VyY2VFeGhhdXN0ZWQpO1xuICAgIH1cbn1cbi8qKlxuICogUmFpc2UgYW4gZXJyb3IgUmVzb3VyY2VFeGhhdXN0ZWQgaWYgbW9yZSB0aGFuIHJlYWRNYXhCeXRlcyBhcmUgcmVhZC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFJlYWRNYXhCeXRlcyhyZWFkTWF4Qnl0ZXMsIGJ5dGVzUmVhZCwgdG90YWxTaXplS25vd24gPSBmYWxzZSkge1xuICAgIGlmIChieXRlc1JlYWQgPiByZWFkTWF4Qnl0ZXMpIHtcbiAgICAgICAgbGV0IG1lc3NhZ2UgPSBgbWVzc2FnZSBzaXplIGlzIGxhcmdlciB0aGFuIGNvbmZpZ3VyZWQgcmVhZE1heEJ5dGVzICR7cmVhZE1heEJ5dGVzfWA7XG4gICAgICAgIGlmICh0b3RhbFNpemVLbm93bikge1xuICAgICAgICAgICAgbWVzc2FnZSA9IGBtZXNzYWdlIHNpemUgJHtieXRlc1JlYWR9IGlzIGxhcmdlciB0aGFuIGNvbmZpZ3VyZWQgcmVhZE1heEJ5dGVzICR7cmVhZE1heEJ5dGVzfWA7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RFcnJvcihtZXNzYWdlLCBDb2RlLlJlc291cmNlRXhoYXVzdGVkKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/normalize.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/normalize.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalize: () => (/* binding */ normalize),\n/* harmony export */   normalizeIterable: () => (/* binding */ normalizeIterable)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n *  Takes a partial protobuf messages of the\n *  specified message type as input, and returns full instances.\n */\nfunction normalize(type, message) {\n    return message instanceof type\n        ? message\n        : new type(message);\n}\n/**\n * Takes an AsyncIterable of partial protobuf messages of the\n * specified message type as input, and yields full instances.\n */\nfunction normalizeIterable(messageType, input) {\n    function transform(result) {\n        if (result.done === true) {\n            return result;\n        }\n        return {\n            done: result.done,\n            value: normalize(messageType, result.value),\n        };\n    }\n    return {\n        [Symbol.asyncIterator]() {\n            const it = input[Symbol.asyncIterator]();\n            const res = {\n                next: () => it.next().then(transform),\n            };\n            if (it.throw !== undefined) {\n                res.throw = (e) => it.throw(e).then(transform); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n            }\n            if (it.return !== undefined) {\n                res.return = (v) => it.return(v).then(transform); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n            }\n            return res;\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9ub3JtYWxpemUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0U7QUFDaEU7QUFDQTtBQUNBLGtFQUFrRTtBQUNsRTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sXFxub3JtYWxpemUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tIFwiQGJ1ZmJ1aWxkL3Byb3RvYnVmXCI7XG4vKipcbiAqICBUYWtlcyBhIHBhcnRpYWwgcHJvdG9idWYgbWVzc2FnZXMgb2YgdGhlXG4gKiAgc3BlY2lmaWVkIG1lc3NhZ2UgdHlwZSBhcyBpbnB1dCwgYW5kIHJldHVybnMgZnVsbCBpbnN0YW5jZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemUodHlwZSwgbWVzc2FnZSkge1xuICAgIHJldHVybiBtZXNzYWdlIGluc3RhbmNlb2YgdHlwZVxuICAgICAgICA/IG1lc3NhZ2VcbiAgICAgICAgOiBuZXcgdHlwZShtZXNzYWdlKTtcbn1cbi8qKlxuICogVGFrZXMgYW4gQXN5bmNJdGVyYWJsZSBvZiBwYXJ0aWFsIHByb3RvYnVmIG1lc3NhZ2VzIG9mIHRoZVxuICogc3BlY2lmaWVkIG1lc3NhZ2UgdHlwZSBhcyBpbnB1dCwgYW5kIHlpZWxkcyBmdWxsIGluc3RhbmNlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZUl0ZXJhYmxlKG1lc3NhZ2VUeXBlLCBpbnB1dCkge1xuICAgIGZ1bmN0aW9uIHRyYW5zZm9ybShyZXN1bHQpIHtcbiAgICAgICAgaWYgKHJlc3VsdC5kb25lID09PSB0cnVlKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkb25lOiByZXN1bHQuZG9uZSxcbiAgICAgICAgICAgIHZhbHVlOiBub3JtYWxpemUobWVzc2FnZVR5cGUsIHJlc3VsdC52YWx1ZSksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgICAgICAgICBjb25zdCBpdCA9IGlucHV0W1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICAgICAgICAgICAgY29uc3QgcmVzID0ge1xuICAgICAgICAgICAgICAgIG5leHQ6ICgpID0+IGl0Lm5leHQoKS50aGVuKHRyYW5zZm9ybSksXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKGl0LnRocm93ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICByZXMudGhyb3cgPSAoZSkgPT4gaXQudGhyb3coZSkudGhlbih0cmFuc2Zvcm0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpdC5yZXR1cm4gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHJlcy5yZXR1cm4gPSAodikgPT4gaXQucmV0dXJuKHYpLnRoZW4odHJhbnNmb3JtKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/normalize.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js":
/*!************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   runStreamingCall: () => (/* binding */ runStreamingCall),\n/* harmony export */   runUnaryCall: () => (/* binding */ runUnaryCall)\n/* harmony export */ });\n/* harmony import */ var _interceptor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../interceptor.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/interceptor.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _signals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signals.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normalize.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/normalize.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * Runs a unary method with the given interceptors. Note that this function\n * is only used when implementing a Transport.\n */\nfunction runUnaryCall(opt) {\n    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_0__.applyInterceptors)(opt.next, opt.interceptors);\n    const [signal, abort, done] = setupSignal(opt);\n    const req = Object.assign(Object.assign({}, opt.req), { message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_1__.normalize)(opt.req.method.I, opt.req.message), signal });\n    return next(req).then((res) => {\n        done();\n        return res;\n    }, abort);\n}\n/**\n * Runs a server-streaming method with the given interceptors. Note that this\n * function is only used when implementing a Transport.\n */\nfunction runStreamingCall(opt) {\n    const next = (0,_interceptor_js__WEBPACK_IMPORTED_MODULE_0__.applyInterceptors)(opt.next, opt.interceptors);\n    const [signal, abort, done] = setupSignal(opt);\n    const req = Object.assign(Object.assign({}, opt.req), { message: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_1__.normalizeIterable)(opt.req.method.I, opt.req.message), signal });\n    let doneCalled = false;\n    // Call return on the request iterable to indicate\n    // that we will no longer consume it and it should\n    // cleanup any allocated resources.\n    signal.addEventListener(\"abort\", function () {\n        var _a, _b;\n        const it = opt.req.message[Symbol.asyncIterator]();\n        // If the signal is aborted due to an error, we want to throw\n        // the error to the request iterator.\n        if (!doneCalled) {\n            (_a = it.throw) === null || _a === void 0 ? void 0 : _a.call(it, this.reason).catch(() => {\n                // throw returns a promise, which we don't care about.\n                //\n                // Uncaught promises are thrown at sometime/somewhere by the event loop,\n                // this is to ensure error is caught and ignored.\n            });\n        }\n        (_b = it.return) === null || _b === void 0 ? void 0 : _b.call(it).catch(() => {\n            // return returns a promise, which we don't care about.\n            //\n            // Uncaught promises are thrown at sometime/somewhere by the event loop,\n            // this is to ensure error is caught and ignored.\n        });\n    });\n    return next(req).then((res) => {\n        return Object.assign(Object.assign({}, res), { message: {\n                [Symbol.asyncIterator]() {\n                    const it = res.message[Symbol.asyncIterator]();\n                    return {\n                        next() {\n                            return it.next().then((r) => {\n                                if (r.done == true) {\n                                    doneCalled = true;\n                                    done();\n                                }\n                                return r;\n                            }, abort);\n                        },\n                        // We deliberately omit throw/return.\n                    };\n                },\n            } });\n    }, abort);\n}\n/**\n * Create an AbortSignal for Transport implementations. The signal is available\n * in UnaryRequest and StreamingRequest, and is triggered when the call is\n * aborted (via a timeout or explicit cancellation), errored (e.g. when reading\n * an error from the server from the wire), or finished successfully.\n *\n * Transport implementations can pass the signal to HTTP clients to ensure that\n * there are no unused connections leak.\n *\n * Returns a tuple:\n * [0]: The signal, which is also aborted if the optional deadline is reached.\n * [1]: Function to call if the Transport encountered an error.\n * [2]: Function to call if the Transport finished without an error.\n */\nfunction setupSignal(opt) {\n    const { signal, cleanup } = (0,_signals_js__WEBPACK_IMPORTED_MODULE_2__.createDeadlineSignal)(opt.timeoutMs);\n    const controller = (0,_signals_js__WEBPACK_IMPORTED_MODULE_2__.createLinkedAbortController)(opt.signal, signal);\n    return [\n        controller.signal,\n        function abort(reason) {\n            // We peek at the deadline signal because fetch() will throw an error on\n            // abort that discards the signal reason.\n            const e = _connect_error_js__WEBPACK_IMPORTED_MODULE_3__.ConnectError.from(signal.aborted ? (0,_signals_js__WEBPACK_IMPORTED_MODULE_2__.getAbortSignalReason)(signal) : reason);\n            controller.abort(e);\n            cleanup();\n            return Promise.reject(e);\n        },\n        function done() {\n            cleanup();\n            controller.abort();\n        },\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBinarySerialization: () => (/* binding */ createBinarySerialization),\n/* harmony export */   createClientMethodSerializers: () => (/* binding */ createClientMethodSerializers),\n/* harmony export */   createJsonSerialization: () => (/* binding */ createJsonSerialization),\n/* harmony export */   createMethodSerializationLookup: () => (/* binding */ createMethodSerializationLookup),\n/* harmony export */   getJsonOptions: () => (/* binding */ getJsonOptions),\n/* harmony export */   limitSerialization: () => (/* binding */ limitSerialization)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _limit_io_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./limit-io.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Sets default JSON serialization options for connect-es.\n *\n * With standard protobuf JSON serialization, unknown JSON fields are\n * rejected by default. In connect-es, unknown JSON fields are ignored\n * by default.\n */\nfunction getJsonOptions(options) {\n    var _a;\n    const o = Object.assign({}, options);\n    (_a = o.ignoreUnknownFields) !== null && _a !== void 0 ? _a : (o.ignoreUnknownFields = true);\n    return o;\n}\n/**\n * Create an object that provides convenient access to request and response\n * message serialization for a given method.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createMethodSerializationLookup(method, binaryOptions, jsonOptions, limitOptions) {\n    const inputBinary = limitSerialization(createBinarySerialization(method.I, binaryOptions), limitOptions);\n    const inputJson = limitSerialization(createJsonSerialization(method.I, jsonOptions), limitOptions);\n    const outputBinary = limitSerialization(createBinarySerialization(method.O, binaryOptions), limitOptions);\n    const outputJson = limitSerialization(createJsonSerialization(method.O, jsonOptions), limitOptions);\n    return {\n        getI(useBinaryFormat) {\n            return useBinaryFormat ? inputBinary : inputJson;\n        },\n        getO(useBinaryFormat) {\n            return useBinaryFormat ? outputBinary : outputJson;\n        },\n    };\n}\n/**\n * Returns functions to normalize and serialize the input message\n * of an RPC, and to parse the output message of an RPC.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createClientMethodSerializers(method, useBinaryFormat, jsonOptions, binaryOptions) {\n    const input = useBinaryFormat\n        ? createBinarySerialization(method.I, binaryOptions)\n        : createJsonSerialization(method.I, jsonOptions);\n    const output = useBinaryFormat\n        ? createBinarySerialization(method.O, binaryOptions)\n        : createJsonSerialization(method.O, jsonOptions);\n    return { parse: output.parse, serialize: input.serialize };\n}\n/**\n * Apply I/O limits to a Serialization object, returning a new object.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction limitSerialization(serialization, limitOptions) {\n    return {\n        serialize(data) {\n            const bytes = serialization.serialize(data);\n            (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_0__.assertWriteMaxBytes)(limitOptions.writeMaxBytes, bytes.byteLength);\n            return bytes;\n        },\n        parse(data) {\n            (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_0__.assertReadMaxBytes)(limitOptions.readMaxBytes, data.byteLength, true);\n            return serialization.parse(data);\n        },\n    };\n}\n/**\n * Creates a Serialization object for serializing the given protobuf message\n * with the protobuf binary format.\n */\nfunction createBinarySerialization(messageType, options) {\n    return {\n        parse(data) {\n            try {\n                return messageType.fromBinary(data, options);\n            }\n            catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`parse binary: ${m}`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n            }\n        },\n        serialize(data) {\n            try {\n                return data.toBinary(options);\n            }\n            catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(`serialize binary: ${m}`, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n            }\n        },\n    };\n}\n/**\n * Creates a Serialization object for serializing the given protobuf message\n * with the protobuf canonical JSON encoding.\n *\n * By default, unknown fields are ignored.\n */\nfunction createJsonSerialization(messageType, options) {\n    var _a, _b;\n    const textEncoder = (_a = options === null || options === void 0 ? void 0 : options.textEncoder) !== null && _a !== void 0 ? _a : new TextEncoder();\n    const textDecoder = (_b = options === null || options === void 0 ? void 0 : options.textDecoder) !== null && _b !== void 0 ? _b : new TextDecoder();\n    const o = getJsonOptions(options);\n    return {\n        parse(data) {\n            try {\n                const json = textDecoder.decode(data);\n                return messageType.fromJsonString(json, o);\n            }\n            catch (e) {\n                throw _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError.from(e, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.InvalidArgument);\n            }\n        },\n        serialize(data) {\n            try {\n                const json = data.toJsonString(o);\n                return textEncoder.encode(json);\n            }\n            catch (e) {\n                throw _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError.from(e, _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n            }\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9zZXJpYWxpemF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ21EO0FBQ2pCO0FBQ3NDO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsWUFBWSxpRUFBbUI7QUFDL0I7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxZQUFZLGdFQUFrQjtBQUM5QjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJEQUFZLGtCQUFrQixFQUFFLEdBQUcsMENBQUk7QUFDakU7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDJEQUFZLHNCQUFzQixFQUFFLEdBQUcsMENBQUk7QUFDckU7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyREFBWSxTQUFTLDBDQUFJO0FBQy9DO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyREFBWSxTQUFTLDBDQUFJO0FBQy9DO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIkQ6XFxwcm9qZWN0c1xcYXRzXFxub2RlX21vZHVsZXNcXEBjb25uZWN0cnBjXFxjb25uZWN0XFxkaXN0XFxlc21cXHByb3RvY29sXFxzZXJpYWxpemF0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgVGhlIENvbm5lY3QgQXV0aG9yc1xuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBDb25uZWN0RXJyb3IgfSBmcm9tIFwiLi4vY29ubmVjdC1lcnJvci5qc1wiO1xuaW1wb3J0IHsgQ29kZSB9IGZyb20gXCIuLi9jb2RlLmpzXCI7XG5pbXBvcnQgeyBhc3NlcnRSZWFkTWF4Qnl0ZXMsIGFzc2VydFdyaXRlTWF4Qnl0ZXMgfSBmcm9tIFwiLi9saW1pdC1pby5qc1wiO1xuLyoqXG4gKiBTZXRzIGRlZmF1bHQgSlNPTiBzZXJpYWxpemF0aW9uIG9wdGlvbnMgZm9yIGNvbm5lY3QtZXMuXG4gKlxuICogV2l0aCBzdGFuZGFyZCBwcm90b2J1ZiBKU09OIHNlcmlhbGl6YXRpb24sIHVua25vd24gSlNPTiBmaWVsZHMgYXJlXG4gKiByZWplY3RlZCBieSBkZWZhdWx0LiBJbiBjb25uZWN0LWVzLCB1bmtub3duIEpTT04gZmllbGRzIGFyZSBpZ25vcmVkXG4gKiBieSBkZWZhdWx0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0SnNvbk9wdGlvbnMob3B0aW9ucykge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCBvID0gT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyk7XG4gICAgKF9hID0gby5pZ25vcmVVbmtub3duRmllbGRzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAoby5pZ25vcmVVbmtub3duRmllbGRzID0gdHJ1ZSk7XG4gICAgcmV0dXJuIG87XG59XG4vKipcbiAqIENyZWF0ZSBhbiBvYmplY3QgdGhhdCBwcm92aWRlcyBjb252ZW5pZW50IGFjY2VzcyB0byByZXF1ZXN0IGFuZCByZXNwb25zZVxuICogbWVzc2FnZSBzZXJpYWxpemF0aW9uIGZvciBhIGdpdmVuIG1ldGhvZC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU1ldGhvZFNlcmlhbGl6YXRpb25Mb29rdXAobWV0aG9kLCBiaW5hcnlPcHRpb25zLCBqc29uT3B0aW9ucywgbGltaXRPcHRpb25zKSB7XG4gICAgY29uc3QgaW5wdXRCaW5hcnkgPSBsaW1pdFNlcmlhbGl6YXRpb24oY3JlYXRlQmluYXJ5U2VyaWFsaXphdGlvbihtZXRob2QuSSwgYmluYXJ5T3B0aW9ucyksIGxpbWl0T3B0aW9ucyk7XG4gICAgY29uc3QgaW5wdXRKc29uID0gbGltaXRTZXJpYWxpemF0aW9uKGNyZWF0ZUpzb25TZXJpYWxpemF0aW9uKG1ldGhvZC5JLCBqc29uT3B0aW9ucyksIGxpbWl0T3B0aW9ucyk7XG4gICAgY29uc3Qgb3V0cHV0QmluYXJ5ID0gbGltaXRTZXJpYWxpemF0aW9uKGNyZWF0ZUJpbmFyeVNlcmlhbGl6YXRpb24obWV0aG9kLk8sIGJpbmFyeU9wdGlvbnMpLCBsaW1pdE9wdGlvbnMpO1xuICAgIGNvbnN0IG91dHB1dEpzb24gPSBsaW1pdFNlcmlhbGl6YXRpb24oY3JlYXRlSnNvblNlcmlhbGl6YXRpb24obWV0aG9kLk8sIGpzb25PcHRpb25zKSwgbGltaXRPcHRpb25zKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBnZXRJKHVzZUJpbmFyeUZvcm1hdCkge1xuICAgICAgICAgICAgcmV0dXJuIHVzZUJpbmFyeUZvcm1hdCA/IGlucHV0QmluYXJ5IDogaW5wdXRKc29uO1xuICAgICAgICB9LFxuICAgICAgICBnZXRPKHVzZUJpbmFyeUZvcm1hdCkge1xuICAgICAgICAgICAgcmV0dXJuIHVzZUJpbmFyeUZvcm1hdCA/IG91dHB1dEJpbmFyeSA6IG91dHB1dEpzb247XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8qKlxuICogUmV0dXJucyBmdW5jdGlvbnMgdG8gbm9ybWFsaXplIGFuZCBzZXJpYWxpemUgdGhlIGlucHV0IG1lc3NhZ2VcbiAqIG9mIGFuIFJQQywgYW5kIHRvIHBhcnNlIHRoZSBvdXRwdXQgbWVzc2FnZSBvZiBhbiBSUEMuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDbGllbnRNZXRob2RTZXJpYWxpemVycyhtZXRob2QsIHVzZUJpbmFyeUZvcm1hdCwganNvbk9wdGlvbnMsIGJpbmFyeU9wdGlvbnMpIHtcbiAgICBjb25zdCBpbnB1dCA9IHVzZUJpbmFyeUZvcm1hdFxuICAgICAgICA/IGNyZWF0ZUJpbmFyeVNlcmlhbGl6YXRpb24obWV0aG9kLkksIGJpbmFyeU9wdGlvbnMpXG4gICAgICAgIDogY3JlYXRlSnNvblNlcmlhbGl6YXRpb24obWV0aG9kLkksIGpzb25PcHRpb25zKTtcbiAgICBjb25zdCBvdXRwdXQgPSB1c2VCaW5hcnlGb3JtYXRcbiAgICAgICAgPyBjcmVhdGVCaW5hcnlTZXJpYWxpemF0aW9uKG1ldGhvZC5PLCBiaW5hcnlPcHRpb25zKVxuICAgICAgICA6IGNyZWF0ZUpzb25TZXJpYWxpemF0aW9uKG1ldGhvZC5PLCBqc29uT3B0aW9ucyk7XG4gICAgcmV0dXJuIHsgcGFyc2U6IG91dHB1dC5wYXJzZSwgc2VyaWFsaXplOiBpbnB1dC5zZXJpYWxpemUgfTtcbn1cbi8qKlxuICogQXBwbHkgSS9PIGxpbWl0cyB0byBhIFNlcmlhbGl6YXRpb24gb2JqZWN0LCByZXR1cm5pbmcgYSBuZXcgb2JqZWN0LlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbGltaXRTZXJpYWxpemF0aW9uKHNlcmlhbGl6YXRpb24sIGxpbWl0T3B0aW9ucykge1xuICAgIHJldHVybiB7XG4gICAgICAgIHNlcmlhbGl6ZShkYXRhKSB7XG4gICAgICAgICAgICBjb25zdCBieXRlcyA9IHNlcmlhbGl6YXRpb24uc2VyaWFsaXplKGRhdGEpO1xuICAgICAgICAgICAgYXNzZXJ0V3JpdGVNYXhCeXRlcyhsaW1pdE9wdGlvbnMud3JpdGVNYXhCeXRlcywgYnl0ZXMuYnl0ZUxlbmd0aCk7XG4gICAgICAgICAgICByZXR1cm4gYnl0ZXM7XG4gICAgICAgIH0sXG4gICAgICAgIHBhcnNlKGRhdGEpIHtcbiAgICAgICAgICAgIGFzc2VydFJlYWRNYXhCeXRlcyhsaW1pdE9wdGlvbnMucmVhZE1heEJ5dGVzLCBkYXRhLmJ5dGVMZW5ndGgsIHRydWUpO1xuICAgICAgICAgICAgcmV0dXJuIHNlcmlhbGl6YXRpb24ucGFyc2UoZGF0YSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIFNlcmlhbGl6YXRpb24gb2JqZWN0IGZvciBzZXJpYWxpemluZyB0aGUgZ2l2ZW4gcHJvdG9idWYgbWVzc2FnZVxuICogd2l0aCB0aGUgcHJvdG9idWYgYmluYXJ5IGZvcm1hdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmFyeVNlcmlhbGl6YXRpb24obWVzc2FnZVR5cGUsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBwYXJzZShkYXRhKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJldHVybiBtZXNzYWdlVHlwZS5mcm9tQmluYXJ5KGRhdGEsIG9wdGlvbnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBtID0gZSBpbnN0YW5jZW9mIEVycm9yID8gZS5tZXNzYWdlIDogU3RyaW5nKGUpO1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IoYHBhcnNlIGJpbmFyeTogJHttfWAsIENvZGUuSW50ZXJuYWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzZXJpYWxpemUoZGF0YSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZGF0YS50b0JpbmFyeShvcHRpb25zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbSA9IGUgaW5zdGFuY2VvZiBFcnJvciA/IGUubWVzc2FnZSA6IFN0cmluZyhlKTtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdEVycm9yKGBzZXJpYWxpemUgYmluYXJ5OiAke219YCwgQ29kZS5JbnRlcm5hbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIFNlcmlhbGl6YXRpb24gb2JqZWN0IGZvciBzZXJpYWxpemluZyB0aGUgZ2l2ZW4gcHJvdG9idWYgbWVzc2FnZVxuICogd2l0aCB0aGUgcHJvdG9idWYgY2Fub25pY2FsIEpTT04gZW5jb2RpbmcuXG4gKlxuICogQnkgZGVmYXVsdCwgdW5rbm93biBmaWVsZHMgYXJlIGlnbm9yZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVKc29uU2VyaWFsaXphdGlvbihtZXNzYWdlVHlwZSwgb3B0aW9ucykge1xuICAgIHZhciBfYSwgX2I7XG4gICAgY29uc3QgdGV4dEVuY29kZXIgPSAoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMudGV4dEVuY29kZXIpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG5ldyBUZXh0RW5jb2RlcigpO1xuICAgIGNvbnN0IHRleHREZWNvZGVyID0gKF9iID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnRleHREZWNvZGVyKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBuZXcgVGV4dERlY29kZXIoKTtcbiAgICBjb25zdCBvID0gZ2V0SnNvbk9wdGlvbnMob3B0aW9ucyk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcGFyc2UoZGF0YSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCBqc29uID0gdGV4dERlY29kZXIuZGVjb2RlKGRhdGEpO1xuICAgICAgICAgICAgICAgIHJldHVybiBtZXNzYWdlVHlwZS5mcm9tSnNvblN0cmluZyhqc29uLCBvKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgQ29ubmVjdEVycm9yLmZyb20oZSwgQ29kZS5JbnZhbGlkQXJndW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzZXJpYWxpemUoZGF0YSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCBqc29uID0gZGF0YS50b0pzb25TdHJpbmcobyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRleHRFbmNvZGVyLmVuY29kZShqc29uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgQ29ubmVjdEVycm9yLmZyb20oZSwgQ29kZS5JbnRlcm5hbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDeadlineSignal: () => (/* binding */ createDeadlineSignal),\n/* harmony export */   createLinkedAbortController: () => (/* binding */ createLinkedAbortController),\n/* harmony export */   getAbortSignalReason: () => (/* binding */ getAbortSignalReason)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Create an AbortController that is automatically aborted if one of the given\n * signals is aborted.\n *\n * For convenience, the linked AbortSignals can be undefined.\n *\n * If the controller or any of the signals is aborted, all event listeners are\n * removed.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createLinkedAbortController(...signals) {\n    const controller = new AbortController();\n    const sa = signals.filter((s) => s !== undefined).concat(controller.signal);\n    for (const signal of sa) {\n        if (signal.aborted) {\n            onAbort.apply(signal);\n            break;\n        }\n        signal.addEventListener(\"abort\", onAbort);\n    }\n    function onAbort() {\n        if (!controller.signal.aborted) {\n            controller.abort(getAbortSignalReason(this));\n        }\n        for (const signal of sa) {\n            signal.removeEventListener(\"abort\", onAbort);\n        }\n    }\n    return controller;\n}\n/**\n * Create a deadline signal. The returned object contains an AbortSignal, but\n * also a cleanup function to stop the timer, which must be called once the\n * calling code is no longer interested in the signal.\n *\n * Ideally, we would simply use AbortSignal.timeout(), but it is not widely\n * available yet.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createDeadlineSignal(timeoutMs) {\n    const controller = new AbortController();\n    const listener = () => {\n        controller.abort(new _connect_error_js__WEBPACK_IMPORTED_MODULE_0__.ConnectError(\"the operation timed out\", _code_js__WEBPACK_IMPORTED_MODULE_1__.Code.DeadlineExceeded));\n    };\n    let timeoutId;\n    if (timeoutMs !== undefined) {\n        if (timeoutMs <= 0)\n            listener();\n        else\n            timeoutId = setTimeout(listener, timeoutMs);\n    }\n    return {\n        signal: controller.signal,\n        cleanup: () => clearTimeout(timeoutId),\n    };\n}\n/**\n * Returns the reason why an AbortSignal was aborted. Returns undefined if the\n * signal has not been aborted.\n *\n * The property AbortSignal.reason is not widely available. This function\n * returns an AbortError if the signal is aborted, but reason is undefined.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction getAbortSignalReason(signal) {\n    if (!signal.aborted) {\n        return undefined;\n    }\n    if (signal.reason !== undefined) {\n        return signal.reason;\n    }\n    // AbortSignal.reason is available in Node.js v16, v18, and later,\n    // and in all browsers since early 2022.\n    const e = new Error(\"This operation was aborted\");\n    e.name = \"AbortError\";\n    return e;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC9zaWduYWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDbUQ7QUFDakI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDZCQUE2QiwyREFBWSw0QkFBNEIsMENBQUk7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxhdHNcXG5vZGVfbW9kdWxlc1xcQGNvbm5lY3RycGNcXGNvbm5lY3RcXGRpc3RcXGVzbVxccHJvdG9jb2xcXHNpZ25hbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuLi9jb25uZWN0LWVycm9yLmpzXCI7XG5pbXBvcnQgeyBDb2RlIH0gZnJvbSBcIi4uL2NvZGUuanNcIjtcbi8qKlxuICogQ3JlYXRlIGFuIEFib3J0Q29udHJvbGxlciB0aGF0IGlzIGF1dG9tYXRpY2FsbHkgYWJvcnRlZCBpZiBvbmUgb2YgdGhlIGdpdmVuXG4gKiBzaWduYWxzIGlzIGFib3J0ZWQuXG4gKlxuICogRm9yIGNvbnZlbmllbmNlLCB0aGUgbGlua2VkIEFib3J0U2lnbmFscyBjYW4gYmUgdW5kZWZpbmVkLlxuICpcbiAqIElmIHRoZSBjb250cm9sbGVyIG9yIGFueSBvZiB0aGUgc2lnbmFscyBpcyBhYm9ydGVkLCBhbGwgZXZlbnQgbGlzdGVuZXJzIGFyZVxuICogcmVtb3ZlZC5cbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUxpbmtlZEFib3J0Q29udHJvbGxlciguLi5zaWduYWxzKSB7XG4gICAgY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICBjb25zdCBzYSA9IHNpZ25hbHMuZmlsdGVyKChzKSA9PiBzICE9PSB1bmRlZmluZWQpLmNvbmNhdChjb250cm9sbGVyLnNpZ25hbCk7XG4gICAgZm9yIChjb25zdCBzaWduYWwgb2Ygc2EpIHtcbiAgICAgICAgaWYgKHNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgICBvbkFib3J0LmFwcGx5KHNpZ25hbCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIG9uQWJvcnQpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvbkFib3J0KCkge1xuICAgICAgICBpZiAoIWNvbnRyb2xsZXIuc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXIuYWJvcnQoZ2V0QWJvcnRTaWduYWxSZWFzb24odGhpcykpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3Qgc2lnbmFsIG9mIHNhKSB7XG4gICAgICAgICAgICBzaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIG9uQWJvcnQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBjb250cm9sbGVyO1xufVxuLyoqXG4gKiBDcmVhdGUgYSBkZWFkbGluZSBzaWduYWwuIFRoZSByZXR1cm5lZCBvYmplY3QgY29udGFpbnMgYW4gQWJvcnRTaWduYWwsIGJ1dFxuICogYWxzbyBhIGNsZWFudXAgZnVuY3Rpb24gdG8gc3RvcCB0aGUgdGltZXIsIHdoaWNoIG11c3QgYmUgY2FsbGVkIG9uY2UgdGhlXG4gKiBjYWxsaW5nIGNvZGUgaXMgbm8gbG9uZ2VyIGludGVyZXN0ZWQgaW4gdGhlIHNpZ25hbC5cbiAqXG4gKiBJZGVhbGx5LCB3ZSB3b3VsZCBzaW1wbHkgdXNlIEFib3J0U2lnbmFsLnRpbWVvdXQoKSwgYnV0IGl0IGlzIG5vdCB3aWRlbHlcbiAqIGF2YWlsYWJsZSB5ZXQuXG4gKlxuICogQHByaXZhdGUgSW50ZXJuYWwgY29kZSwgZG9lcyBub3QgZm9sbG93IHNlbWFudGljIHZlcnNpb25pbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEZWFkbGluZVNpZ25hbCh0aW1lb3V0TXMpIHtcbiAgICBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgIGNvbnN0IGxpc3RlbmVyID0gKCkgPT4ge1xuICAgICAgICBjb250cm9sbGVyLmFib3J0KG5ldyBDb25uZWN0RXJyb3IoXCJ0aGUgb3BlcmF0aW9uIHRpbWVkIG91dFwiLCBDb2RlLkRlYWRsaW5lRXhjZWVkZWQpKTtcbiAgICB9O1xuICAgIGxldCB0aW1lb3V0SWQ7XG4gICAgaWYgKHRpbWVvdXRNcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGlmICh0aW1lb3V0TXMgPD0gMClcbiAgICAgICAgICAgIGxpc3RlbmVyKCk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHRpbWVvdXRJZCA9IHNldFRpbWVvdXQobGlzdGVuZXIsIHRpbWVvdXRNcyk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHNpZ25hbDogY29udHJvbGxlci5zaWduYWwsXG4gICAgICAgIGNsZWFudXA6ICgpID0+IGNsZWFyVGltZW91dCh0aW1lb3V0SWQpLFxuICAgIH07XG59XG4vKipcbiAqIFJldHVybnMgdGhlIHJlYXNvbiB3aHkgYW4gQWJvcnRTaWduYWwgd2FzIGFib3J0ZWQuIFJldHVybnMgdW5kZWZpbmVkIGlmIHRoZVxuICogc2lnbmFsIGhhcyBub3QgYmVlbiBhYm9ydGVkLlxuICpcbiAqIFRoZSBwcm9wZXJ0eSBBYm9ydFNpZ25hbC5yZWFzb24gaXMgbm90IHdpZGVseSBhdmFpbGFibGUuIFRoaXMgZnVuY3Rpb25cbiAqIHJldHVybnMgYW4gQWJvcnRFcnJvciBpZiB0aGUgc2lnbmFsIGlzIGFib3J0ZWQsIGJ1dCByZWFzb24gaXMgdW5kZWZpbmVkLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QWJvcnRTaWduYWxSZWFzb24oc2lnbmFsKSB7XG4gICAgaWYgKCFzaWduYWwuYWJvcnRlZCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAoc2lnbmFsLnJlYXNvbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBzaWduYWwucmVhc29uO1xuICAgIH1cbiAgICAvLyBBYm9ydFNpZ25hbC5yZWFzb24gaXMgYXZhaWxhYmxlIGluIE5vZGUuanMgdjE2LCB2MTgsIGFuZCBsYXRlcixcbiAgICAvLyBhbmQgaW4gYWxsIGJyb3dzZXJzIHNpbmNlIGVhcmx5IDIwMjIuXG4gICAgY29uc3QgZSA9IG5ldyBFcnJvcihcIlRoaXMgb3BlcmF0aW9uIHdhcyBhYm9ydGVkXCIpO1xuICAgIGUubmFtZSA9IFwiQWJvcnRFcnJvclwiO1xuICAgIHJldHVybiBlO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/signals.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createUniversalMethodHandler: () => (/* binding */ createUniversalMethodHandler),\n/* harmony export */   createUniversalServiceHandlers: () => (/* binding */ createUniversalServiceHandlers),\n/* harmony export */   negotiateProtocol: () => (/* binding */ negotiateProtocol),\n/* harmony export */   validateUniversalHandlerOptions: () => (/* binding */ validateUniversalHandlerOptions)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bufbuild/protobuf */ \"(rsc)/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\n/* harmony import */ var _universal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./universal.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\");\n/* harmony import */ var _content_type_matcher_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./content-type-matcher.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/content-type-matcher.js\");\n/* harmony import */ var _limit_io_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./limit-io.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/limit-io.js\");\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n/**\n * Asserts that the options are within sane limits, and returns default values\n * where no value is provided.\n *\n * Note that this function does not set default values for `acceptCompression`.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateUniversalHandlerOptions(opt) {\n    var _a, _b, _c;\n    opt !== null && opt !== void 0 ? opt : (opt = {});\n    const acceptCompression = opt.acceptCompression\n        ? [...opt.acceptCompression]\n        : [];\n    const requireConnectProtocolHeader = (_a = opt.requireConnectProtocolHeader) !== null && _a !== void 0 ? _a : false;\n    const maxTimeoutMs = (_b = opt.maxTimeoutMs) !== null && _b !== void 0 ? _b : Number.MAX_SAFE_INTEGER;\n    return Object.assign(Object.assign({ acceptCompression }, (0,_limit_io_js__WEBPACK_IMPORTED_MODULE_0__.validateReadWriteMaxBytes)(opt.readMaxBytes, opt.writeMaxBytes, opt.compressMinBytes)), { jsonOptions: opt.jsonOptions, binaryOptions: opt.binaryOptions, maxTimeoutMs, shutdownSignal: opt.shutdownSignal, requireConnectProtocolHeader, interceptors: (_c = opt.interceptors) !== null && _c !== void 0 ? _c : [] });\n}\n/**\n * For the given service implementation, return a universal handler for each\n * RPC. The handler serves the given protocols.\n *\n * At least one protocol is required.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createUniversalServiceHandlers(spec, protocols) {\n    return Object.entries(spec.methods).map(([, implSpec]) => createUniversalMethodHandler(implSpec, protocols));\n}\n/**\n * Return a universal handler for the given RPC implementation.\n * The handler serves the given protocols.\n *\n * At least one protocol is required.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createUniversalMethodHandler(spec, protocols) {\n    return negotiateProtocol(protocols.map((f) => f(spec)));\n}\n/**\n * Create a universal handler that negotiates the protocol.\n *\n * This functions takes one or more handlers - all for the same RPC, but for\n * different protocols - and returns a single handler that looks at the\n * Content-Type header and the HTTP verb of the incoming request to select\n * the appropriate protocol-specific handler.\n *\n * Raises an error if no protocol handlers were provided, or if they do not\n * handle exactly the same RPC.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction negotiateProtocol(protocolHandlers) {\n    if (protocolHandlers.length == 0) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(\"at least one protocol is required\", _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n    }\n    const service = protocolHandlers[0].service;\n    const method = protocolHandlers[0].method;\n    const requestPath = protocolHandlers[0].requestPath;\n    if (protocolHandlers.some((h) => h.service !== service || h.method !== method)) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(\"cannot negotiate protocol for different RPCs\", _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n    }\n    if (protocolHandlers.some((h) => h.requestPath !== requestPath)) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_1__.ConnectError(\"cannot negotiate protocol for different requestPaths\", _code_js__WEBPACK_IMPORTED_MODULE_2__.Code.Internal);\n    }\n    async function protocolNegotiatingHandler(request) {\n        var _a;\n        if (method.kind == _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.MethodKind.BiDiStreaming &&\n            request.httpVersion.startsWith(\"1.\")) {\n            return Object.assign(Object.assign({}, _universal_js__WEBPACK_IMPORTED_MODULE_4__.uResponseVersionNotSupported), { \n                // Clients coded to expect full-duplex connections may hang if they've\n                // mistakenly negotiated HTTP/1.1. To unblock them, we must close the\n                // underlying TCP connection.\n                header: new Headers({ Connection: \"close\" }) });\n        }\n        const contentType = (_a = request.header.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"\";\n        const matchingMethod = protocolHandlers.filter((h) => h.allowedMethods.includes(request.method));\n        if (matchingMethod.length == 0) {\n            return _universal_js__WEBPACK_IMPORTED_MODULE_4__.uResponseMethodNotAllowed;\n        }\n        // If Content-Type is unset but only one handler matches, use it.\n        if (matchingMethod.length == 1 && contentType === \"\") {\n            const onlyMatch = matchingMethod[0];\n            return onlyMatch(request);\n        }\n        const matchingContentTypes = matchingMethod.filter((h) => h.supportedContentType(contentType));\n        if (matchingContentTypes.length == 0) {\n            return _universal_js__WEBPACK_IMPORTED_MODULE_4__.uResponseUnsupportedMediaType;\n        }\n        const firstMatch = matchingContentTypes[0];\n        return firstMatch(request);\n    }\n    return Object.assign(protocolNegotiatingHandler, {\n        service,\n        method,\n        requestPath,\n        supportedContentType: (0,_content_type_matcher_js__WEBPACK_IMPORTED_MODULE_5__.contentTypeMatcher)(...protocolHandlers.map((h) => h.supportedContentType)),\n        protocolNames: protocolHandlers\n            .flatMap((h) => h.protocolNames)\n            .filter((value, index, array) => array.indexOf(value) === index),\n        allowedMethods: protocolHandlers\n            .flatMap((h) => h.allowedMethods)\n            .filter((value, index, array) => array.indexOf(value) === index),\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertByteStreamRequest: () => (/* binding */ assertByteStreamRequest),\n/* harmony export */   uResponseMethodNotAllowed: () => (/* binding */ uResponseMethodNotAllowed),\n/* harmony export */   uResponseNotFound: () => (/* binding */ uResponseNotFound),\n/* harmony export */   uResponseOk: () => (/* binding */ uResponseOk),\n/* harmony export */   uResponseUnsupportedMediaType: () => (/* binding */ uResponseUnsupportedMediaType),\n/* harmony export */   uResponseVersionNotSupported: () => (/* binding */ uResponseVersionNotSupported)\n/* harmony export */ });\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Assert that the given UniversalServerRequest has a byte stream body, not\n * a JSON value.\n *\n * We accept a JSON object or a byte stream in server requests.\n * In practice, only Connect unary handlers will receive a parse\n * JSON object. Other call-sites can use this assertion to narrow\n * the union type. A failure in such a call-sites indicates that\n * the contract between a server framework and the connect-node \\\n * handler is broken.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction assertByteStreamRequest(req) {\n    if (typeof req.body == \"object\" &&\n        req.body !== null &&\n        Symbol.asyncIterator in req.body) {\n        return;\n    }\n    throw new Error(\"byte stream required, but received JSON\");\n}\n/**\n * HTTP 200 OK\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst uResponseOk = {\n    status: 200,\n};\n/**\n * HTTP 404 Not Found\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst uResponseNotFound = {\n    status: 404,\n};\n/**\n * HTTP 415 Unsupported Media Type\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst uResponseUnsupportedMediaType = {\n    status: 415,\n};\n/**\n * HTTP 405 Method Not Allowed\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst uResponseMethodNotAllowed = {\n    status: 405,\n};\n/**\n * HTTP 505 Version Not Supported\n *\n * @private Internal code, does not follow semantic versioning.\n */\nconst uResponseVersionNotSupported = {\n    status: 505,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9wcm90b2NvbC91bml2ZXJzYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxhdHNcXG5vZGVfbW9kdWxlc1xcQGNvbm5lY3RycGNcXGNvbm5lY3RcXGRpc3RcXGVzbVxccHJvdG9jb2xcXHVuaXZlcnNhbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IFRoZSBDb25uZWN0IEF1dGhvcnNcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBBc3NlcnQgdGhhdCB0aGUgZ2l2ZW4gVW5pdmVyc2FsU2VydmVyUmVxdWVzdCBoYXMgYSBieXRlIHN0cmVhbSBib2R5LCBub3RcbiAqIGEgSlNPTiB2YWx1ZS5cbiAqXG4gKiBXZSBhY2NlcHQgYSBKU09OIG9iamVjdCBvciBhIGJ5dGUgc3RyZWFtIGluIHNlcnZlciByZXF1ZXN0cy5cbiAqIEluIHByYWN0aWNlLCBvbmx5IENvbm5lY3QgdW5hcnkgaGFuZGxlcnMgd2lsbCByZWNlaXZlIGEgcGFyc2VcbiAqIEpTT04gb2JqZWN0LiBPdGhlciBjYWxsLXNpdGVzIGNhbiB1c2UgdGhpcyBhc3NlcnRpb24gdG8gbmFycm93XG4gKiB0aGUgdW5pb24gdHlwZS4gQSBmYWlsdXJlIGluIHN1Y2ggYSBjYWxsLXNpdGVzIGluZGljYXRlcyB0aGF0XG4gKiB0aGUgY29udHJhY3QgYmV0d2VlbiBhIHNlcnZlciBmcmFtZXdvcmsgYW5kIHRoZSBjb25uZWN0LW5vZGUgXFxcbiAqIGhhbmRsZXIgaXMgYnJva2VuLlxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0Qnl0ZVN0cmVhbVJlcXVlc3QocmVxKSB7XG4gICAgaWYgKHR5cGVvZiByZXEuYm9keSA9PSBcIm9iamVjdFwiICYmXG4gICAgICAgIHJlcS5ib2R5ICE9PSBudWxsICYmXG4gICAgICAgIFN5bWJvbC5hc3luY0l0ZXJhdG9yIGluIHJlcS5ib2R5KSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiYnl0ZSBzdHJlYW0gcmVxdWlyZWQsIGJ1dCByZWNlaXZlZCBKU09OXCIpO1xufVxuLyoqXG4gKiBIVFRQIDIwMCBPS1xuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgdVJlc3BvbnNlT2sgPSB7XG4gICAgc3RhdHVzOiAyMDAsXG59O1xuLyoqXG4gKiBIVFRQIDQwNCBOb3QgRm91bmRcbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IHVSZXNwb25zZU5vdEZvdW5kID0ge1xuICAgIHN0YXR1czogNDA0LFxufTtcbi8qKlxuICogSFRUUCA0MTUgVW5zdXBwb3J0ZWQgTWVkaWEgVHlwZVxuICpcbiAqIEBwcml2YXRlIEludGVybmFsIGNvZGUsIGRvZXMgbm90IGZvbGxvdyBzZW1hbnRpYyB2ZXJzaW9uaW5nLlxuICovXG5leHBvcnQgY29uc3QgdVJlc3BvbnNlVW5zdXBwb3J0ZWRNZWRpYVR5cGUgPSB7XG4gICAgc3RhdHVzOiA0MTUsXG59O1xuLyoqXG4gKiBIVFRQIDQwNSBNZXRob2QgTm90IEFsbG93ZWRcbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IHVSZXNwb25zZU1ldGhvZE5vdEFsbG93ZWQgPSB7XG4gICAgc3RhdHVzOiA0MDUsXG59O1xuLyoqXG4gKiBIVFRQIDUwNSBWZXJzaW9uIE5vdCBTdXBwb3J0ZWRcbiAqXG4gKiBAcHJpdmF0ZSBJbnRlcm5hbCBjb2RlLCBkb2VzIG5vdCBmb2xsb3cgc2VtYW50aWMgdmVyc2lvbmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IHVSZXNwb25zZVZlcnNpb25Ob3RTdXBwb3J0ZWQgPSB7XG4gICAgc3RhdHVzOiA1MDUsXG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@connectrpc/connect/dist/esm/router.js":
/*!*************************************************************!*\
  !*** ./node_modules/@connectrpc/connect/dist/esm/router.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConnectRouter: () => (/* binding */ createConnectRouter)\n/* harmony export */ });\n/* harmony import */ var _connect_error_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./connect-error.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/connect-error.js\");\n/* harmony import */ var _code_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./code.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/code.js\");\n/* harmony import */ var _implementation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./implementation.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/implementation.js\");\n/* harmony import */ var _protocol_grpc_web_handler_factory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./protocol-grpc-web/handler-factory.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/handler-factory.js\");\n/* harmony import */ var _protocol_grpc_handler_factory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./protocol-grpc/handler-factory.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-grpc/handler-factory.js\");\n/* harmony import */ var _protocol_connect_handler_factory_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./protocol-connect/handler-factory.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol-connect/handler-factory.js\");\n/* harmony import */ var _protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./protocol/universal-handler.js */ \"(rsc)/./node_modules/@connectrpc/connect/dist/esm/protocol/universal-handler.js\");\n// Copyright 2021-2024 The Connect Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n/**\n * Create a new ConnectRouter.\n */\nfunction createConnectRouter(routerOptions) {\n    const base = whichProtocols(routerOptions);\n    const handlers = [];\n    return {\n        handlers,\n        service(service, implementation, options) {\n            const { protocols } = whichProtocols(options, base);\n            handlers.push(...(0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.createUniversalServiceHandlers)((0,_implementation_js__WEBPACK_IMPORTED_MODULE_1__.createServiceImplSpec)(service, implementation), protocols));\n            return this;\n        },\n        rpc(serviceOrMethod, methodOrImpl, implementationOrOptions, options) {\n            let service;\n            let method;\n            let impl;\n            let opt;\n            if (\"typeName\" in serviceOrMethod) {\n                service = serviceOrMethod;\n                method = methodOrImpl;\n                impl = implementationOrOptions;\n                opt = options;\n            }\n            else {\n                service = Object.assign(Object.assign({}, serviceOrMethod.service), { methods: {} });\n                method = serviceOrMethod;\n                impl = methodOrImpl;\n                opt = implementationOrOptions;\n            }\n            const { protocols } = whichProtocols(opt, base);\n            handlers.push((0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.createUniversalMethodHandler)((0,_implementation_js__WEBPACK_IMPORTED_MODULE_1__.createMethodImplSpec)(service, method, impl), protocols));\n            return this;\n        },\n    };\n}\nfunction whichProtocols(options, base) {\n    if (base && !options) {\n        return base;\n    }\n    const opt = base\n        ? Object.assign(Object.assign({}, (0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.validateUniversalHandlerOptions)(base.options)), options) : Object.assign(Object.assign({}, options), (0,_protocol_universal_handler_js__WEBPACK_IMPORTED_MODULE_0__.validateUniversalHandlerOptions)(options !== null && options !== void 0 ? options : {}));\n    const protocols = [];\n    if ((options === null || options === void 0 ? void 0 : options.grpc) !== false) {\n        protocols.push((0,_protocol_grpc_handler_factory_js__WEBPACK_IMPORTED_MODULE_2__.createHandlerFactory)(opt));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.grpcWeb) !== false) {\n        protocols.push((0,_protocol_grpc_web_handler_factory_js__WEBPACK_IMPORTED_MODULE_3__.createHandlerFactory)(opt));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.connect) !== false) {\n        protocols.push((0,_protocol_connect_handler_factory_js__WEBPACK_IMPORTED_MODULE_4__.createHandlerFactory)(opt));\n    }\n    if (protocols.length === 0) {\n        throw new _connect_error_js__WEBPACK_IMPORTED_MODULE_5__.ConnectError(\"cannot create handler, all protocols are disabled\", _code_js__WEBPACK_IMPORTED_MODULE_6__.Code.InvalidArgument);\n    }\n    return {\n        options: opt,\n        protocols,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbm5lY3RycGMvY29ubmVjdC9kaXN0L2VzbS9yb3V0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNrRDtBQUNqQjtBQUNrRDtBQUNvQjtBQUNQO0FBQ007QUFDMkM7QUFDako7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFlBQVk7QUFDaEMsNkJBQTZCLDhGQUE4QixDQUFDLHlFQUFxQjtBQUNqRjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsOEJBQThCLGFBQWE7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsWUFBWTtBQUNoQywwQkFBMEIsNEZBQTRCLENBQUMsd0VBQW9CO0FBQzNFO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLEVBQUUsK0ZBQStCLDBEQUEwRCxZQUFZLCtGQUErQixzREFBc0Q7QUFDcE87QUFDQTtBQUNBLHVCQUF1Qix1RkFBa0I7QUFDekM7QUFDQTtBQUNBLHVCQUF1QiwyRkFBcUI7QUFDNUM7QUFDQTtBQUNBLHVCQUF1QiwwRkFBcUI7QUFDNUM7QUFDQTtBQUNBLGtCQUFrQiwyREFBWSxzREFBc0QsMENBQUk7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxccHJvamVjdHNcXGF0c1xcbm9kZV9tb2R1bGVzXFxAY29ubmVjdHJwY1xcY29ubmVjdFxcZGlzdFxcZXNtXFxyb3V0ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBUaGUgQ29ubmVjdCBBdXRob3JzXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IENvbm5lY3RFcnJvciB9IGZyb20gXCIuL2Nvbm5lY3QtZXJyb3IuanNcIjtcbmltcG9ydCB7IENvZGUgfSBmcm9tIFwiLi9jb2RlLmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVNZXRob2RJbXBsU3BlYywgY3JlYXRlU2VydmljZUltcGxTcGVjLCB9IGZyb20gXCIuL2ltcGxlbWVudGF0aW9uLmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVIYW5kbGVyRmFjdG9yeSBhcyBoYW5kbGVyRmFjdG9yeUdycGNXZWIgfSBmcm9tIFwiLi9wcm90b2NvbC1ncnBjLXdlYi9oYW5kbGVyLWZhY3RvcnkuanNcIjtcbmltcG9ydCB7IGNyZWF0ZUhhbmRsZXJGYWN0b3J5IGFzIGhhbmRsZXJGYWN0b3J5R3JwYyB9IGZyb20gXCIuL3Byb3RvY29sLWdycGMvaGFuZGxlci1mYWN0b3J5LmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVIYW5kbGVyRmFjdG9yeSBhcyBoYW5kbGVyRmFjdG9yeUNvbm5lY3QgfSBmcm9tIFwiLi9wcm90b2NvbC1jb25uZWN0L2hhbmRsZXItZmFjdG9yeS5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlVW5pdmVyc2FsTWV0aG9kSGFuZGxlciwgY3JlYXRlVW5pdmVyc2FsU2VydmljZUhhbmRsZXJzLCB2YWxpZGF0ZVVuaXZlcnNhbEhhbmRsZXJPcHRpb25zLCB9IGZyb20gXCIuL3Byb3RvY29sL3VuaXZlcnNhbC1oYW5kbGVyLmpzXCI7XG4vKipcbiAqIENyZWF0ZSBhIG5ldyBDb25uZWN0Um91dGVyLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29ubmVjdFJvdXRlcihyb3V0ZXJPcHRpb25zKSB7XG4gICAgY29uc3QgYmFzZSA9IHdoaWNoUHJvdG9jb2xzKHJvdXRlck9wdGlvbnMpO1xuICAgIGNvbnN0IGhhbmRsZXJzID0gW107XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaGFuZGxlcnMsXG4gICAgICAgIHNlcnZpY2Uoc2VydmljZSwgaW1wbGVtZW50YXRpb24sIG9wdGlvbnMpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgcHJvdG9jb2xzIH0gPSB3aGljaFByb3RvY29scyhvcHRpb25zLCBiYXNlKTtcbiAgICAgICAgICAgIGhhbmRsZXJzLnB1c2goLi4uY3JlYXRlVW5pdmVyc2FsU2VydmljZUhhbmRsZXJzKGNyZWF0ZVNlcnZpY2VJbXBsU3BlYyhzZXJ2aWNlLCBpbXBsZW1lbnRhdGlvbiksIHByb3RvY29scykpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgICAgIHJwYyhzZXJ2aWNlT3JNZXRob2QsIG1ldGhvZE9ySW1wbCwgaW1wbGVtZW50YXRpb25Pck9wdGlvbnMsIG9wdGlvbnMpIHtcbiAgICAgICAgICAgIGxldCBzZXJ2aWNlO1xuICAgICAgICAgICAgbGV0IG1ldGhvZDtcbiAgICAgICAgICAgIGxldCBpbXBsO1xuICAgICAgICAgICAgbGV0IG9wdDtcbiAgICAgICAgICAgIGlmIChcInR5cGVOYW1lXCIgaW4gc2VydmljZU9yTWV0aG9kKSB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA9IHNlcnZpY2VPck1ldGhvZDtcbiAgICAgICAgICAgICAgICBtZXRob2QgPSBtZXRob2RPckltcGw7XG4gICAgICAgICAgICAgICAgaW1wbCA9IGltcGxlbWVudGF0aW9uT3JPcHRpb25zO1xuICAgICAgICAgICAgICAgIG9wdCA9IG9wdGlvbnM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZXJ2aWNlID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBzZXJ2aWNlT3JNZXRob2Quc2VydmljZSksIHsgbWV0aG9kczoge30gfSk7XG4gICAgICAgICAgICAgICAgbWV0aG9kID0gc2VydmljZU9yTWV0aG9kO1xuICAgICAgICAgICAgICAgIGltcGwgPSBtZXRob2RPckltcGw7XG4gICAgICAgICAgICAgICAgb3B0ID0gaW1wbGVtZW50YXRpb25Pck9wdGlvbnM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB7IHByb3RvY29scyB9ID0gd2hpY2hQcm90b2NvbHMob3B0LCBiYXNlKTtcbiAgICAgICAgICAgIGhhbmRsZXJzLnB1c2goY3JlYXRlVW5pdmVyc2FsTWV0aG9kSGFuZGxlcihjcmVhdGVNZXRob2RJbXBsU3BlYyhzZXJ2aWNlLCBtZXRob2QsIGltcGwpLCBwcm90b2NvbHMpKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgIH07XG59XG5mdW5jdGlvbiB3aGljaFByb3RvY29scyhvcHRpb25zLCBiYXNlKSB7XG4gICAgaWYgKGJhc2UgJiYgIW9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIGJhc2U7XG4gICAgfVxuICAgIGNvbnN0IG9wdCA9IGJhc2VcbiAgICAgICAgPyBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHZhbGlkYXRlVW5pdmVyc2FsSGFuZGxlck9wdGlvbnMoYmFzZS5vcHRpb25zKSksIG9wdGlvbnMpIDogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zKSwgdmFsaWRhdGVVbml2ZXJzYWxIYW5kbGVyT3B0aW9ucyhvcHRpb25zICE9PSBudWxsICYmIG9wdGlvbnMgIT09IHZvaWQgMCA/IG9wdGlvbnMgOiB7fSkpO1xuICAgIGNvbnN0IHByb3RvY29scyA9IFtdO1xuICAgIGlmICgob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmdycGMpICE9PSBmYWxzZSkge1xuICAgICAgICBwcm90b2NvbHMucHVzaChoYW5kbGVyRmFjdG9yeUdycGMob3B0KSk7XG4gICAgfVxuICAgIGlmICgob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmdycGNXZWIpICE9PSBmYWxzZSkge1xuICAgICAgICBwcm90b2NvbHMucHVzaChoYW5kbGVyRmFjdG9yeUdycGNXZWIob3B0KSk7XG4gICAgfVxuICAgIGlmICgob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmNvbm5lY3QpICE9PSBmYWxzZSkge1xuICAgICAgICBwcm90b2NvbHMucHVzaChoYW5kbGVyRmFjdG9yeUNvbm5lY3Qob3B0KSk7XG4gICAgfVxuICAgIGlmIChwcm90b2NvbHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBDb25uZWN0RXJyb3IoXCJjYW5ub3QgY3JlYXRlIGhhbmRsZXIsIGFsbCBwcm90b2NvbHMgYXJlIGRpc2FibGVkXCIsIENvZGUuSW52YWxpZEFyZ3VtZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb3B0aW9uczogb3B0LFxuICAgICAgICBwcm90b2NvbHMsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@connectrpc/connect/dist/esm/router.js\n");

/***/ })

};
;